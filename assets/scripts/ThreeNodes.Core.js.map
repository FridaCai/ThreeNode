{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2faab9837f031a91a73d","webpack:///./threenodes/Core.coffee","webpack:///./threenodes/nodes/collections/Nodes.coffee","webpack:///external \"_\"","webpack:///external \"Backbone\"","webpack:///./threenodes/nodes/models/Node.coffee","webpack:///./threenodes/utils/Utils.coffee","webpack:///./threenodes/connections/collections/Connections.coffee","webpack:///./threenodes/connections/models/Connection.coffee","webpack:///./threenodes/groups/collections/Groups.coffee","webpack:///./threenodes/groups/models/Group.coffee","webpack:///./threenodes/linkers/collections/Linkers.coffee","webpack:///./threenodes/utils/Indexer.coffee","webpack:///./threenodes/db.coffee","webpack:///./threenodes/linkers/models/Linker.coffee"],"names":[],"mappings":"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","file":"ThreeNodes.Core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"_\"), require(\"Backbone\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"Backbone\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Core\"] = factory(require(\"_\"), require(\"Backbone\"));\n\telse\n\t\troot[\"ThreeNodes\"] = root[\"ThreeNodes\"] || {}, root[\"ThreeNodes\"][\"Core\"] = factory(root[\"_\"], root[\"Backbone\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2faab9837f031a91a73d","Nodes = require './nodes/collections/Nodes'\nNode = require './nodes/models/Node'\n\nConnections = require './connections/collections/Connections'\nConnection = require './connections/models/Connection'\n\nGroups = require './groups/collections/Groups'\nGroup = require './groups/models/Group'\n\nLinkers = require './linkers/collections/Linkers'\n\n# Frida. please find better solution.\nIndexer = require 'threenodes/utils/Indexer'\n\nDB = require './db'\n\n#require 'jquery'\n\n#### App\nclass Core\n  @fields: {models:{}, views: {}}\n  @nodes: {models:{}, views: {}}\n  # @groups: {models: {}, views: {}}\n  \n  \n  constructor: (options) ->\n    @id = indexer.getUID()\n\n    # Default settings\n    settings =\n      test: false\n      player_mode: false\n      direction: true\n    @settings = $.extend({}, settings, options)\n\n    @groups = new Groups([])\n    @linkers = new Linkers([])\n    @nodes = new Nodes([], {settings: @settings})\n    @connections = new Connections()\n\n    # for testing\n    @Linker=require './linkers/models/Linker'\n\n    @head = null # null or groupid\n\n    # @nodes.bind('node:renderConnections', @renderConnectionsByNode.bind(@))\n    # @groups.bind('node:renderConnections', @renderConnectionsByGroup.bind(@))\n\n    # @nodes.bind \"connections:removed\", (n)=>@connections.removeByNode(n)\n    # @groups.bind \"connections:removed\", (g)=>@connections.removeByGroup(g)\n    # @nodes.bind \"connection:create\", (op) =>@connections.create(op)\n    # @groups.bind \"connection:create\", (op) =>@connections.create(op)\n\n\n  createGroup: (nodes)->\n    index = Indexer.getInstance().getUID()\n    db.updateProperty({\n      id: @id,\n      nodes: @nodes,\n      groups: @groups,\n      connections: @connections\n    })\n    db.createGroup(nodes, index)    \n    @refreshDatamodelAccordingToDB(db)\n\n    \n    # group = new Group({nodes: nodes})\n    # @groups.add(group)\n    # @nodes.remove(nodes)\n    # @connections.render()\n\n  \n  renderConnectionsByNode: (node) ->\n    @connections.renderConnections(node)\n\n  renderConnectionsByGroup:(group) ->\n    group.get('nodes').map((n)->\n      @connections.renderConnections(n)\n    , @)\n    @connections.renderConnections(group)\n    \n\n  @addFieldType: (fieldName, field) ->\n    Core.fields.models[fieldName] = field\n    return true\n\n  @addFieldView: (fieldName, fieldView) ->\n    Core.fields.views[fieldName] = fieldView\n    return true\n\n  @addNodeType: (nodeName, nodeType) ->\n    Core.nodes.models[nodeName] = nodeType\n    return true\n\n  @addNodeView: (viewName, nodeView) ->\n    Core.nodes.views[viewName] = nodeView\n    return true\n\n  dump: () =>\n    db.updateProperty({\n      nodes: @nodes\n      groups: @groups\n      connections: @connections\n      id: @id\n    })\n    res = {\n      id: db.id,\n      connections: db.connections,\n      nodes: db.nodes,\n      groups: db.groups\n    }\n    return JSON.stringify(res, null, 2)\n\n  setNodes: (json) ->\n    # @nodes.removeAll()\n    db.loadFromJson(json)\n    tmparr = db.nodes.concat(db.connections)\n    db.groups.map (obj) ->\n      obj.nodes.map (nodeObj) ->\n        tmparr.push(nodeObj)\n    maxid = tmparr.reduce (a, b) ->\n      return (if a.id > b.id then a.id else b.id)\n    indexer.set(maxid)\n    @refreshDatamodelAccordingToDB(db)\n\n\n\n  refreshDatamodelAccordingToDB:(db)->\n   # @groups = new Groups([])\n    # @nodes = new Nodes([], {settings: @settings})\n    # @connections = new Connections()\n    @groups.removeAll()\n    @nodes.removeAll()\n    @connections.removeAll()\n\n\n    self = @\n    db.nodes.map (obj) ->\n      nodeClass = Core.nodes.models[obj.type]\n      node = new nodeClass(obj)\n      self.nodes.push(node)\n\n    # group\n    db.groups.map (obj) ->\n      nodes = obj.nodes.map (obj)->\n        nodeClass = Core.nodes.models[obj.type]\n        return new nodeClass(obj)\n\n      groupObj = {\n        id: obj.id\n        x: obj.x\n        y: obj.y\n        width: obj.width,\n        height: obj.height,\n        nodes: nodes\n      }\n      group = new Group(groupObj)\n      self.groups.push(group)\n\n\n    #connections\n    #                 node  group nodeInsideGroup\n    # node            n->n  n->g  n->g\n    # group           g->n  g->g  g->g\n    # nodeInsideGroup g->n  g->g  sameGroup ? not render: g->g\n    \n    db.connections.map (c) ->\n      from = {\n        node: self.nodes.getById(c.from)\n        group: self.groups.getById(c.from)\n        nodeInGroup: self.groups.getByNodeId(c.from)\n      }\n      # when view group detial, external connection might be the case.\n      if(!from.node && !from.group && !from.nodeInGroup)\n        return\n\n      to = {\n        node: self.nodes.getById(c.to)\n        group: self.groups.getById(c.to)\n        nodeInGroup: self.groups.getByNodeId(c.to)\n      }\n\n      if(!to.node && !to.group && !to.nodeInGroup)\n        return\n\n      if(from.nodeInGroup && to.nodeInGroup && from.nodeInGroup == to.nodeInGroup)\n        # do nothing\n      else\n        connection = new Connection({\n          id: c.id\n          from: from.node || from.group || from.nodeInGroup\n          to: to.node || to.group || to.nodeInGroup\n          fromType: c.fromType\n          toType: c.toType\n        })\n        self.connections.push(connection)\n\nmodule.exports = Core\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/Core.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\n\nclass Nodes extends Backbone.Collection\n\n  initialize: (models, options) =>\n    self = this\n\n    @bind \"node:removed\", (node)=>\n      @.remove(node)\n      @trigger \"connections:removed\", node\n\n      \n  destroy: () =>\n    @removeAll()\n\n  find: (node_name) =>\n    return this.where({name: node_name})\n\n  createNode: (options) =>\n    # If not is a string instead of an object then take the option as the node type\n    if $.type(options) == \"string\"\n      options = {type: options}\n\n    # Save references of the application settings and timeline in the node model\n    options.timeline = @timeline\n    options.settings = @settings\n\n    # Save a reference of the nodes indexer\n    # options.indexer = @indexer\n\n    options.parent = @parent\n\n    # Print error if the node type is not found and return false\n    if !ThreeNodes.Core.nodes.models[options.type]\n      console.error(\"Node type doesn't exists: \" + options.type)\n      return false\n\n    # Create the node and pass the options\n    n = new ThreeNodes.Core.nodes.models[options.type](options)\n\n    # Add the node to the collection\n    @add(n)\n    n\n\n\n  getById: (id) ->\n    return @models.find (n)->\n      n.get('id') == id\n\n  removeSelectedNodes: () ->\n    for node in $(\".node.ui-selected\")\n      $(node).data(\"object\").remove()\n\n  removeAll: () ->\n    @remove(@models)\n\nmodule.exports = Nodes\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/collections/Nodes.coffee","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 2\n// module chunks = 0 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Backbone\"\n// module id = 3\n// module chunks = 0 1 2 3","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\n\nclass Node extends Backbone.Model\n  defaults:\n    x: 0\n    y: 0\n    width: 90\n    height: 26\n    name: \"\"\n\n  initialize: (obj) =>\n    super\n    \n    id = obj.id || indexer.getUID() #todo: Indexer\n    @set('id', id)\n    \n    name = obj.name || @typename()\n    @set('name', name)\n\n    @set('x', obj.x)\n    @set('y', obj.y)\n    @set('width', obj.width)\n    @set('height', obj.height)\n    return this\n\n  typename: => String(@constructor.name)\n\n  toJSON: () =>\n    res =\n      id: @get('id')\n      type: @typename()\n      x: @get('x')\n      y: @get('y')\n      width: @get('width')\n      height: @get('height')\n      name: @get('name')\n    res\n\n\n  remove: () =>\n    @trigger \"node:removed\", @\n \nmodule.exports = Node\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/Node.coffee","class Utils\n  @flatArraysAreEquals: (arr1, arr2) ->\n    if arr1.length != arr2.length\n      return false\n\n    for k, i in arr1\n      if arr1[i] != arr2[i]\n        return false\n\n    true\n\nmodule.exports = Utils\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Utils.coffee","Backbone = require 'Backbone'\nConnection = require 'threenodes/connections/models/Connection'\n\nclass Connections extends Backbone.Collection\n  model: Connection\n\n  initialize: (models, options) =>\n    @bind \"connection:removed\", (c) => \n      @remove(c)\n    super\n\n  create: (op) =>\n    @add(new Connection(\n      from: op.from\n      to: op.to\n      fromType: op.fromType\n      toType: op.toType\n    ))\n\n  removeByGroup: (g)=>\n    ids = [g.id]\n    \n    g.get('nodes').map((n)->\n      ids.push n.id\n    )\n    \n    todelete = @models.filter((c)=>\n      if(ids.includes(c.rawFromId) || ids.includes(c.rawToId))\n        return true\n      return false)\n\n    todelete.map((g)->\n      @.remove(g)\n    ,@)\n\n\n  removeByNode: (n)=>\n    @models.map((c)->\n      if(c.from.id == n.id || c.to.id == n.id)\n        @remove(c)\n    , @)\n\n  render: () =>\n    @each (c) -> c.render()\n\n  renderConnections: (node) =>\n    @each (c) ->\n      if(c.to == node or c.from == node)\n        c.render()\n\n  removeAll: () =>\n    @remove(@models)\n\nmodule.exports = Connections\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/connections/collections/Connections.coffee","Backbone = require 'Backbone'\n\n# Node to Node; Group to Group; Node to Group\nclass Connection extends Backbone.Model\n  initialize: (obj) =>\n    @id = obj.id || indexer.getUID()\n    @from = obj.from    \n    @to = obj.to\n    @fromType = obj.fromType;\n    @toType = obj.toType;\n\n  render: () =>\n    @trigger(\"render\", this, this)\n\n  validate: () =>\n    return false\n  \n  toJSON: ()=>\n    return {\n      id: @id,\n      from: @from.id\n      to: @to.id\n      fromType: @fromType\n      toType: @toType\n    }\nmodule.exports = Connection\n\n\n// WEBPACK FOOTER //\n// ./threenodes/connections/models/Connection.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nGroup = require '../models/Group'\n\nclass Groups extends Backbone.Collection\n\n  initialize: (models, options) =>\n    @bind \"group:removed\", (group)=>\n      @.remove(group)\n      @trigger \"connections:removed\", group\n\n  getById: (id) ->\n    return @models.find (g)->\n      g.get('id') == id\n\n  getByNodeId: (id) -> \n    return @models.find (g) ->\n      nodes = g.get('nodes')\n      return nodes.find (n) -> \n        return n.id == id\n  \n  removeAll: () ->\n    @remove(@models)\n\n\nmodule.exports = Groups\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/groups/collections/Groups.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nNode = require '../../nodes/models/Node'\n\n# id\n# nodes\n# name\n\nclass Group extends Backbone.Model\n    defaults:\n        width: 90\n        height: 26\n        x: 0\n        y: 0\n        name: \"Hello Group\"\n\n    initialize: (obj) =>\n        super\n        id = obj.id || indexer.getUID() \n        @set('name', obj.name || @typename())\n        @set('id', id)\n        @set('nodes', obj.nodes)\n\n        # avgpos = @getNodesAveragePosition()\n        # x = if obj.x then obj.x else avgpos.x\n        # y = if obj.y then obj.y else avgpos.y\n        @set('x', obj.x)\n        @set('y', obj.y)\n    \n    typename: => String(@constructor.name)\n\n    \n    remove: () =>\n        @trigger \"group:removed\", @\n\nmodule.exports = Group\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/groups/models/Group.coffee","Backbone = require 'Backbone'\n\nclass Linkers extends Backbone.Collection\n\n  initialize: (models, options) =>\n    @bind \"model:removed\", (linker)=>\n      @.remove(linker)\n      @trigger \"linkers:removed\", linker\n\n  getById: (id) ->\n    return @models.find (l)->\n      l.get('id') == id\n\n  getLinkersByShapeId:(id) ->\n    return @models.filter (l) ->\n      if(l.get('from').id == id || l.get('to').id == id)\n        return true\n      return false\n      \n\n  removeAll: () ->\n    @remove(@models)\n\n\nmodule.exports = Linkers\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/linkers/collections/Linkers.coffee","# id generator.\n\n_instance = null\n\nclass Indexer\n  constructor: () ->\n    @uid = -1\n\n  getUID: () ->\n    return @uid += 1\n    \n  reset: () ->\n    @uid = -1\n\n  # when load, need to set id according to external file\n  set: (value)->\n    @uid = value\n\n\nIndexer.getInstance = () ->\n  if (!_instance)\n    _instance = new Indexer();\n  return _instance;\n\nmodule.exports = Indexer\n\n# Frida. find better solutions. indexer will be included into several packages. so there will be multiple indexer instance with diff uid.\nwindow.indexer = Indexer.getInstance()\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Indexer.coffee","db = null\n\n    \nclass DB\n    constructor:() ->\n        @reset()\n    \n    reset: ()=>\n        @nodes = []\n        @connections = []\n        @groups = []\n        @id = null\n\n    loadFromJson: (json)=>\n        @reset()\n        \n        @id = json.id\n        @nodes = json.nodes\n        @groups = json.groups\n        @connections = json.connections\n\n    # why so complicated? because datamodel is not consistent with db.\n    updateProperty: (param)=>\n        # no need to update connections\n        @id = param.id\n        param.groups.map((gParam)=>\n            if(!@groups.length)\n                @groups.push(gParam.toJSON())\n            else               \n                g = @groups.find((_g)=>\n                    return _g.id == gParam.get('id')\n                )\n                if(g)\n                    g.x = gParam.get('x')\n                    g.y = gParam.get('y')\n                    g.width = gParam.get('width')\n                    g.height = gParam.get('height')\n                    g.name = gParam.get('name')\n                else\n                    @groups.push(gParam.toJSON())\n        , @)\n\n        param.nodes.map((nParam)=>\n            if(!@nodes.length)\n                @nodes.push(nParam.toJSON())\n            else\n                n = @nodes.find((_n)=>\n                    return _n.id == nParam.id\n                )\n                if(n)\n                    n.x = nParam.get('x')\n                    n.y = nParam.get('y')\n                    n.width = nParam.get('width')\n                    n.height = nParam.get('height')\n                    n.name = nParam.get('name')\n                else\n                    @nodes.push(nParam.toJSON())\n        , @)\n\n        @connections = [];\n        param.connections.map((cParam)=>\n            @connections.push(cParam.toJSON())\n        , @)\n        \n    calculatePos: (nodes) ->\n        min_x = 0\n        min_y = 0\n        max_x = 0\n        max_y = 0\n        for node in nodes\n            min_x = Math.min(min_x, node.get(\"x\"))\n            max_x = Math.max(max_x, node.get(\"x\"))\n            min_y = Math.min(min_y, node.get(\"y\"))\n            max_y = Math.max(max_y, node.get(\"y\"))\n\n        dx = (min_x + max_x) / 2\n        dy = (min_y + max_y) / 2\n        return {x: dx, y: dy}\n\n\n    createGroup: (nodes, index)=>\n        pos = @calculatePos(nodes)\n        nodesObj = nodes.map((n)=>\n            return n.toJSON()\n        )\n        @groups.push({\n            id: index\n            x: pos.x\n            y: pos.y\n            width: 90\n            height: 26\n            nodes: nodesObj\n        })\n\n\n        @nodes = @nodes.filter((n)->\n            nodeIds = nodes.map((_n)->\n                return _n.id\n            )\n            return !nodeIds.includes(n.id)\n        ,@)\n\n    \n    \n    # findNode from group or node.\n    findNodeInNodes: (id)=>\n        return @nodes.find((n)=>\n            return n.id == id\n        )\n    \n    findNodeInGroups: (id)=>\n        node = null\n        @groups.map((g)=>\n            g.nodes.map((n)=>\n                if(n.id == id)\n                    node = n\n            )\n        )\n        return node\n    findGroup:(id)=>\n        return @groups.find((g)=>return g.id==id)\n\nmodule.exports = DB\n\nwindow.db = new DB()\n\n\n// WEBPACK FOOTER //\n// ./threenodes/db.coffee","Backbond = require 'Backbone'\n\nclass Linker extends Backbone.Model\n\tdefaults:\n\t\tid: ''\n\t\tname: 'linker'\n\t\ttext: ''\n\t\tpoints: []\n\t\tfrom: {\n\t\t\tx: 0\n\t\t\ty: 0\n\t\t\tangle: 0\n\t\t\tid: ''\n\t\t}\n\t\tto: {\n\t\t\tx: 0\n\t\t\ty: 0\n\t\t\tangle: 0\n\t\t\tid: ''\n\t\t}\n\t\tlineStyle: {\n\t\t\tlineWidth: 2,\n\t\t\tlineColor: \"255,0,0\",\n\t\t\tlineStyle: \"solid\",\n\t\t\tbeginArrowStyle: \"none\",\n\t\t\tendArrowStyle: \"solidArrow\"\n\t\t}\n\n\tinitialize: (model, param)=>\n\t\tsuper\n\t\t# id = obj.id || indexer.getUID() \n\t\tid = indexer.getUID()\n\t\t@set('id', id)\n\n\t# linker: target to move\n\t# point: to/from\n\t# x, y: position to move\n\t@moveLinker: (linker, point, x, y) => \n\t\tnewPos = {\n\t\t  x: x\n\t\t  y: y \n\t\t  angle: null\n\t\t}\n\t\tlinkedShape = null\n\t\tlinker.set('to', {\n\t\t\tx: newPos.x\n\t\t\ty: newPos.y\n\t\t\tid: linkedShape\n\t\t\tangle: newPos.angle\n\t\t})\n\n\t\tif(!linkedShape)\n\t\t\tto = linker.get('to')\n\t\t\tfrom = linker.get('from')\n\n\t\t\tif((newPos.x < from.x - 6) || (newPos.x > from.x + 6))\n\t\t\telse\n\t\t\t\tto.x = from.x\n\t\t\t\n\t\t\tif(newPos.y < from.y - 6 || newPos.y > from.y + 6)\n\t\t\telse\n\t\t\t\tto.y = from.y;\n\t\t\t\n\t\t\tlinker.to= to\n\t\t\n\t\tLinker.render(linker, true)\n\t\n\n\n\t@render: (linker, pointChanged) => \n\t\tif(pointChanged)\n\t\t\tlinker.set('points', Linker.getLinkerPoints(linker))\n\n\t\tbox = Linker.calcBox(linker)\n\n\t\tlinkerBox = $(\"#\" + linker.id);\n\t\tif(linkerBox.length == 0)\n\t\t\tsuperCanvas = $(\"#graph\");\n\t\t\tlinkerBox = $(\"<div id='\"+linker.id+\"' class='shape_box linker_box'><canvas class='shape_canvas'></canvas></div>\").appendTo(superCanvas);\n\t\t\n\n\n\t\tlinkerCanvas = linkerBox.find(\".shape_canvas\");\n\t\tlinkerCanvas.attr({\n\t\t\twidth: (box.w + 20)\n\t\t\theight: (box.h + 20)\n\t\t});\n\t\tlinkerBox.css({\n\t\t\tposition: 'absolute'\n\t\t\tleft: (box.x - 10),\n\t\t\ttop: (box.y - 10),\n\t\t\twidth: (box.w + 20),\n\t\t\theight: (box.h + 20)\n\t\t});\n\t\tctx = linkerCanvas[0].getContext(\"2d\");\n\t\t# ctx.scale(Designer.config.scale, Designer.config.scale);\n\t\tctx.translate(10, 10);\n\t\tstyle = linker.get('lineStyle');\n\t\tctx.lineWidth = style.lineWidth;\n\t\tctx.strokeStyle = \"rgb(\"+style.lineColor+\")\";\n\t\tctx.fillStyle = \"rgb(\"+style.lineColor+\")\";\n\t\tctx.save();\n\n\t\tfrom = linker.get('from');\n\t\tto = linker.get('to')\n\t\tbegin = {x: from.x - box.x, y: from.y - box.y};\n\t\tend = {x: to.x - box.x, y: to.y - box.y};\n\t\tctx.save();\n\t\t\n\t\tctx.beginPath();\n\t\tctx.moveTo(begin.x, begin.y);\n\t\t\n\t\tpoints = linker.get('points')\n\n\t\tfor point in points\n\t\t\t#如果是折线，会有折点\n\t\t\tctx.lineTo(point.x - box.x, point.y - box.y);\n\t\t\n\t\tctx.lineTo(end.x, end.y);\n\n\t\t# selected = Utils.isSelected(linker.id);\n\t\t# if(selected)\n\t\t# \t#如果是选中了，绘制阴影\n\t\t# \tctx.shadowBlur = 4;\n\t\t# \tctx.shadowColor = \"#833\";\n\t\t\t\n\t\t\t\n\t\t\n\t\tctx.stroke();\n\t\tctx.restore(); #还原虚线样式和阴影\n\t\tctx.restore();\n\t\n\n\t@calcBox: (linker) => \n\t\tpoints = linker.get('points');\n\t\tfrom = linker.get('from');\n\t\tto = linker.get('to');\n\t\tminX = to.x;\n\t\tminY = to.y;\n\t\tmaxX = from.x;\n\t\tmaxY = from.y;\n\t\tif(to.x < from.x)\n\t\t\tminX = to.x;\n\t\t\tmaxX = from.x;\n\t\telse\n\t\t\tminX = from.x;\n\t\t\tmaxX = to.x;\n\t\t\n\t\tif(to.y < from.y)\n\t\t\tminY = to.y;\n\t\t\tmaxY = from.y;\n\t\telse\n\t\t\tminY = from.y;;\n\t\t\tmaxY = to.y;\n\n\t\tfor point in points\n\t\t\tif(point.x < minX)\n\t\t\t\tminX = point.x;\n\t\t\telse if(point.x > maxX)\n\t\t\t\tmaxX = point.x;\n\t\t\t\n\t\t\tif(point.y < minY)\n\t\t\t\tminY = point.y;\n\t\t\telse if(point.y > maxY)\n\t\t\t\tmaxY = point.y;\n\t\t\n\t\treturn {\n\t\t\tx: minX,\n\t\t\ty: minY,\n\t\t\tw: maxX - minX,\n\t\t\th: maxY - minY\n\t\t}\n\t\n\n\t@getAngleDir: (angle)=>\n\t\tpi = Math.PI;\n\t\tif(angle >= pi / 4 && angle < pi / 4 * 3)\n\t\t\treturn 1;#上\n\t\telse if(angle >= pi / 4 * 3 && angle < pi / 4 * 5)\n\t\t\treturn 2;#右\n\t\telse if(angle >= pi / 4 * 5 && angle < pi / 4 * 7)\n\t\t\treturn 3;#下\n\t\telse\n\t\t\treturn 4;#左\n\n\t@getLinkerPoints: (linker)=>\n\t\tpoints = [];\n\n\t\tpi = Math.PI;\n\t\tfrom = linker.get('from');\n\t\tto = linker.get('to');\n\t\txDistance = Math.abs(to.x - from.x);\n\t\tyDistance = Math.abs(to.y - from.y);\n\t\tminDistance = 30; #最小距离，比如起点向上，终点在下方，则先要往上画minDistance的距离\n\t\t\n\t\tif(from.id && to.id)\n\n\t\t\t#起点和终点都连接了形状\n\t\t\tfromDir = Linker.getAngleDir(from.angle); #起点方向\n\t\t\ttoDir = Linker.getAngleDir(to.angle); #终点方向\n\t\t\t\n\t\t\t\n\t\t\tfixed = null;\n\t\t\tactive = null;\n\t\t\treverse = null; #固定点、移动点、是否需要逆序\n\n\t\t\t#以起点为判断依据，可以涵盖所有情况\n\t\t\tif(fromDir == 1 && toDir == 1)\n\t\t\t\t#情况1：两个点都向上\n\t\t\t\tif(from.y < to.y)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tif(active.x >= fixedProps.x - minDistance && active.x <= fixedProps.x + fixedProps.w + minDistance)\n\t\t\t\t\tx;\n\t\t\t\t\tif(active.x < fixedProps.x + fixedProps.w / 2)\n\t\t\t\t\t\tx = fixedProps.x - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixedProps.x + fixedProps.w + minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty = fixed.y - minDistance;\n\t\t\t\t\tpoints.push({x: fixed.x, y: y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\ty = fixed.y - minDistance;\n\t\t\t\t\tpoints.push({x: fixed.x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\telse if(fromDir == 3 && toDir == 3)\n\t\t\t\t#情况2：两个点都向下\n\t\t\t\tif(from.y > to.y)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\n\t\t\t\tif(active.x >= fixedProps.x - minDistance && active.x <= fixedProps.x + fixedProps.w + minDistance)\n\t\t\t\t\ty = fixed.y + minDistance;\n\t\t\t\t\tx;\n\t\t\t\t\tif(active.x < fixedProps.x + fixedProps.w / 2)\n\t\t\t\t\t\tx = fixedProps.x - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixedProps.x + fixedProps.w + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: fixed.x, y: y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\ty = fixed.y + minDistance;\n\t\t\t\t\tpoints.push({x: fixed.x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\telse if(fromDir == 2 && toDir == 2)\n\t\t\t\t#情况3：两点都向右\n\t\t\t\tif(from.x > to.x)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tif(active.y >= fixedProps.y - minDistance && active.y <= fixedProps.y + fixedProps.h + minDistance)\n\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\ty;\n\t\t\t\t\tif(active.y < fixedProps.y + fixedProps.h / 2)\n\t\t\t\t\t\ty = fixedProps.y - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = fixedProps.y + fixedProps.h + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tx = active.x + minDistance;\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: x, y: active.y});\n\t\t\t\telse\n\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: active.y});\n\t\t\t\t\n\t\t\telse if(fromDir == 4 && toDir == 4)\n\t\t\t\t#情况4：两点都向左\n\t\t\t\tif(from.x < to.x)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\n\t\t\t\tif(active.y >= fixedProps.y - minDistance && active.y <= fixedProps.y + fixedProps.h + minDistance)\n\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\ty;\n\t\t\t\t\tif(active.y < fixedProps.y + fixedProps.h / 2)\n\t\t\t\t\t\ty = fixedProps.y - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = fixedProps.y + fixedProps.h + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tx = active.x - minDistance;\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: x, y: active.y});\n\t\t\t\telse\n\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: active.y});\n\t\t\t\t\n\t\t\telse if((fromDir == 1 && toDir == 3) || (fromDir == 3 && toDir == 1))\n\t\t\t\t#情况5：一个点向上，一个点向下\n\t\t\t\tif(fromDir == 1)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tif(active.y <= fixed.y)\n\t\t\t\t\ty = fixed.y - yDistance / 2;\n\t\t\t\t\tpoints.push({x: fixed.x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\tfixedRight = fixedProps.x + fixedProps.w;\n\t\t\t\t\tactiveRight = activeProps.x + activeProps.w;\n\t\t\t\t\ty = fixed.y - minDistance;\n\t\t\t\t\tx;\n\t\t\t\t\tif(activeRight >= fixedProps.x && activeProps.x <= fixedRight)\n\t\t\t\t\t\t#x轴重叠的情况\n\t\t\t\t\t\thalf = fixedProps.x + fixedProps.w / 2;\n\t\t\t\t\t\tif(active.x < half)\n\t\t\t\t\t\t\t#从左边绕\n\t\t\t\t\t\t\tx = fixedProps.x < activeProps.x ? fixedProps.x - minDistance : activeProps.x - minDistance;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t#从右边绕\n\t\t\t\t\t\t\tx = fixedRight > activeRight ? fixedRight + minDistance : activeRight + minDistance;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(activeProps.y < fixed.y)\n\t\t\t\t\t\t\ty = activeProps.y - minDistance;\n\t\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t\tif(active.x < fixed.x)\n\t\t\t\t\t\t\tx = activeRight + (fixedProps.x - activeRight) / 2;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tx = fixedRight + (activeProps.x - fixedRight) / 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: fixed.x, y: y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\telse if((fromDir == 2 && toDir == 4) || (fromDir == 4 && toDir == 2))\n\t\t\t\t#情况6：一个点向右，一个点向左\n\t\t\t\tif(fromDir == 2)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tif(active.x > fixed.x)\n\t\t\t\t\tx = fixed.x + xDistance / 2;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: active.y});\n\t\t\t\telse\n\t\t\t\t\tfixedBottom = fixedProps.y + fixedProps.h;\n\t\t\t\t\tactiveBottom = activeProps.y + activeProps.h;\n\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\ty;\n\t\t\t\t\tif(activeBottom >= fixedProps.y && activeProps.y <= fixedBottom)\n\t\t\t\t\t\t#y轴重叠的情况\n\t\t\t\t\t\thalf = fixedProps.y + fixedProps.h / 2;\n\t\t\t\t\t\tif(active.y < half)\n\t\t\t\t\t\t\t#从上边绕\n\t\t\t\t\t\t\ty = fixedProps.y < activeProps.y ? fixedProps.y - minDistance : activeProps.y - minDistance;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t#从下边绕\n\t\t\t\t\t\t\ty = fixedBottom > activeBottom ? fixedBottom + minDistance : activeBottom + minDistance;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(activeProps.x + activeProps.w > fixed.x)\n\t\t\t\t\t\t\tx = activeProps.x + activeProps.w + minDistance;\n\t\t\t\t\t\t\n\t\t\t\t\telse\n\t\t\t\t\t\tif(active.y < fixed.y)\n\t\t\t\t\t\t\ty = activeBottom + (fixedProps.y - activeBottom) / 2;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ty = fixedBottom + (activeProps.y - fixedBottom) / 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tx = active.x - minDistance;\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: x, y: active.y});\n\t\t\t\t\n\t\t\telse if((fromDir == 1 && toDir == 2) || (fromDir == 2 && toDir == 1))\n\t\t\t\t#情况7：一个点向上，一个点向右\n\t\t\t\tif(fromDir == 2)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tif(active.x > fixed.x && active.y > fixed.y)\n\t\t\t\t\tpoints.push({x: active.x, y: fixed.y});\n\t\t\t\telse if(active.x > fixed.x && activeProps.x > fixed.x)\n\t\t\t\t\tx;\n\t\t\t\t\tif(activeProps.x - fixed.x < minDistance * 2)\n\t\t\t\t\t\tx = fixed.x + (activeProps.x - fixed.x) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse if(active.x <= fixed.x && active.y > fixedProps.y + fixedProps.h)\n\t\t\t\t\tfixedBottom = fixedProps.y + fixedProps.h;\n\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\ty\n\t\t\t\t\tif(active.y - fixedBottom < minDistance * 2)\n\t\t\t\t\t\ty = fixedBottom + (active.y - fixedBottom) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\tx;\n\t\t\t\t\tactiveRight = activeProps.x + activeProps.w;\n\t\t\t\t\tif(activeRight > fixed.x)\n\t\t\t\t\t\tx = activeRight + minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty;\n\t\t\t\t\tif(active.y < fixedProps.y)\n\t\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = fixedProps.y - minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\telse if((fromDir == 1 && toDir == 4) || (fromDir == 4 && toDir == 1))\n\t\t\t\t#情况8：一个点向上，一个点向左\n\t\t\t\tif(fromDir == 4)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveRight = activeProps.x + activeProps.w;\n\t\t\t\tif(active.x < fixed.x && active.y > fixed.y)\n\t\t\t\t\tpoints.push({x: active.x, y: fixed.y});\n\t\t\t\telse if(active.x < fixed.x && activeRight < fixed.x)\n\t\t\t\t\tx;\n\t\t\t\t\tif(fixed.x - activeRight < minDistance * 2)\n\t\t\t\t\t\tx = activeRight + (fixed.x - activeRight) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse if(active.x >= fixed.x && active.y > fixedProps.y + fixedProps.h)\n\t\t\t\t\tfixedBottom = fixedProps.y + fixedProps.h;\n\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\ty\n\t\t\t\t\tif(active.y - fixedBottom < minDistance * 2)\n\t\t\t\t\t\ty = fixedBottom + (active.y - fixedBottom) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\tx;\n\t\t\t\t\tif(activeProps.x < fixed.x)\n\t\t\t\t\t\tx = activeProps.x - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty;\n\t\t\t\t\tif(active.y < fixedProps.y)\n\t\t\t\t\t\ty = active.y - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = fixedProps.y - minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\telse if((fromDir == 2 && toDir == 3) || (fromDir == 3 && toDir == 2))\n\t\t\t\t#情况9：一个点向右，一个点向下\n\t\t\t\tif(fromDir == 2)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tif(active.x > fixed.x && active.y < fixed.y)\n\t\t\t\t\tpoints.push({x: active.x, y: fixed.y});\n\t\t\t\telse if(active.x > fixed.x && activeProps.x > fixed.x)\n\t\t\t\t\tx;\n\t\t\t\t\tif(activeProps.x - fixed.x < minDistance * 2)\n\t\t\t\t\t\tx = fixed.x + (activeProps.x - fixed.x) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse if(active.x <= fixed.x && active.y < fixedProps.y)\n\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\ty\n\t\t\t\t\tif(fixedProps.y - active.y < minDistance * 2)\n\t\t\t\t\t\ty = active.y + (fixedProps.y - active.y) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\tx;\n\t\t\t\t\tactiveRight = activeProps.x + activeProps.w;\n\t\t\t\t\tif(activeRight > fixed.x)\n\t\t\t\t\t\tx = activeRight + minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x + minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty;\n\t\t\t\t\tif(active.y > fixedProps.y + fixedProps.h)\n\t\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = fixedProps.y + fixedProps.h + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\telse if((fromDir == 3 && toDir == 4) || (fromDir == 4 && toDir == 3))\n\t\t\t\t#情况10：一个点向下，一个点向左\n\t\t\t\tif(fromDir == 4)\n\t\t\t\t\tfixed = from;\n\t\t\t\t\tactive = to;\n\t\t\t\t\treverse = false;\n\t\t\t\telse\n\t\t\t\t\tfixed = to;\n\t\t\t\t\tactive = from;\n\t\t\t\t\treverse = true;\n\t\t\t\t\n\t\t\t\tfixedProps = {\n\t\t\t\t\tx: fixed.x\n\t\t\t\t\ty: fixed.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveProps = {\n\t\t\t\t\tx: active.x\n\t\t\t\t\ty: active.y\n\t\t\t\t\tw: 90\n\t\t\t\t\th: 26\n\t\t\t\t}\n\t\t\t\tactiveRight = activeProps.x + activeProps.w;\n\t\t\t\tif(active.x < fixed.x && active.y < fixed.y)\n\t\t\t\t\tpoints.push({x: active.x, y: fixed.y});\n\t\t\t\telse if(active.x < fixed.x && activeRight < fixed.x)\n\t\t\t\t\tx;\n\t\t\t\t\tif(fixed.x - activeRight < minDistance * 2)\n\t\t\t\t\t\tx = activeRight + (fixed.x - activeRight) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse if(active.x >= fixed.x && active.y < fixedProps.y)\n\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\ty\n\t\t\t\t\tif(fixedProps.y - active.y < minDistance * 2)\n\t\t\t\t\t\ty = active.y + (fixedProps.y - active.y) / 2;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\telse\n\t\t\t\t\tx;\n\t\t\t\t\tif(activeProps.x < fixed.x)\n\t\t\t\t\t\tx = activeProps.x - minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\tx = fixed.x - minDistance;\n\t\t\t\t\t\n\t\t\t\t\ty;\n\t\t\t\t\tif(active.y > fixedProps.y + fixedProps.h)\n\t\t\t\t\t\ty = active.y + minDistance;\n\t\t\t\t\telse\n\t\t\t\t\t\ty = fixedProps.y + fixedProps.h + minDistance;\n\t\t\t\t\t\n\t\t\t\t\tpoints.push({x: x, y: fixed.y});\n\t\t\t\t\tpoints.push({x: x, y: y});\n\t\t\t\t\tpoints.push({x: active.x, y: y});\n\t\t\t\t\n\t\t\t\n\t\t\tif(reverse)\n\t\t\t\tpoints.reverse();\n\t\t\t\n\n\t\telse if(from.id || to.id)\n\t\t\t#只有起点或终点连接了形状\n\t\t\t#连接了形状的端点被认为是固定点，另一点被认为是活动的点\n\t\t\tfixed = null\n\t\t\tactive = null \n\t\t\treverse = null\n\n\t\t\tangle = null\n\n\t\t\tif(from.id)\n\t\t\t\tfixed = from;\n\t\t\t\tactive = to;\n\t\t\t\treverse = false;\n\t\t\t\tangle = from.angle\n\t\t\telse\n\t\t\t\tfixed = to;\n\t\t\t\tactive = from;\n\t\t\t\treverse = true; #如果固定点是终点，需要把得到的点逆序，因为绘制时是从起点开始的，而此处计算获得的点将是从终点开始\n\t\t\t\tangle = to.angle\n\t\t\t\n\n\n\t\t\tprops = {\n\t\t\t\tx: fixed.x\n\t\t\t\ty: fixed.y\n\t\t\t\tw: 90\n\t\t\t\th: 26\n\t\t\t}\n\n\t\t\tconsole.log('=======angle======')\n\t\t\tconsole.log(angle)\n\t\t\tif(angle >= pi / 4 and angle < pi / 4 * 3)\n\t\t\t\t\t#起点角度为向上\n\t\t\t\t\tif(active.y < fixed.y)\n\t\t\t\t\t\t#终点在起点图形上方\n\t\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\t\t#如果终点离起点的水平距离较远，最终方向为水平，此情况下只有一个折点\n\t\t\t\t\t\t\tpoints.push({x: fixed.x, y: active.y});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t#如果终点离起点的垂直距离较远，最终方向为向上，此情况下有两个折点\n\t\t\t\t\t\t\thalf = yDistance / 2;\n\t\t\t\t\t\t\tpoints.push({x: fixed.x, y: fixed.y - half});\n\t\t\t\t\t\t\tpoints.push({x: active.x, y: fixed.y - half});\n\t\t\t\t\telse\n\t\t\t\t\t\t#终点在起点水平平行或下方的位置\n\t\t\t\t\t\tpoints.push({x: fixed.x, y: fixed.y - minDistance}); #先向上画一笔\n\t\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\t\t#如果终点离起点的水平距离较远，最终方向为水平\n\t\t\t\t\t\t\tif(active.x >= props.x - minDistance and active.x <= props.x + props.w + minDistance)\n\t\t\t\t\t\t\t\t#如果终点在x轴上的坐标，在图形范围内，在判断终点与形状是偏左还是偏右\n\t\t\t\t\t\t\t\tshapeHalf = props.x + props.w / 2;\n\t\t\t\t\t\t\t\tif(active.x < shapeHalf)\n\t\t\t\t\t\t\t\t\t#偏左，第二点在形状左上角\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: fixed.y - minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: active.y});\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: fixed.y - minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: active.y});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t#如果终点在x轴上的坐标，在图形范围外，此时有三个点\n\t\t\t\t\t\t\t\tif(active.x < props.x)\n\t\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: fixed.y - minDistance})\n\t\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: active.y})\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: fixed.y - minDistance})\n\t\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: active.y})\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t#如果终点离起点的垂直距离较远，最终方向为向下\n\t\t\t\t\t\t\tif(active.x >= props.x - minDistance)\n\t\t\t\t\t\t\t\tif (active.x <= props.x + props.w + minDistance)\n\t\t\t\t\t\t\t\t\t#如果终点在x轴上的坐标，在图形范围内，此时有四个点\n\t\t\t\t\t\t\t\t\t#在判断终点与形状是偏左还是偏右\n\t\t\t\t\t\t\t\t\tshapeHalf = props.x + props.w / 2;\n\t\t\t\t\t\t\t\t\tif(active.x < shapeHalf)\n\t\t\t\t\t\t\t\t\t\t#偏左，第二点在形状左上角\n\t\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: fixed.y - minDistance});\n\t\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: active.y - minDistance});\n\t\t\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y - minDistance});\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: fixed.y - minDistance});\n\t\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: active.y - minDistance});\n\t\t\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y - minDistance});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t#如果终点在x轴上的坐标，在图形范围外，此时有两个点\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: fixed.y - minDistance});\n\t\t\telse if(angle >= pi / 4 * 3 && angle < pi / 4 * 5)\n\t\t\t\tconsole.log('hit')\n\n\n\n\n\t\t\t\t#起点角度为向右\n\t\t\t\tif(active.x > fixed.x)\n\t\t\t\t\t#终点在起点图形右方\n\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\t#如果终点离起点的水平距离较远，最终方向为水平，此情况下有两个折点\n\t\t\t\t\t\thalf = xDistance / 2;\n\t\t\t\t\t\tpoints.push({x: fixed.x + half, y: fixed.y});\n\t\t\t\t\t\tpoints.push({x: fixed.x + half, y: active.y});\n\t\t\t\t\telse\n\t\t\t\t\t\t#如果终点离起点的垂直距离较远，最终方向为垂直，此情况下只有一个折点\n\t\t\t\t\t\tpoints.push({x: active.x, y: fixed.y});\n\t\t\t\t\t\n\t\t\t\telse\n\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: fixed.y});\n\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\t#如果终点离起点的水平距离较远，最终方向为水平\n\t\t\t\t\t\tif(active.y >= props.y - minDistance && active.y <= props.y + props.h + minDistance)\n\t\t\t\t\t\t\t#如果终点在y轴上的坐标，在图形范围内，在判断终点与形状是偏上还是偏下\n\t\t\t\t\t\t\tshapeHalf = props.y + props.h / 2;\n\t\t\t\t\t\t\tif(active.y < shapeHalf)\n\t\t\t\t\t\t\t\t#偏上，第二点在形状右上角\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: props.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: props.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: active.y});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: props.y + props.h + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: props.y + props.h + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: active.y});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: active.y});\n\t\t\t\t\telse\n\t\t\t\t\t\t#如果终点离起点的垂直距离较远，最终方向为向下\n\t\t\t\t\t\tif(active.y >= props.y - minDistance && active.y <= props.y + props.h + minDistance)\n\t\t\t\t\t\t\tshapeHalf = props.y + props.h / 2;\n\t\t\t\t\t\t\tif(active.y < shapeHalf)\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: props.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: props.y - minDistance});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: props.y + props.h + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: props.y + props.h + minDistance});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif(active.y < fixed.y)\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: active.y + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y + minDistance});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x + minDistance, y: active.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y - minDistance});\n\t\t\telse if(angle >= pi / 4 * 5 && angle < pi / 4 * 7)\n\t\t\t\t#起点角度为向下\n\t\t\t\tif(active.y > fixed.y)\n\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\tpoints.push({x: fixed.x, y: active.y});\n\t\t\t\t\telse\n\t\t\t\t\t\thalf = yDistance / 2;\n\t\t\t\t\t\tpoints.push({x: fixed.x, y: fixed.y + half});\n\t\t\t\t\t\tpoints.push({x: active.x, y: fixed.y + half});\n\t\t\t\telse\n\t\t\t\t\tpoints.push({x: fixed.x, y: fixed.y + minDistance}); \n\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\tif(active.x >= props.x - minDistance)\n\t\t\t\t\t\t\tif(active.x <= props.x + props.w + minDistance)\n\t\t\t\t\t\t\t \tshapeHalf = props.x + props.w / 2;\n\t\t\t\t\t\t\t\tif(active.x < shapeHalf)\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: fixed.y + minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: active.y});\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: fixed.y + minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: active.y});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif(active.x < props.x)\n\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: fixed.y + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x + minDistance, y: active.y});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: fixed.y + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: active.y});\n\t\t\t\t\telse\n\t\t\t\t\t\tif(active.x >= props.x - minDistance)\n\t\t\t\t\t\t\tif(active.x <= props.x + props.w + minDistance)\n\t\t\t\t\t\t\t \tshapeHalf = props.x + props.w / 2;\n\t\t\t\t\t\t\t\tif(active.x < shapeHalf)\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: fixed.y + minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x - minDistance, y: active.y + minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y + minDistance});\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: fixed.y + minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: props.x + props.w + minDistance, y: active.y + minDistance});\n\t\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y + minDistance});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpoints.push({x: active.x, y: fixed.y + minDistance});\n\t\t\telse\n\t\t\t\t#起点角度为向左\n\t\t\t\tif(active.x < fixed.x)\n\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\thalf = xDistance / 2;\n\t\t\t\t\t\tpoints.push({x: fixed.x - half, y: fixed.y});\n\t\t\t\t\t\tpoints.push({x: fixed.x - half, y: active.y});\n\t\t\t\t\telse\n\t\t\t\t\t\tpoints.push({x: active.x, y: fixed.y});\n\t\t\t\telse\n\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: fixed.y});\n\t\t\t\t\tif(xDistance >= yDistance)\n\t\t\t\t\t\tif(active.y >= props.y - minDistance && active.y <= props.y + props.h + minDistance)\n\t\t\t\t\t\t\tshapeHalf = props.y + props.h / 2;\n\t\t\t\t\t\t\tif(active.y < shapeHalf)\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: props.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: props.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: active.y});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: props.y + props.h + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: props.y + props.h + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x - minDistance, y: active.y});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: active.y});\n\t\t\t\t\telse\n\t\t\t\t\t\t#如果终点离起点的垂直距离较远，最终方向为向下\n\t\t\t\t\t\tif(active.y >= props.y - minDistance && active.y <= props.y + props.h + minDistance)\n\t\t\t\t\t\t\tshapeHalf = props.y + props.h / 2;\n\t\t\t\t\t\t\tif(active.y < shapeHalf)\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: props.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: props.y - minDistance});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: props.y + props.h + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: props.y + props.h + minDistance});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif(active.y < fixed.y)\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: active.y + minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y + minDistance});\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpoints.push({x: fixed.x - minDistance, y: active.y - minDistance});\n\t\t\t\t\t\t\t\tpoints.push({x: active.x, y: active.y - minDistance});\n\t\t\t\n\t\treturn points;\n\t@removeLinker: (linker)=>\n\t\t$(\"#\" + linker.id).remove();\nmodule.exports = Linker\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/linkers/models/Linker.coffee"],"sourceRoot":""}