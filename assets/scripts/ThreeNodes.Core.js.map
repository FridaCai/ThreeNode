{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e7e40756a69404af4a8c","webpack:///./threenodes/Core.coffee","webpack:///./threenodes/utils/Indexer.coffee","webpack:///./threenodes/nodes/collections/Nodes.coffee","webpack:///external \"_\"","webpack:///external \"Backbone\"","webpack:///./threenodes/nodes/models/Node.coffee","webpack:///./threenodes/utils/Utils.coffee","webpack:///./threenodes/connections/collections/Connections.coffee","webpack:///./threenodes/connections/models/Connection.coffee","webpack:///./threenodes/groups/collections/Groups.coffee","webpack:///./threenodes/groups/models/Group.coffee"],"names":[],"mappings":"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","file":"ThreeNodes.Core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"_\"), require(\"Backbone\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"Backbone\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Core\"] = factory(require(\"_\"), require(\"Backbone\"));\n\telse\n\t\troot[\"ThreeNodes\"] = root[\"ThreeNodes\"] || {}, root[\"ThreeNodes\"][\"Core\"] = factory(root[\"_\"], root[\"Backbone\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e7e40756a69404af4a8c","Indexer = require './utils/Indexer'\n\nNodes = require './nodes/collections/Nodes'\nNode = require './nodes/models/Node'\n\nConnections = require './connections/collections/Connections'\nConnection = require './connections/models/Connection'\n\nGroups = require './groups/collections/Groups'\nGroup = require './groups/models/Group'\n\n\n#require 'jquery'\n\n#### App\nclass Core\n  @fields: {models:{}, views: {}}\n  @nodes: {models:{}, views: {}}\n  @groups: {models: {}, views: {}}\n  @id: Indexer.getInstance().getUID()\n  \n  constructor: (options) ->\n    # Default settings\n    settings =\n      test: false\n      player_mode: false\n      direction: true\n    @settings = $.extend({}, settings, options)\n\n    # Initialize some core classes\n    # @group_definitions = new GroupDefinitions([])\n    @groups = new Groups([])\n    @nodes = new Nodes([], {settings: @settings})\n    @connections = new Connections()\n\n    @nodes.bind('node:renderConnections', @renderConnections.bind(@))\n    @groups.bind('node:renderConnections', @renderConnections.bind(@))\n\n    \n    \n    \n    \n    #rm connections by node or group\n    @nodes.bind \"connections:removed\", (n)=>\n      @connections.removeByNode(n)\n    @groups.bind \"connections:removed\", (g)=>\n      @connections.removeByGroup(g)\n\n    @nodes.bind \"connection:create\", (op) =>\n      @connections.create(op)\n    \n    # Create a group node when selected nodes are grouped\n    # @group_definitions.bind(\"definition:created\", @nodes.createGroup)\n\n    # When a group definition is removed delete all goup nodes using this definition\n    # @group_definitions.bind(\"remove\", @nodes.removeGroupsByDefinition)\n\n  renderConnections: (node) ->\n    @connections.renderConnections(node)\n\n\n  @addFieldType: (fieldName, field) ->\n    Core.fields.models[fieldName] = field\n    return true\n\n  @addFieldView: (fieldName, fieldView) ->\n    Core.fields.views[fieldName] = fieldView\n    return true\n\n  @addNodeType: (nodeName, nodeType) ->\n    Core.nodes.models[nodeName] = nodeType\n    return true\n\n  @addNodeView: (viewName, nodeView) ->\n    Core.nodes.views[viewName] = nodeView\n    return true\n\n  \n\n  setNodes: (json) ->\n    # @nodes.removeAll()\n\n    self = @\n    @id = json.id\n    maxid = json.id\n\n    json.nodes.map (obj) ->\n      maxid = if obj.id > maxid then obj.id else maxid\n      nodeClass = Core.nodes.models[obj.type]\n      node = new nodeClass(obj)\n      self.nodes.push(node)\n\n    # group\n    json.groups.map (obj) ->\n      maxid = if obj.id > maxid then obj.id else maxid\n      groupObj = {\n        id: obj.id,\n        x: obj.x,\n        y: obj.y\n        width: obj.width,\n        height: obj.height,\n        nodes: []\n      }\n\n      obj.nodes.map (nodeObj) ->\n        maxid = if nodeObj.id > maxid then nodeObj.id else maxid\n        node = new Core.nodes.models[nodeObj.type](nodeObj)\n        groupObj.nodes.push(node)\n      \n      group = new Group(groupObj)\n      self.groups.push(group)\n\n\n    #connections\n    json.connections.map (c) ->\n      maxid = if c.id > maxid then c.id else maxid\n      connection = new Connection(c)\n      self.connections.push(connection)\n\n    Indexer.getInstance().set(maxid)\n\nmodule.exports = Core\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/Core.coffee","# id generator.\n\n_instance = null\n\nclass Indexer\n  constructor: () ->\n    @uid = -1\n\n  getUID: () ->\n    return @uid += 1\n    \n  reset: () ->\n    @uid = -1\n\n  # when load, need to set id according to external file\n  set: (value)->\n    @uid = value\n\n\nIndexer.getInstance = () ->\n  if (!_instance)\n    _instance = new Indexer();\n  return _instance;\n\nmodule.exports = Indexer\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Indexer.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\n# Indexer = require 'threenodes/utils/Indexer'\n# Connections = require 'threenodes/connections/collections/Connections'\n\nclass Nodes extends Backbone.Collection\n\n  initialize: (models, options) =>\n    self = this\n\n    @bind \"node:removed\", (node)=>\n      @.remove(node)\n      @trigger \"connections:removed\", node\n\n      \n    # save material nodes in an array so they can be quickly rebuild\n\n    # Each node collections has it's own indexer, used to get unique id\n    # @indexer = new Indexer()\n    # @connections = new Connections([], {indexer: @indexer})\n\n    # Parent node, used for groups\n    # @parent = options.parent\n\n    # @bind \"createConnection\", (from_node, from_type, to_node, to_type) =>\n    #   @connections.create\n    #     from_node: from_node\n    #     from_type: from_type\n    #     to_node: to_node\n    #     to_type: to_type\n\n    # @bind \"renderConnections\", (node) =>\n    #   @connections.renderConnections(node)\n\n    # @bind \"removeConnection\", (node) =>\n    #   @connections.map (c) ->\n    #     if c.from_node == node || c.to_node == node\n    #       self.removeConnection(c)\n\n  # clearWorkspace: () =>\n  #   @removeConnections()\n  #   @removeAll()\n  #   $(\"#webgl-window canvas\").remove()\n  #   @materials = []\n  #   @indexer.reset()\n  #   return this\n\n  destroy: () =>\n    # @removeConnections()\n    @removeAll()\n    # delete @materials\n    # delete @indexer\n    # delete @connections\n\n  # bindTimelineEvents: (timeline) =>\n  #   if @timeline\n  #     @timeline.off(\"tfieldsRebuild\", @showNodesAnimation)\n  #     @timeline.off(\"startSound\", @startSound)\n  #     @timeline.off(\"stopSound\", @stopSound)\n\n  #   @timeline = timeline\n  #   @timeline.on(\"tfieldsRebuild\", @showNodesAnimation)\n  #   @timeline.on(\"startSound\", @startSound)\n  #   @timeline.on(\"stopSound\", @stopSound)\n\n  find: (node_name) =>\n    return this.where({name: node_name})\n\n  createNode: (options) =>\n    # If not is a string instead of an object then take the option as the node type\n    if $.type(options) == \"string\"\n      options = {type: options}\n\n    # Save references of the application settings and timeline in the node model\n    options.timeline = @timeline\n    options.settings = @settings\n\n    # Save a reference of the nodes indexer\n    # options.indexer = @indexer\n\n    options.parent = @parent\n\n    # Print error if the node type is not found and return false\n    if !ThreeNodes.Core.nodes.models[options.type]\n      console.error(\"Node type doesn't exists: \" + options.type)\n      return false\n\n    # Create the node and pass the options\n    n = new ThreeNodes.Core.nodes.models[options.type](options)\n\n    # Add the node to the collection\n    @add(n)\n    n\n\n  render: () =>\n    return;\n    # Define temporary objects to index the nodes\n    invalidNodes = {}\n    terminalNodes = {}\n\n    # Flatten the array of nodes.\n    # Nodes from groups will appear in the invalidNodes and/or terminalNodes too\n    # Get all root nodes and nodes requiring an update\n    buildNodeArrays = (nodes) ->\n      for node in nodes\n        if node.hasOutConnection() == false || node.auto_evaluate || node.delays_output\n          terminalNodes[node.attributes[\"id\"] + \"/\" + node.attributes[\"gid\"]] = node\n        invalidNodes[node.attributes[\"id\"] + \"/\" + node.attributes[\"gid\"]] = node\n        if node.nodes\n          buildNodeArrays(node.nodes.models)\n    buildNodeArrays(@models)\n\n    # Update a node and his parents\n    evaluateSubGraph = (node) ->\n      upstreamNodes = node.getUpstreamNodes()\n      for upnode in upstreamNodes\n        if invalidNodes[upnode.attributes[\"id\"] + \"/\" + upnode.attributes[\"gid\"]] && !upnode.delays_output\n          evaluateSubGraph(upnode)\n      if node.dirty || node.auto_evaluate\n        node.compute()\n        node.dirty = false\n        node.fields.setFieldInputUnchanged()\n\n      delete invalidNodes[node.attributes[\"id\"] + \"/\" + node.attributes[\"gid\"]]\n      true\n\n    # Process all root nodes which require an update\n    for id of terminalNodes\n      if invalidNodes[id]\n        evaluateSubGraph(terminalNodes[id])\n    true\n\n  # createConnectionFromObject: (connection) =>\n  #   # Get variables from their id\n  #   from_gid = if connection.from_node_gid then connection.from_node_gid.toString() else \"-1\"\n  #   from_node = @getNodeByNid(connection.from_node.toString(), from_gid)\n  #   from = connection.from\n  #   to_gid = if connection.to_node_gid then connection.to_node_gid.toString() else \"-1\"\n  #   to_node = @getNodeByNid(connection.to_node.toString(), to_gid)\n  #   to = connection.to\n\n  #   # If a field is missing try to switch from/to\n  #   if !from || !to\n  #     tmp = from_node\n  #     from_node = to_node\n  #     to_node = tmp\n  #     from = from_node.fields.outputs[connection.to.toString()]\n  #     to = to_node.fields.inputs[connection.from.toString()]\n\n  #   c = @connections.create\n  #       from_node: from_node\n  #       to_node: to_node\n  #       from_type: connection.from\n  #       to_type: connection.to\n  #       id: connection.id\n\n  #   c\n\n  # createGroup: (model, external_objects = []) =>\n  #   # create the group node\n  #   grp = @createNode(model)\n\n  #   # Recreate the external connections\n  #   for connection in external_objects\n  #     from = @getNodeByNid(connection.from_node)\n  #     to = @getNodeByNid(connection.to_node)\n\n  #     debugger;\n  #     c = @connections.create\n  #       from_node: from\n  #       from_type: connection.from\n  #       to_node: to\n  #       to_type: connection.to\n\n  #   return grp\n\n  # removeGroupsByDefinition: (def) =>\n  #   _nodes = @models.concat()\n  #   _.each _nodes, (node) -> if node.definition && node.definition.gid == def.gid then node.remove()\n\n  # renderAllConnections: () =>\n  #   @connections.render()\n\n  # removeConnection: (c) ->\n  #   @connections.remove(c)\n\n\n  getById: (id) ->\n    return @models.find (n)->\n      n.get('id') == id\n\n  # getNodeByNid: (id, gid = \"-1\") =>\n  #   for node in @models\n  #     if node.get(\"id\").toString() == id.toString()\n  #       if gid == \"-1\" || node.get(\"gid\").toString() == gid.toString()\n  #         return node\n  #     # special case for group\n  #     if node.nodes\n  #       res = node.nodes.getNodeByNid(id, gid)\n  #       if res then return res\n\n  #   return false\n\n  showNodesAnimation: () =>\n    @invoke \"showNodeAnimation\"\n\n  startSound: (time) =>\n    @each (node) -> if node.playSound instanceof Function then node.playSound(time)\n\n  stopSound: () =>\n    @each (node) -> if node.stopSound instanceof Function then node.stopSound()\n\n  removeSelectedNodes: () ->\n    for node in $(\".node.ui-selected\")\n      $(node).data(\"object\").remove()\n\n  # removeAll: () ->\n  #   $(\"#tab-attribute\").html(\"\")\n  #   models = @models.concat()\n  #   _.invoke models, \"remove\"\n  #   @reset([])\n  #   true\n\n  # removeConnections: () ->\n  #   @connections.removeAll()\n\nmodule.exports = Nodes\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/collections/Nodes.coffee","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 3\n// module chunks = 0 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Backbone\"\n// module id = 4\n// module chunks = 0 1 2 3","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\n\nclass Node extends Backbone.Model\n  defaults:\n    id: -1\n    x: 0\n    y: 0\n    width: 90\n    height: 26\n    name: \"\"\n\n  initialize: (obj) =>\n    super\n    \n    id = obj.id || Index.getInstance().getUID() #todo: Indexer\n    @set('id', id)\n    \n    name = obj.name || @typename()\n    @set('name', name)\n\n    @set('x', obj.x)\n    @set('y', obj.y)\n    @set('width', obj.width)\n    @set('height', obj.height)\n    return this\n\n  typename: => String(@constructor.name)\n\n  toJSON: () =>\n    res =\n      id: @get('id')\n      type: @typename()\n      x: @get('x')\n      y: @get('y')\n      width: @get('width')\n      height: @get('height')\n    res\n\n\n  remove: () =>\n    @trigger \"node:removed\", @\n \nmodule.exports = Node\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/Node.coffee","class Utils\n  @flatArraysAreEquals: (arr1, arr2) ->\n    if arr1.length != arr2.length\n      return false\n\n    for k, i in arr1\n      if arr1[i] != arr2[i]\n        return false\n\n    true\n\nmodule.exports = Utils\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Utils.coffee","Backbone = require 'Backbone'\nConnection = require 'threenodes/connections/models/Connection'\n\nclass Connections extends Backbone.Collection\n  model: Connection\n\n  initialize: (models, options) =>\n    @bind \"connection:removed\", (c) => \n      @remove(c)\n    super\n\n  create: (op) =>\n    @add(new Connection(\n      from: op.from\n      to: op.to\n      fromType: op.fromType\n      toType: op.toType\n    ))\n\n  removeByGroup: (g)=>\n    ids = [g.id]\n    \n    g.get('nodes').map((n)->\n      ids.push n.id\n    )\n    \n    todelete = @models.filter((c)=>\n      if(ids.includes(c.rawFromId) || ids.includes(c.rawToId))\n        return true\n      return false)\n\n    todelete.map((g)->\n      @.remove(g)\n    ,@)\n\n\n  removeByNode: (n)=>\n    @models.map((c)->\n      if(c.from.id == n.id || c.to.id == n.id)\n        @remove(c)\n    , @)\n\n  render: () =>\n    @each (c) -> c.render()\n\n  renderConnections: (node) =>\n    @each (c) ->\n      if(c.to == node or c.from == node)\n        c.render()\n\n  removeAll: () =>\n    @remove(@models)\n\nmodule.exports = Connections\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/connections/collections/Connections.coffee","Backbone = require 'Backbone'\nIndexer = require 'threenodes/utils/Indexer'\n\n# Node to Node; Group to Group; Node to Group\nclass Connection extends Backbone.Model\n  initialize: (obj) =>\n    id = obj.id || Indexer.getInstance().getUID()\n    @set('id', id)\n\n    @rawFromId = obj.from\n    @rawToId = obj.to\n\n    \n    groupFrom = core.groups.getByNodeId(obj.from)\n    nodeFrom = core.nodes.getById(obj.from)\n    @from = nodeFrom || groupFrom;\n    \n\n    groupTo = core.groups.getByNodeId(obj.to)\n    nodeTo = core.nodes.getById(obj.to)\n    @to = nodeTo || groupTo;\n\n    @fromType = obj.fromType;\n    @toType = obj.toType;\n\n  render: () =>\n    \n    @trigger(\"render\", this, this)\n\n  validate: () =>\n    return false\n  \n  # todo\n  toJSON: () ->\n    res =\n      id: @get(\"id\")\n      from: @rawFromId\n      fromType: @fromType\n      to: @rawToId\n      toType: @toType\n    res\n\nmodule.exports = Connection\n\n\n// WEBPACK FOOTER //\n// ./threenodes/connections/models/Connection.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nGroup = require '../models/Group'\n\nclass Groups extends Backbone.Collection\n\n  initialize: (models, options) =>\n    @bind \"group:removed\", (group)=>\n      @.remove(group)\n      @trigger \"connections:removed\", group\n\n  createGroup: () =>\n    nodes = @getSelectedNodes()\n    n = new Group({nodes: nodes})\n    @add(n)\n  \n  getById: (id) ->\n    return @models.find (g)->\n      g.get('id') == id\n\n  getByNodeId: (id) -> \n    return @models.find (g) ->\n      nodes = g.get('nodes')\n      return nodes.find (n) -> \n        return n.id == id\n\n  getSelectedNodes: () ->\n    selected_nodes = []\n    $selected = $(\".node.ui-selected\").not(\".node .node\")\n    $selected.each () ->\n      node = $(this).data(\"object\")\n      selected_nodes.push(node)\n    return selected_nodes\n\nmodule.exports = Groups\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/groups/collections/Groups.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nNode = require '../../nodes/models/Node'\n\n\n# id\n# nodes\n# name\n\nclass Group extends Backbone.Model\n    defaults:\n        id: -1\n        width: 90\n        height: 26\n        x: 0\n        y: 0\n        name: \"\"\n\n    initialize: (obj) =>\n        super\n        @set('name', obj.name || @typename())\n        @set('id', obj.id || Indexer.getInstance().getUID())\n        @set('x', obj.x)\n        @set('y', obj.y)\n        @set('nodes', obj.nodes)\n    \n    typename: => String(@constructor.name)\n\n    getNodesAveragePosition: () ->\n        min_x = 0\n        min_y = 0\n        max_x = 0\n        max_y = 0\n        for node in this.get('nodes')\n            min_x = Math.min(min_x, node.get(\"x\"))\n            max_x = Math.max(max_x, node.get(\"x\"))\n            min_y = Math.min(min_y, node.get(\"y\"))\n            max_y = Math.max(max_y, node.get(\"y\"))\n\n        dx = (min_x + max_x) / 2\n        dy = (min_y + max_y) / 2\n        return {x: dx, y: dy}\n\n    remove: () =>\n        @trigger \"group:removed\", @\n\nmodule.exports = Group\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/groups/models/Group.coffee"],"sourceRoot":""}