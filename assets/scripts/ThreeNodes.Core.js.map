{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 622270d4f497c00eb335","webpack:///./threenodes/Core.coffee","webpack:///./threenodes/nodes/collections/Nodes.coffee","webpack:///external \"_\"","webpack:///external \"Backbone\"","webpack:///./threenodes/nodes/models/Node.coffee","webpack:///./threenodes/utils/Utils.coffee","webpack:///./threenodes/connections/collections/Connections.coffee","webpack:///./threenodes/connections/models/Connection.coffee","webpack:///./threenodes/groups/collections/Groups.coffee","webpack:///./threenodes/groups/models/Group.coffee","webpack:///./threenodes/utils/Indexer.coffee","webpack:///./threenodes/db.coffee"],"names":[],"mappings":"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","file":"ThreeNodes.Core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"_\"), require(\"Backbone\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"Backbone\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Core\"] = factory(require(\"_\"), require(\"Backbone\"));\n\telse\n\t\troot[\"ThreeNodes\"] = root[\"ThreeNodes\"] || {}, root[\"ThreeNodes\"][\"Core\"] = factory(root[\"_\"], root[\"Backbone\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 622270d4f497c00eb335","Nodes = require './nodes/collections/Nodes'\nNode = require './nodes/models/Node'\n\nConnections = require './connections/collections/Connections'\nConnection = require './connections/models/Connection'\n\nGroups = require './groups/collections/Groups'\nGroup = require './groups/models/Group'\n\n# Frida. please find better solution.\nIndexer = require 'threenodes/utils/Indexer'\n\nDB = require './db'\n\n#require 'jquery'\n\n#### App\nclass Core\n  @fields: {models:{}, views: {}}\n  @nodes: {models:{}, views: {}}\n  @groups: {models: {}, views: {}}\n  \n  \n  constructor: (options) ->\n    @id = indexer.getUID()\n\n    # Default settings\n    settings =\n      test: false\n      player_mode: false\n      direction: true\n    @settings = $.extend({}, settings, options)\n\n    @groups = new Groups([])\n    @nodes = new Nodes([], {settings: @settings})\n    @connections = new Connections()\n    @head = null # null or groupid\n\n    @nodes.bind('node:renderConnections', @renderConnectionsByNode.bind(@))\n    @groups.bind('node:renderConnections', @renderConnectionsByGroup.bind(@))\n\n    @nodes.bind \"connections:removed\", (n)=>@connections.removeByNode(n)\n    @groups.bind \"connections:removed\", (g)=>@connections.removeByGroup(g)\n    @nodes.bind \"connection:create\", (op) =>@connections.create(op)\n    @groups.bind \"connection:create\", (op) =>@connections.create(op)\n\n\n  createGroup: (nodes)->\n    db = DB.getInstance()\n    index = Indexer.getInstance().getUID()\n    db.createGroup(nodes, index)    \n    @refreshDatamodelAccordingToDB(db)\n\n    \n    # group = new Group({nodes: nodes})\n    # @groups.add(group)\n    # @nodes.remove(nodes)\n    # @connections.render()\n\n  \n  renderConnectionsByNode: (node) ->\n    @connections.renderConnections(node)\n\n  renderConnectionsByGroup:(group) ->\n    group.get('nodes').map((n)->\n      @connections.renderConnections(n)\n    , @)\n    @connections.renderConnections(group)\n    \n\n  @addFieldType: (fieldName, field) ->\n    Core.fields.models[fieldName] = field\n    return true\n\n  @addFieldView: (fieldName, fieldView) ->\n    Core.fields.views[fieldName] = fieldView\n    return true\n\n  @addNodeType: (nodeName, nodeType) ->\n    Core.nodes.models[nodeName] = nodeType\n    return true\n\n  @addNodeView: (viewName, nodeView) ->\n    Core.nodes.views[viewName] = nodeView\n    return true\n\n  dump: () =>\n    db = DB.getInstance()\n    db.updateProperty({\n      nodes: @nodes\n      groups: @groups\n      connections: @connections\n    })\n    res = db.dump()\n    return JSON.stringify(res, null, 2)\n\n  setNodes: (json) ->\n    # @nodes.removeAll()\n    dbInstance = DB.getInstance()\n    dbInstance.loadFromJson(json)\n    db = dbInstance.dump()\n\n    tmparr = db.nodes.concat(db.connections)\n    db.groups.map (obj) ->\n      obj.nodes.map (nodeObj) ->\n        tmparr.push(nodeObj)\n    maxid = tmparr.reduce (a, b) ->\n      return (if a.id > b.id then a.id else b.id)\n    indexer.set(maxid)\n    @refreshDatamodelAccordingToDB(db)\n\n\n\n  refreshDatamodelAccordingToDB:(db)->\n   # @groups = new Groups([])\n    # @nodes = new Nodes([], {settings: @settings})\n    # @connections = new Connections()\n    @groups.removeAll()\n    @nodes.removeAll()\n    @connections.removeAll()\n\n\n    self = @\n    db.nodes.map (obj) ->\n      nodeClass = Core.nodes.models[obj.type]\n      node = new nodeClass(obj)\n      self.nodes.push(node)\n\n    # group\n    db.groups.map (obj) ->\n      groupObj = {\n        id: obj.id\n        x: obj.x\n        y: obj.y\n        width: obj.width,\n        height: obj.height,\n        nodes: obj.nodes\n      }\n      group = new Group(groupObj)\n      self.groups.push(group)\n\n\n    #connections\n    #                 node  group nodeInsideGroup\n    # node            n->n  n->g  n->g\n    # group           g->n  g->g  g->g\n    # nodeInsideGroup g->n  g->g  sameGroup ? not render: g->g\n    \n    db.connections.map (c) ->\n      from = {\n        node: self.nodes.getById(c.from)\n        group: self.groups.getById(c.from)\n        nodeInGroup: self.groups.getByNodeId(c.from)\n      }\n      to = {\n        node: self.nodes.getById(c.to)\n        group: self.groups.getById(c.to)\n        nodeInGroup: self.groups.getByNodeId(c.to)\n      }\n\n      if(from.nodeInGroup && to.nodeInGroup && from.nodeInGroup == to.nodeInGroup)\n        # do nothing\n      else\n        connection = new Connection({\n          id: c.id\n          from: from.node || from.group || from.nodeInGroup\n          to: to.node || to.group || to.nodeInGroup\n          fromType: c.fromType\n          toType: c.toType\n        })\n        self.connections.push(connection)\n\nmodule.exports = Core\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/Core.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\n\nclass Nodes extends Backbone.Collection\n\n  initialize: (models, options) =>\n    self = this\n\n    @bind \"node:removed\", (node)=>\n      @.remove(node)\n      @trigger \"connections:removed\", node\n\n      \n  destroy: () =>\n    @removeAll()\n\n  find: (node_name) =>\n    return this.where({name: node_name})\n\n  createNode: (options) =>\n    # If not is a string instead of an object then take the option as the node type\n    if $.type(options) == \"string\"\n      options = {type: options}\n\n    # Save references of the application settings and timeline in the node model\n    options.timeline = @timeline\n    options.settings = @settings\n\n    # Save a reference of the nodes indexer\n    # options.indexer = @indexer\n\n    options.parent = @parent\n\n    # Print error if the node type is not found and return false\n    if !ThreeNodes.Core.nodes.models[options.type]\n      console.error(\"Node type doesn't exists: \" + options.type)\n      return false\n\n    # Create the node and pass the options\n    n = new ThreeNodes.Core.nodes.models[options.type](options)\n\n    # Add the node to the collection\n    @add(n)\n    n\n\n\n  getById: (id) ->\n    return @models.find (n)->\n      n.get('id') == id\n\n  removeSelectedNodes: () ->\n    for node in $(\".node.ui-selected\")\n      $(node).data(\"object\").remove()\n\n  removeAll: () ->\n    @remove(@models)\n\nmodule.exports = Nodes\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/collections/Nodes.coffee","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 2\n// module chunks = 0 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Backbone\"\n// module id = 3\n// module chunks = 0 1 2 3","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\n\nclass Node extends Backbone.Model\n  defaults:\n    x: 0\n    y: 0\n    width: 90\n    height: 26\n    name: \"\"\n\n  initialize: (obj) =>\n    super\n    \n    id = obj.id || indexer.getUID() #todo: Indexer\n    @set('id', id)\n    \n    name = obj.name || @typename()\n    @set('name', name)\n\n    @set('x', obj.x)\n    @set('y', obj.y)\n    @set('width', obj.width)\n    @set('height', obj.height)\n    return this\n\n  typename: => String(@constructor.name)\n\n  toJSON: () =>\n    res =\n      id: @get('id')\n      type: @typename()\n      x: @get('x')\n      y: @get('y')\n      width: @get('width')\n      height: @get('height')\n    res\n\n\n  remove: () =>\n    @trigger \"node:removed\", @\n \nmodule.exports = Node\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/Node.coffee","class Utils\n  @flatArraysAreEquals: (arr1, arr2) ->\n    if arr1.length != arr2.length\n      return false\n\n    for k, i in arr1\n      if arr1[i] != arr2[i]\n        return false\n\n    true\n\nmodule.exports = Utils\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Utils.coffee","Backbone = require 'Backbone'\nConnection = require 'threenodes/connections/models/Connection'\n\nclass Connections extends Backbone.Collection\n  model: Connection\n\n  initialize: (models, options) =>\n    @bind \"connection:removed\", (c) => \n      @remove(c)\n    super\n\n  create: (op) =>\n    @add(new Connection(\n      from: op.from\n      to: op.to\n      fromType: op.fromType\n      toType: op.toType\n    ))\n\n  removeByGroup: (g)=>\n    ids = [g.id]\n    \n    g.get('nodes').map((n)->\n      ids.push n.id\n    )\n    \n    todelete = @models.filter((c)=>\n      if(ids.includes(c.rawFromId) || ids.includes(c.rawToId))\n        return true\n      return false)\n\n    todelete.map((g)->\n      @.remove(g)\n    ,@)\n\n\n  removeByNode: (n)=>\n    @models.map((c)->\n      if(c.from.id == n.id || c.to.id == n.id)\n        @remove(c)\n    , @)\n\n  render: () =>\n    @each (c) -> c.render()\n\n  renderConnections: (node) =>\n    @each (c) ->\n      if(c.to == node or c.from == node)\n        c.render()\n\n  removeAll: () =>\n    @remove(@models)\n\nmodule.exports = Connections\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/connections/collections/Connections.coffee","Backbone = require 'Backbone'\n\n# Node to Node; Group to Group; Node to Group\nclass Connection extends Backbone.Model\n  initialize: (obj) =>\n    @id = obj.id || indexer.getUID()\n    @from = obj.from    \n    @to = obj.to\n    @fromType = obj.fromType;\n    @toType = obj.toType;\n\n  render: () =>\n    @trigger(\"render\", this, this)\n\n  validate: () =>\n    return false\n  \nmodule.exports = Connection\n\n\n// WEBPACK FOOTER //\n// ./threenodes/connections/models/Connection.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nGroup = require '../models/Group'\n\nclass Groups extends Backbone.Collection\n\n  initialize: (models, options) =>\n    @bind \"group:removed\", (group)=>\n      @.remove(group)\n      @trigger \"connections:removed\", group\n\n  getById: (id) ->\n    return @models.find (g)->\n      g.get('id') == id\n\n  getByNodeId: (id) -> \n    return @models.find (g) ->\n      nodes = g.get('nodes')\n      return nodes.find (n) -> \n        return n.id == id\n  \n  removeAll: () ->\n    @remove(@models)\n\n\nmodule.exports = Groups\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/groups/collections/Groups.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nNode = require '../../nodes/models/Node'\n\n# id\n# nodes\n# name\n\nclass Group extends Backbone.Model\n    defaults:\n        width: 90\n        height: 26\n        x: 0\n        y: 0\n        name: \"Hello Group\"\n\n    initialize: (obj) =>\n        super\n        id = obj.id || indexer.getUID() \n        @set('name', obj.name || @typename())\n        @set('id', id)\n        @set('nodes', obj.nodes)\n\n        # avgpos = @getNodesAveragePosition()\n        # x = if obj.x then obj.x else avgpos.x\n        # y = if obj.y then obj.y else avgpos.y\n        @set('x', obj.x)\n        @set('y', obj.y)\n    \n    typename: => String(@constructor.name)\n\n    \n    remove: () =>\n        @trigger \"group:removed\", @\n\nmodule.exports = Group\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/groups/models/Group.coffee","# id generator.\n\n_instance = null\n\nclass Indexer\n  constructor: () ->\n    @uid = -1\n\n  getUID: () ->\n    return @uid += 1\n    \n  reset: () ->\n    @uid = -1\n\n  # when load, need to set id according to external file\n  set: (value)->\n    @uid = value\n\n\nIndexer.getInstance = () ->\n  if (!_instance)\n    _instance = new Indexer();\n  return _instance;\n\nmodule.exports = Indexer\n\n# Frida. find better solutions. indexer will be included into several packages. so there will be multiple indexer instance with diff uid.\nwindow.indexer = Indexer.getInstance()\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Indexer.coffee","db = null\n\n    \nclass DB\n    reset: ()=>\n        @nodes = []\n        @connections = []\n        @groups = []\n        @id = null\n\n    loadFromJson: (json)=>\n        @reset()\n        \n        @id = json.id\n        @nodes = json.nodes\n        @groups = json.groups\n        @connections = json.connections\n\n    \n    updateProperty: (param)=>\n        # no need to update connections\n        param.groups.map((gParam)=>\n            g = @groups.find((_g)=>\n                return _g.id == gParam.get('id')\n            )\n            g.x = gParam.get('x')\n            g.y = gParam.get('y')\n            g.width = gParam.get('width')\n            g.height = gParam.get('height')\n        , @)\n\n        param.nodes.map((nParam)=>\n            n = @nodes.find((_n)=>\n                return _n.id == nParam.id\n            )\n            n.x = nParam.get('x')\n            n.y = nParam.get('y')\n            n.width = nParam.get('width')\n            n.height = nParam.get('height')\n        , @)\n\n    calculatePos: (nodes) ->\n        min_x = 0\n        min_y = 0\n        max_x = 0\n        max_y = 0\n        for node in nodes\n            min_x = Math.min(min_x, node.get(\"x\"))\n            max_x = Math.max(max_x, node.get(\"x\"))\n            min_y = Math.min(min_y, node.get(\"y\"))\n            max_y = Math.max(max_y, node.get(\"y\"))\n\n        dx = (min_x + max_x) / 2\n        dy = (min_y + max_y) / 2\n        return {x: dx, y: dy}\n\n\n    createGroup: (nodes, index)=>\n        pos = @calculatePos(nodes)\n        nodesObj = nodes.map((n)=>\n            return n.toJSON()\n        )\n        @groups.push({\n            id: index\n            x: pos.x\n            y: pos.y\n            width: 90\n            height: 26\n            nodes: nodesObj\n        })\n\n\n        @nodes = @nodes.filter((n)->\n            nodeIds = nodes.map((_n)->\n                return _n.id\n            )\n            return !nodeIds.includes(n.id)\n        ,@)\n\n        \n        \n\n\n    dump: ()=>\n        return {\n            id: @id\n            nodes: @nodes\n            groups: @groups\n            connections: @connections\n        }\n\n    @getInstance = ()=>\n        if(!db)\n            db = new DB()\n        return db\n\nmodule.exports = DB\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/db.coffee"],"sourceRoot":""}