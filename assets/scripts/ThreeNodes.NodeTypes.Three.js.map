{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 726c7c680591e2e07a58?adf3*","webpack:///./NodeTypes.Three.coffee","webpack:///external \"_\"?b3b9*","webpack:///external \"Backbone\"?709d*","webpack:///./threenodes/nodes/models/Node.coffee?4363*","webpack:///./threenodes/utils/Utils.coffee?8c75*","webpack:///external \"jQuery\"?0cb8","webpack:///./threenodes/nodes/models/components/Geometry.coffee","webpack:///./threenodes/nodes/models/components/Lights.coffee","webpack:///./threenodes/nodes/models/components/Materials.coffee","webpack:///./threenodes/nodes/models/components/Three/NodeMaterialBase.coffee","webpack:///./threenodes/nodes/models/components/PostProcessing.coffee","webpack:///./libs/three-extras/js/shaders/VignetteShader.js","webpack:///./libs/three-extras/js/shaders/HorizontalBlurShader.js","webpack:///./libs/three-extras/js/shaders/VerticalBlurShader.js","webpack:///./libs/three-extras/js/shaders/BleachBypassShader.js","webpack:///./libs/three-extras/js/postprocessing/DotScreenPass.js","webpack:///./libs/three-extras/js/shaders/ConvolutionShader.js","webpack:///./libs/three-extras/js/postprocessing/BloomPass.js","webpack:///./libs/three-extras/js/shaders/FilmShader.js","webpack:///./libs/three-extras/js/postprocessing/FilmPass.js","webpack:///./threenodes/nodes/models/components/Three.coffee","webpack:///./libs/three-extras/js/loaders/ColladaLoader.js","webpack:///./threenodes/nodes/models/components/Three/Object3D.coffee","webpack:///./threenodes/utils/WebglBase.coffee","webpack:///./libs/three-extras/js/postprocessing/EffectComposer.js","webpack:///./libs/three-extras/js/postprocessing/MaskPass.js","webpack:///./libs/three-extras/js/postprocessing/RenderPass.js","webpack:///./libs/three-extras/js/postprocessing/ShaderPass.js","webpack:///./libs/three-extras/js/shaders/CopyShader.js","webpack:///external \"Blob\"","webpack:///external \"FileSaver\"","webpack:///./libs/canvas-toBlob.min.js","webpack:///./threenodes/nodes/models/components/ConstructiveSolidGeometry.coffee","webpack:///external \"Three\"","webpack:///./libs/csg.js","webpack:///./libs/ThreeCSG.js","webpack:///./threenodes/nodes/models/components/Particle.coffee","webpack:///./libs/Tween.js","webpack:///./libs/Sparks.js"],"names":[],"mappings":"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;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAkB,+BAA+B;;AAEjD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sBAAqB,yBAAyB;;AAE9C;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;;AAEA,mBAAkB,uBAAuB;;AAEzC;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,wBAAwB;;AAE1C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,oBAAmB,uBAAuB;;AAE1C;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;AACA;;AAEA,oBAAmB,oBAAoB;;AAEvC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,KAAI;;AAEJ;;AAEA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;AAEA,mBAAkB,yBAAyB;;AAE3C;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,yBAAyB;;AAE3C;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,yBAAyB;;AAE3C;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mBAAkB,yBAAyB;;AAE3C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,sBAAqB,qBAAqB;;AAE1C;;AAEA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,KAAI;;AAEJ;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;;AAEA;;AAEA,qBAAoB,iCAAiC;;AAErD;;AAEA;;AAEA;;AAEA,uBAAsB,mCAAmC;;AAEzD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAM;;AAEN;;AAEA,uBAAsB,oCAAoC;;AAE1D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mBAAkB,+BAA+B;;AAEjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,sBAAqB,6BAA6B;;AAElD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAkB,+BAA+B;;AAEjD;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mCAAkC,OAAO;;AAEzC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mCAAkC,OAAO;;AAEzC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mCAAkC,OAAO;;AAEzC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAE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,CAAW,CAAX;GAAV;;;;IAJG;;AAM1B,WAAU,CAAC,IAAI,CAAC,WAAhB,CAA4B,aAA5B,EAA2C,WAA3C;;AAEM;;;;;;;;GACJ,YAAC,UAAD,GAAa;;GACb,YAAC,WAAD,GAAc;;0BAEd,sBAAqB,SAAC,CAAD,EAAI,CAAJ;YAAU,CAAC,CAAC,SAAF,CAAY,CAAZ;GAAV;;;;IAJI;;AAM3B,WAAU,CAAC,IAAI,CAAC,WAAhB,CAA4B,cAA5B,EAA4C,YAA5C;;;;;;;ACpFA,iD;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAkD,kBAAkB,EAAE;AACtE;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,mCAAkC,UAAU,EAAE;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;;AAE1C;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,kBAAkB,EAAE;AACtE;AACA,IAAG;;AAEH;AACA,8CAA6C,UAAU,EAAE;AACzD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,kBAAkB,EAAE;AACvE;AACA,IAAG;;AAEH;AACA;AACA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACllBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,kDAAiD,eAAe;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;;AAEA,eAAc,mBAAmB;AACjC;AACA;;AAEA,gBAAe,2BAA2B;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qDAAoD,mBAAmB;AACvE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA,kE;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;;AAEA,IAAG;;AAEH;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,yDAAwD,mBAAmB;;AAE3E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,gDAA+C,mBAAmB;AAClE;AACA,I;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,qBAAqB;AACnC,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAA+C,mBAAmB;AAClE;AACA,I;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA0D,wBAAwB,EAAE;AACpF;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qDAAoD,mBAAmB;AACvE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AA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ACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;;;AAGA;;AAEA,GAAE;;AAEF;AACA,yCAAwC,KAAK;AAC7C;AACA;AACA;;AAEA;;AAEA;;AAEA,sEAAqE;;AAErE;;;AAGA,6BAA4B;AAC5B,wBAAuB;AACvB,2BAA0B;;AAE1B;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;;;;AAIA;AACA;;AAEA,GAAE;;;AAGF;AACA;;AAEA;;AAEA;AACA,oBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA,qBAAoB,SAAS;AAC7B;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,oBAAmB,SAAS;AAC5B;AACA;AACA,yBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;;;AAGA;AACA,wBAAuB,KAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;;AAEA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,qBAAoB,SAAS;AAC7B;AACA;;AAEA;;AAEA,iDAAgD;;AAEhD;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAuB;;AAEvB;AACA;AACA;;AAEA,yDAAwD;AACxD,yDAAwD;AACxD;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6B;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,yB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA,4BAA2B,UAAU;AACrC;AACA;;AAEA;;AAEA;;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,G","file":"ThreeNodes.NodeTypes.Three.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"_\"), require(\"Backbone\"), require(\"jQuery\"), require(\"Blob\"), require(\"FileSaver\"), require(\"Three\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"Backbone\", \"jQuery\", \"Blob\", \"FileSaver\", \"Three\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NodeTypes.Three\"] = factory(require(\"_\"), require(\"Backbone\"), require(\"jQuery\"), require(\"Blob\"), require(\"FileSaver\"), require(\"Three\"));\n\telse\n\t\troot[\"ThreeNodes\"] = root[\"ThreeNodes\"] || {}, root[\"ThreeNodes\"][\"NodeTypes.Three\"] = factory(root[\"_\"], root[\"Backbone\"], root[\"jQuery\"], root[\"Blob\"], root[\"FileSaver\"], root[\"Three\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_83__, __WEBPACK_EXTERNAL_MODULE_84__, __WEBPACK_EXTERNAL_MODULE_87__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 726c7c680591e2e07a58","require 'threenodes/nodes/models/components/Geometry'\nrequire 'threenodes/nodes/models/components/Lights'\nrequire 'threenodes/nodes/models/components/Materials'\nrequire 'threenodes/nodes/models/components/PostProcessing'\nrequire 'threenodes/nodes/models/components/Three'\nrequire 'threenodes/nodes/models/components/ConstructiveSolidGeometry'\nrequire 'threenodes/nodes/models/components/Particle'\n\n\n\n// WEBPACK FOOTER //\n// ./NodeTypes.Three.coffee","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 2\n// module chunks = 0 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Backbone\"\n// module id = 3\n// module chunks = 0 1 2 3","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\n\nclass Node extends Backbone.Model\n  defaults:\n    x: 0\n    y: 0\n    width: 90\n    height: 26\n    name: \"\"\n\n  initialize: (obj) =>\n    super\n    \n    id = obj.id || indexer.getUID() #todo: Indexer\n    @set('id', id)\n    \n    name = obj.name || @typename()\n    @set('name', name)\n\n    @set('x', obj.x)\n    @set('y', obj.y)\n    @set('width', obj.width)\n    @set('height', obj.height)\n    return this\n\n  typename: => String(@constructor.name)\n\n  toJSON: () =>\n    res =\n      id: @get('id')\n      type: @typename()\n      x: @get('x')\n      y: @get('y')\n      width: @get('width')\n      height: @get('height')\n      name: @get('name')\n    res\n\n\n  remove: () =>\n    @trigger \"node:removed\", @\n \nmodule.exports = Node\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/Node.coffee","class Utils\n  @flatArraysAreEquals: (arr1, arr2) ->\n    if arr1.length != arr2.length\n      return false\n\n    for k, i in arr1\n      if arr1[i] != arr2[i]\n        return false\n\n    true\n\nmodule.exports = Utils\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/Utils.coffee","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 20\n// module chunks = 1 2 3","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\nNode = require 'threenodes/nodes/models/Node'\n\nclass PlaneGeometry extends Node\n  @node_name = 'Plane'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.PlaneGeometry(100, 100, 1, 1, 1)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"width\": 100,\n        \"height\": 100,\n        \"segments_width\": 1,\n        \"segments_height\": 1,\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [@fields.getField(\"width\").getValue(), @fields.getField(\"height\").getValue(), @fields.getField(\"segments_width\").getValue(), @fields.getField(\"segments_height\").getValue()]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.PlaneGeometry(@fields.getField(\"width\").getValue(), @fields.getField(\"height\").getValue(), @fields.getField(\"segments_width\").getValue(), @fields.getField(\"segments_height\").getValue())\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('PlaneGeometry', PlaneGeometry)\n\nclass CubeGeometry extends Node\n  @node_name = 'Cube'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.CubeGeometry(100, 100, 100, 1, 1, 1)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"flip\": -1\n        \"width\": 100,\n        \"height\": 100,\n        \"depth\": 100,\n        \"segments_width\": 1,\n        \"segments_height\": 1,\n        \"segments_depth\": 1,\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [@fields.getField(\"width\").getValue(), @fields.getField(\"height\").getValue(), @fields.getField(\"depth\").getValue(), @fields.getField(\"segments_width\").getValue(), @fields.getField(\"segments_height\").getValue(), @fields.getField(\"segments_depth\").getValue(), @fields.getField(\"flip\").getValue()]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.CubeGeometry(@fields.getField(\"width\").getValue(), @fields.getField(\"height\").getValue(), @fields.getField(\"depth\").getValue(), @fields.getField(\"segments_width\").getValue(), @fields.getField(\"segments_height\").getValue(), @fields.getField(\"segments_depth\").getValue(), @fields.getField(\"flip\").getValue())\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('CubeGeometry', CubeGeometry)\n\nclass SphereGeometry extends Node\n  @node_name = 'Sphere'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.SphereGeometry(100, 20, 20)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"radius\": 100\n        \"segments_width\": 1\n        \"segments_height\": 1\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [@fields.getField(\"radius\").getValue(), @fields.getField(\"segments_width\").getValue(), @fields.getField(\"segments_height\").getValue()]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.SphereGeometry(@fields.getField(\"radius\").getValue(), @fields.getField(\"segments_width\").getValue(), @fields.getField(\"segments_height\").getValue())\n      @cached = new_cache\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('SphereGeometry', SphereGeometry)\n\nclass CylinderGeometry extends Node\n  @node_name = 'Cylinder'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.CylinderGeometry(100, 100, 20, 30, 1, false)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"radiusTop\": 100\n        \"radiusBottom\": 100\n        \"height\": 20\n        \"segmentsRadius\": 30\n        \"segmentsHeight\": 1\n        \"openEnded\": false\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [\n      @fields.getField(\"radiusTop\").getValue(), @fields.getField(\"radiusBottom\").getValue(), @fields.getField(\"height\").getValue(),\n      @fields.getField(\"segmentsRadius\").getValue(), @fields.getField(\"segmentsHeight\").getValue(), @fields.getField(\"openEnded\").getValue()\n    ]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.CylinderGeometry(\n        @fields.getField(\"radiusTop\").getValue(), @fields.getField(\"radiusBottom\").getValue(), @fields.getField(\"height\").getValue(),\n        @fields.getField(\"segmentsRadius\").getValue(), @fields.getField(\"segmentsHeight\").getValue(), @fields.getField(\"openEnded\").getValue()\n      )\n      @cached = new_cache\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('CylinderGeometry', CylinderGeometry)\n\nclass TorusGeometry extends Node\n  @node_name = 'Torus'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.TorusGeometry(100, 40, 8, 6, Math.PI * 2)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"radius\": 100\n        \"tube\": 40\n        \"segmentsR\": 8\n        \"segmentsT\": 6\n        \"arc\": Math.PI * 2\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [\n      @fields.getField(\"radius\").getValue(), @fields.getField(\"tube\").getValue(), @fields.getField(\"segmentsR\").getValue(),\n      @fields.getField(\"segmentsT\").getValue(), @fields.getField(\"arc\").getValue()\n    ]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.TorusGeometry(\n        @fields.getField(\"radius\").getValue(), @fields.getField(\"tube\").getValue(), @fields.getField(\"segmentsR\").getValue(),\n        @fields.getField(\"segmentsT\").getValue(), @fields.getField(\"arc\").getValue()\n      )\n      @cached = new_cache\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('TorusGeometry', TorusGeometry)\n\nclass TorusKnotGeometry extends Node\n  @node_name = 'TorusKnot'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.TorusKnotGeometry(200, 40, 64, 8, 2, 3, 1)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"radius\": 200\n        \"tube\": 40\n        \"segmentsR\": 64\n        \"segmentsT\": 8\n        \"p\": 2\n        \"q\": 3\n        \"heightScale\": 1\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [\n      @fields.getField(\"radius\").getValue(), @fields.getField(\"tube\").getValue(), @fields.getField(\"segmentsR\").getValue(),\n      @fields.getField(\"segmentsT\").getValue(), @fields.getField(\"p\").getValue(), @fields.getField(\"q\").getValue(), @fields.getField(\"heightScale\").getValue()\n    ]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.TorusKnotGeometry(\n        @fields.getField(\"radius\").getValue(), @fields.getField(\"tube\").getValue(), @fields.getField(\"segmentsR\").getValue(),\n        @fields.getField(\"segmentsT\").getValue(), @fields.getField(\"p\").getValue(), @fields.getField(\"q\").getValue(), @fields.getField(\"heightScale\").getValue()\n      )\n      @cached = new_cache\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('TorusKnotGeometry', TorusKnotGeometry)\n\nclass OctahedronGeometry extends Node\n  @node_name = 'Octahedron'\n  @group_name = 'Geometry'\n\n  constructor: () ->\n    super\n    @auto_evaluate = false\n    @ob = new THREE.OctahedronGeometry(100, 0)\n    @cached = @get_cache_array()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"radius\": 100\n        \"detail\": 0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    [@fields.getField(\"radius\").getValue(), @fields.getField(\"detail\").getValue()]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      @ob = new THREE.OctahedronGeometry(@fields.getField(\"radius\").getValue(), @fields.getField(\"detail\").getValue())\n      @cached = new_cache\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('OctahedronGeometry', OctahedronGeometry)\n\nclass TextGeometry extends Node\n  @node_name = 'Text'\n  @group_name = 'Geometry'\n\n  initialize: (options) =>\n    super\n    @ob = false\n    @cached = []\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"text\": \"Example\"\n        \"font\": {type: \"Any\", val: {}}\n        \"size\": 100\n        \"height\": 20\n        \"curveSegments\": 4\n        \"bevelEnabled\": false\n        \"bevelThickness\": 0\n        \"bevelSize\": 0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  get_cache_array: =>\n    font_obj = @fields.getField(\"font\").getValue()\n    if !font_obj.font then font_obj.font = ''\n    if !font_obj.weight then font_obj.weight = ''\n    [font_obj.font, font_obj.weight, @fields.getField(\"text\").getValue(), @fields.getField(\"size\").getValue(), @fields.getField(\"height\").getValue(), @fields.getField(\"curveSegments\").getValue(),\n      @fields.getField(\"bevelEnabled\").getValue(), @fields.getField(\"bevelThickness\").getValue(), @fields.getField(\"bevelSize\").getValue()]\n\n  compute: =>\n    new_cache = @get_cache_array()\n    font = this.fields.getField(\"font\").getValue()\n    has_font_attribute = (f) ->\n      if font[\"font\"] && font[\"weight\"]\n        return true\n      false\n\n    if !has_font_attribute(font) || this.fields.getField(\"text\").getValue() == \"\"\n      @ob = false\n      @fields.setField(\"out\", @ob)\n      return false\n    if Utils.flatArraysAreEquals(new_cache, @cached) == false\n      console.log \"building text #{font.font} / #{font.weight}\"\n      @ob = new THREE.TextGeometry @fields.getField(\"text\").getValue(),\n        size: @fields.getField(\"size\").getValue()\n        height: @fields.getField(\"height\").getValue()\n        font: font.font\n        weight: font.weight\n        curveSegments: @fields.getField(\"curveSegments\").getValue()\n      @ob.computeBoundingBox()\n      @ob.computeVertexNormals()\n\n    @cached = new_cache\n\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('TextGeometry', TextGeometry)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Geometry.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nNode = require 'threenodes/nodes/models/Node'\n\nclass PointLight extends Node\n  @node_name = 'PointLight'\n  @group_name = 'Lights'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.PointLight(0xffffff)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xffffff)}\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3(0, 300, 0)}\n        \"intensity\": 1\n        \"distance\": 0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    super\n\n  compute: =>\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('PointLight', PointLight)\n\nclass SpotLight extends Node\n  @node_name = 'SpotLight'\n  @group_name = 'Lights'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.SpotLight(0xffffff)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xffffff)}\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3(0, 300, 0)}\n        \"target\": {type: \"Any\", val: new THREE.Object3D()}\n        \"intensity\": 1\n        \"distance\": 0\n        \"castShadow\": false\n        \"shadowCameraNear\": 50\n        \"shadowCameraFar\": 5000\n        \"shadowCameraFov\": 50\n        \"shadowBias\": 0\n        \"shadowDarkness\": 0.5\n        \"shadowMapWidth\": 512\n        \"shadowMapHeight\": 512\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    super\n\n  compute: =>\n    if @fields.getField(\"castShadow\").getValue() != @ob.castShadow\n      @trigger(\"RebuildAllShaders\")\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('SpotLight', SpotLight)\n\nclass DirectionalLight extends Node\n  @node_name = 'DirectionalLight'\n  @group_name = 'Lights'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.DirectionalLight(0xffffff)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xffffff)}\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3(0, 300, 0)}\n        \"intensity\": 1\n        \"distance\": 0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    super\n\n  compute: =>\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('DirectionalLight', DirectionalLight)\n\nclass AmbientLight extends Node\n  @node_name = 'AmbientLight'\n  @group_name = 'Lights'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.AmbientLight(0xffffff)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xffffff)}\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3(0, 300, 0)}\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: =>\n    delete @ob\n    super\n\n  compute: =>\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('AmbientLight', AmbientLight)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Lights.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nNode = require 'threenodes/nodes/models/Node'\nNodeMaterialBase = require 'threenodes/nodes/models/components/Three/NodeMaterialBase'\n\n\nclass MeshBasicMaterial extends NodeMaterialBase\n  @node_name = 'MeshBasic'\n  @group_name = 'Materials'\n\n  initialize: (options) =>\n    super\n    @ob = []\n    @material_class = THREE.MeshBasicMaterial\n    @vars_rebuild_shader_on_change = [\"transparent\", \"depthTest\", \"map\"]\n    @material_cache = @createCacheObject(@vars_rebuild_shader_on_change)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xff0000)}\n        \"map\": {type: \"Any\", val: false}\n        \"reflectivity\": 1\n        \"refractionRatio\": 0.98\n        \"wireframe\": false\n        \"wireframeLinecap\": 1\n        \"vertexColors\": false\n        \"skinning\": false\n        \"fog\": true\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\nThreeNodes.Core.addNodeType('MeshBasicMaterial', MeshBasicMaterial)\n\nclass LineBasicMaterial extends NodeMaterialBase\n  @node_name = 'LineBasic'\n  @group_name = 'Materials'\n\n  initialize: (options) =>\n    super\n    @ob = []\n    @material_class = THREE.LineBasicMaterial\n    @vars_rebuild_shader_on_change = [\"transparent\", \"depthTest\"]\n    @material_cache = @createCacheObject(@vars_rebuild_shader_on_change)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xff0000)}\n        \"linewidth\": 1\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\nThreeNodes.Core.addNodeType('LineBasicMaterial', LineBasicMaterial)\n\nclass MeshLambertMaterial extends NodeMaterialBase\n  @node_name = 'MeshLambert'\n  @group_name = 'Materials'\n\n  initialize: (options) =>\n    super\n    @ob = []\n    @material_class = THREE.MeshLambertMaterial\n    @vars_rebuild_shader_on_change = [\"transparent\", \"depthTest\", \"map\"]\n    @material_cache = @createCacheObject(@vars_rebuild_shader_on_change)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xff0000)}\n        \"ambient\": {type: \"Color\", val: new THREE.Color(0x050505)}\n        \"map\": {type: \"Any\", val: false}\n        \"reflectivity\": 1\n        \"refractionRatio\": 0.98\n        \"wireframe\": false\n        \"vertexColors\": {type: \"Any\", val: false}\n        \"skinning\": false\n        \"fog\": true\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\nThreeNodes.Core.addNodeType('MeshLambertMaterial', MeshLambertMaterial)\n\nclass MeshPhongMaterial extends NodeMaterialBase\n  @node_name = 'MeshPhong'\n  @group_name = 'Materials'\n\n  initialize: (options) =>\n    super\n    @ob = []\n    @material_class = THREE.MeshPhongMaterial\n    @vars_rebuild_shader_on_change = [\"transparent\", \"depthTest\", \"map\"]\n    @material_cache = @createCacheObject(@vars_rebuild_shader_on_change)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xff0000)}\n        \"map\": {type: \"Any\", val: false}\n        \"ambient\": {type: \"Color\", val: new THREE.Color(0x050505)}\n        \"specular\": {type: \"Color\", val: new THREE.Color(0x111111)}\n        \"shininess\": 30\n        \"reflectivity\": 1\n        \"refractionRatio\": 0.98\n        \"wireframe\": false\n        \"vertexColors\": {type: \"Any\", val: false}\n        \"skinning\": false\n        \"fog\": true\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\nThreeNodes.Core.addNodeType('MeshPhongMaterial', MeshPhongMaterial)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Materials.coffee","Node = require 'threenodes/nodes/models/Node'\n\nclass NodeMaterialBase extends Node\n  initialize: (options) =>\n    super\n    @ob = false\n    @auto_evaluate = false\n    @material_class = false\n    @last_slice_count = -1\n    @is_material = true\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"opacity\": 1\n        \"transparent\": false\n        \"side\":\n          type: \"Float\"\n          val: THREE.FrontSide\n          values:\n            \"Front\": THREE.FrontSide\n            \"Back\": THREE.BackSide\n            \"Both\": THREE.DoubleSide\n        \"depthTest\": true\n        \"alphaTest\": 0\n        \"polygonOffset\": false\n        \"polygonOffsetFactor\": 0\n        \"polygonOffsetUnits\": 0\n        \"blending\":\n          type: \"Float\"\n          val: THREE.NormalBlending\n          values:\n            \"Normal\": THREE.NormalBlending\n            \"Additive\": THREE.AdditiveBlending\n            \"Subtractive\": THREE.SubtractiveBlending\n            \"Multiply\": THREE.MultiplyBlending\n            \"AdditiveAlpha\": THREE.AdditiveAlphaBlending\n    return $.extend(true, base_fields, fields)\n\n  rebuildShader: () =>\n    if !@ob\n      return @\n    if $.type(@ob) == \"array\"\n      for sub_material in @ob\n        console.log \"rebuilding submaterial\"\n        sub_material.needsUpdate = true\n    else\n      @ob.needsUpdate = true\n    @\n\n  remove: () =>\n    delete @ob\n    delete @material_cache\n    delete @material_class\n    super\n\n  compute: =>\n    needs_rebuild = false\n    numItems = @fields.getMaxInputSliceCount()\n    if @inputValueHasChanged(@vars_rebuild_shader_on_change) || @last_slice_count != numItems\n      needs_rebuild = true\n\n    if needs_rebuild == true\n      @ob = []\n      for i in [0..numItems]\n        @ob[i] = new @material_class()\n    for i in [0..numItems]\n      @applyFieldsToVal(@fields.inputs, @ob[i], [], i)\n    @material_cache = @createCacheObject(@vars_rebuild_shader_on_change)\n\n    @last_slice_count = numItems\n    @fields.setField(\"out\", @ob)\n\nmodule.exports = NodeMaterialBase\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Three/NodeMaterialBase.coffee","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\nNode = require 'threenodes/nodes/models/Node'\n\nrequire 'ShaderVignette'\nrequire 'HorizontalBlurShader'\nrequire 'VerticalBlurShader'\nrequire 'BleachBypassShader'\nrequire 'DotScreenPass'\n\nrequire 'ConvolutionShader'\nrequire 'BloomPass'\n\nrequire 'FilmShader'\nrequire 'FilmPass'\n\nclass BloomPass extends Node\n  @node_name = 'Bloom'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    @ob = new THREE.BloomPass(1.6)\n    @cached = @createCacheObject ['kernelSize', 'sigma', 'resolution']\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"strength\": 1.6\n        \"kernelSize\": 25\n        \"sigma\": 4.0\n        \"resolution\": 256\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    delete @cached\n    super\n\n  value_has_changed: (vals) =>\n    newvals = @createCacheObject vals\n    if Utils.flatArraysAreEquals(newvals, @cached) == false\n      @cached = newvals\n      return true\n    false\n\n  compute: =>\n    if @value_has_changed(['kernelSize', 'sigma', 'resolution']) == true\n      @ob = new THREE.BloomPass(@fields.getField(\"strength\").getValue(), @fields.getField('kernelSize').getValue(), @fields.getField('sigma').getValue(), @fields.getField('resolution').getValue())\n    @ob.copyUniforms[ \"opacity\" ].value = @fields.getField(\"strength\").getValue()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('BloomPass', BloomPass)\n\nclass DotScreenPass extends Node\n  @node_name = 'DotScreen'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    @ob = new THREE.DotScreenPass(new THREE.Vector2( 0.5, 0.5 ))\n    @cached = @createCacheObject ['center', 'angle', 'scale']\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"center\": {type: \"Vector2\", val: new THREE.Vector2( 0.5, 0.5 )}\n        \"angle\": 1.57\n        \"scale\": 1.0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    delete @cached\n    super\n\n  value_has_changed: (vals) =>\n    newvals = @createCacheObject vals\n    if Utils.flatArraysAreEquals(newvals, @cached) == false\n      @cached = newvals\n      return true\n    false\n\n  compute: =>\n    if @value_has_changed(['center', 'angle', 'scale']) == true\n      @ob = new THREE.DotScreenPass(@fields.getField(\"center\").getValue(), @fields.getField('angle').getValue(), @fields.getField('scale').getValue())\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('DotScreenPass', DotScreenPass)\n\nclass FilmPass extends Node\n  @node_name = 'Film'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    @ob = new THREE.FilmPass( 0.5, 0.125, 2048, false )\n    @cached = @createCacheObject ['noiseIntensity', 'scanlinesIntensity', 'scanlinesCount', 'grayscale']\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"noiseIntensity\": 0.5\n        \"scanlinesIntensity\": 0.125\n        \"scanlinesCount\": 2048\n        \"grayscale\": false\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    delete @cached\n    super\n\n  value_has_changed: (vals) =>\n    newvals = @createCacheObject vals\n    if Utils.flatArraysAreEquals(newvals, @cached) == false\n      @cached = newvals\n      return true\n    false\n\n  compute: =>\n    @ob.uniforms.grayscale.value = @fields.getField(\"grayscale\").getValue()\n    @ob.uniforms.nIntensity.value = @fields.getField(\"noiseIntensity\").getValue()\n    @ob.uniforms.sIntensity.value = @fields.getField(\"scanlinesIntensity\").getValue()\n    @ob.uniforms.sCount.value = @fields.getField(\"scanlinesCount\").getValue()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('FilmPass', FilmPass)\n\nclass VignettePass extends Node\n  @node_name = 'Vignette'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    shader = THREE.VignetteShader\n    @ob = new THREE.ShaderPass( shader )\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"offset\": 1.0\n        \"darkness\": 1.0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.uniforms[ \"offset\" ].value = @fields.getField(\"offset\").getValue()\n    @ob.uniforms[ \"darkness\" ].value = @fields.getField(\"darkness\").getValue()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('VignettePass', VignettePass)\n\nclass HorizontalBlurPass extends Node\n  @node_name = 'HorizontalBlur'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    shader = THREE.HorizontalBlurShader\n    @ob = new THREE.ShaderPass( shader )\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"delta\": 1.0 / 512.0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.uniforms[ \"h\" ].value = @fields.getField(\"delta\").getValue()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('HorizontalBlurPass', HorizontalBlurPass)\n\nclass VerticalBlurPass extends Node\n  @node_name = 'VerticalBlur'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    shader = THREE.VerticalBlurShader\n    @ob = new THREE.ShaderPass( shader )\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"delta\": 1.0 / 512.0\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.uniforms[ \"v\" ].value = @fields.getField(\"delta\").getValue()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('VerticalBlurPass', VerticalBlurPass)\n\nclass BleachPass extends Node\n  @node_name = 'Bleach'\n  @group_name = 'PostProcessing'\n\n  initialize: (options) =>\n    super\n    shader = THREE.BleachBypassShader\n    @ob = new THREE.ShaderPass( shader )\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"opacity\": 0.95\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.uniforms[ \"opacity\" ].value = @fields.getField(\"opacity\").getValue()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('BleachPass', BleachPass)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/PostProcessing.coffee","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Vignette shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\n\nTHREE.VignetteShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"offset\":   { type: \"f\", value: 1.0 },\n\t\t\"darkness\": { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float offset;\",\n\t\t\"uniform float darkness;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t// Eskil's vignette\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n\t\t\t\"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\n\t\t\t/*\n\t\t\t// alternative version from glfx.js\n\t\t\t// this one makes more \"dusty\" look (as opposed to \"burned\")\n\n\t\t\t\"vec4 color = texture2D( tDiffuse, vUv );\",\n\t\t\t\"float dist = distance( vUv, vec2( 0.5 ) );\",\n\t\t\t\"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t\t\t\"gl_FragColor = color;\",\n\t\t\t*/\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/VignetteShader.js\n// module id = 65\n// module chunks = 2","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\n\nTHREE.HorizontalBlurShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"h\":        { type: \"f\", value: 1.0 / 512.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float h;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/HorizontalBlurShader.js\n// module id = 66\n// module chunks = 2","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\n\nTHREE.VerticalBlurShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"v\":        { type: \"f\", value: 1.0 / 512.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float v;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/VerticalBlurShader.js\n// module id = 67\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\n * - based on Nvidia example\n * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\n */\n\nTHREE.BleachBypassShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 base = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\",\n\t\t\t\"float lum = dot( lumCoeff, base.rgb );\",\n\t\t\t\"vec3 blend = vec3( lum );\",\n\n\t\t\t\"float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\",\n\n\t\t\t\"vec3 result1 = 2.0 * base.rgb * blend;\",\n\t\t\t\"vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\",\n\n\t\t\t\"vec3 newColor = mix( result1, result2, L );\",\n\n\t\t\t\"float A2 = opacity * base.a;\",\n\t\t\t\"vec3 mixRGB = A2 * newColor.rgb;\",\n\t\t\t\"mixRGB += ( ( 1.0 - A2 ) * base.rgb );\",\n\n\t\t\t\"gl_FragColor = vec4( mixRGB, base.a );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/BleachBypassShader.js\n// module id = 68\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DotScreenPass = function ( center, angle, scale ) {\n\n\tif ( THREE.DotScreenShader === undefined )\n\t\tconsole.error( \"THREE.DotScreenPass relies on THREE.DotScreenShader\" );\n\n\tvar shader = THREE.DotScreenShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tif ( center !== undefined ) this.uniforms[ \"center\" ].value.copy( center );\n\tif ( angle !== undefined ) this.uniforms[ \"angle\"].value = angle;\n\tif ( scale !== undefined ) this.uniforms[ \"scale\"].value = scale;\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.renderToScreen = false;\n\tthis.needsSwap = true;\n\n};\n\nTHREE.DotScreenPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.uniforms[ \"tSize\" ].value.set( readBuffer.width, readBuffer.height );\n\n\t\tTHREE.EffectComposer.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera, writeBuffer, false );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/DotScreenPass.js\n// module id = 69\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/ConvolutionShader.js\n// module id = 70\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tTHREE.EffectComposer.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tTHREE.EffectComposer.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/BloomPass.js\n// module id = 71\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nTHREE.FilmShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t// control parameter\n\t\t\"uniform float time;\",\n\n\t\t\"uniform bool grayscale;\",\n\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float nIntensity;\",\n\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float sIntensity;\",\n\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\"uniform float sCount;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t// sample the source\n\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\n\t\t\t// make some noise\n\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\"float dx = mod( x, 0.01 );\",\n\n\t\t\t// add noise\n\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\n\t\t\t// get us a sine and cosine\n\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\n\t\t\t// add scanlines\n\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\n\t\t\t// interpolate between source and result by intensity\n\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\n\t\t\t// convert to grayscale if desired\n\t\t\t\"if( grayscale ) {\",\n\n\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/FilmShader.js\n// module id = 72\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\n\tif ( THREE.FilmShader === undefined )\n\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\n\tvar shader = THREE.FilmShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\n\tthis.enabled = true;\n\tthis.renderToScreen = false;\n\tthis.needsSwap = true;\n\n};\n\nTHREE.FilmPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.uniforms[ \"time\" ].value += delta;\n\n\t\tTHREE.EffectComposer.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera, writeBuffer, false );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/FilmPass.js\n// module id = 73\n// module chunks = 2","jQuery = require 'jquery'\n_ = require 'Underscore'\nBackbone = require 'Backbone'\nNode = require 'threenodes/nodes/models/Node'\nrequire 'ColladaLoader'\nObject3D = require 'threenodes/nodes/models/components/Three/Object3D'\nWebglBase = require 'threenodes/utils/WebglBase'\n\nclass Scene extends Object3D\n  @node_name = 'Scene'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = new THREE.Scene()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"fog\": {type: 'Any', val: null}\n    return $.extend(true, base_fields, fields)\n\n  onFieldsCreated: () =>\n    @v_fog = @fields.getField(\"fog\")\n\n  remove: () =>\n    if @ob\n      delete @ob.fog\n      delete @ob.__objects\n      delete @ob.__lights\n      delete @ob.__objectsAdded\n      delete @ob.__objectsRemoved\n    delete @vfog\n    super\n\n  compute: =>\n    @applyFieldsToVal(@fields.inputs, @ob, ['children', 'lights', 'rotation'])\n    @apply_children()\n    rotation = @fields.getField('rotation').getValue()\n    @applyRotation(@ob, rotation)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('Scene', Scene)\n\nclass Object3DwithMeshAndMaterial extends Object3D\n  initialize: (options) =>\n    super\n    @material_cache = false\n    @geometry_cache = false\n\n  remove: () =>\n    delete @material_cache\n    delete @geometry_cache\n    super\n\n  rebuild_geometry: =>\n    field = @fields.getField('geometry')\n    if field.connections.length > 0\n      geom = field.connections[0].from_field.node\n      geom.cached = []\n      geom.compute()\n    else\n      @fields.getField('geometry').setValue(new THREE.CubeGeometry( 200, 200, 200 ))\n\n  get_geometry_cache: =>\n    res = \"\"\n    current_val = @fields.getField('geometry').get(\"value\")\n    if $.type(current_val) == \"array\"\n      for f in current_val\n        res += f.id\n    else\n      res = current_val.id\n    res\n\n  get_material_cache: =>\n    res = \"\"\n    current_val = @fields.getField('material').get(\"value\")\n    if $.type(current_val) == \"array\"\n      for f in current_val\n        res += f.id\n    else\n      res = current_val.id\n    res\n\nclass ColladaLoader extends Object3D\n  @node_name = 'ColladaLoader'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = [new THREE.Object3D()]\n    @file_url = \"\"\n    @vars_shadow_options = [\"castShadow\", \"receiveShadow\"]\n    @shadow_cache = []\n    @compute()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"file_url\": \"\"\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    if @ob\n      for item in @ob\n        @deleteObjectAttributes(item)\n\n    delete @model_object\n    super\n\n  onModelLoaded: () =>\n    for subchild in @ob\n      subchild.add(@model_object)\n\n  compute: =>\n    needs_rebuild = false\n    #numItems = @fields.getMaxInputSliceCount()\n    numItems = 0\n    new_url = @fields.getField('file_url').getValue()\n    #if @last_slice_count != numItems\n    #  needs_rebuild = true\n    #  @last_slice_count = numItems\n\n    cast = @fields.getField('castShadow').getValue()\n    receive = @fields.getField('receiveShadow').getValue()\n\n    if new_url != \"\" && @file_url != new_url\n      @ob = []\n      for i in [0..numItems]\n        @ob[i] = new THREE.Object3D()\n      loader = new THREE.ColladaLoader()\n      loader.options.convertUpAxis = true\n      loader.load new_url, (collada) =>\n        dae = collada.scene\n        dae.updateMatrix()\n        @model_object = dae\n        @onModelLoaded()\n        applyShadowOptionsToSubMeshes(@model_object)\n\n    applyShadowOptionsToSubMeshes = (obj) =>\n      if !obj\n        return false\n\n      obj.castShadow = cast\n      obj.receiveShadow = receive\n\n      if obj.material\n        rebuild_shader = false\n        if obj.material.castShadow != cast || obj.material.receiveShadow != receive\n          rebuild_shader = true\n          obj.material.castShadow = cast\n          obj.material.receiveShadow = receive\n        if rebuild_shader == true\n          obj.material.program = false\n      if obj.children && obj.children.length > 0\n        for child in obj.children\n          applyShadowOptionsToSubMeshes(child)\n\n    for i in [0..numItems]\n      @applyFieldsToVal(@fields.inputs, @ob[i], ['children', 'file_url', 'castShadow', 'receiveShadow', 'rotation'], i)\n      rotation = @fields.getField('rotation').getValue(i)\n      @applyRotation(@ob[i], rotation)\n      @ob[i].castShadow = cast\n      @ob[i].receiveShadow = receive\n\n    if @model_object && @inputValueHasChanged(@vars_shadow_options, @shadow_cache)\n      needs_rebuild = true\n      applyShadowOptionsToSubMeshes(@model_object)\n\n    if needs_rebuild == true\n      @trigger(\"RebuildAllShaders\")\n\n    @file_url = new_url\n    @shadow_cache = @createCacheObject(@vars_shadow_options)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('ColladaLoader', ColladaLoader)\n\nclass ThreeMesh extends Object3DwithMeshAndMaterial\n  @node_name = 'Mesh'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = [new THREE.Mesh(new THREE.CubeGeometry( 200, 200, 200 ), new THREE.MeshBasicMaterial({color: 0xff0000}))]\n    @last_slice_count = 1\n    @compute()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"geometry\": {type: \"Geometry\", val: new THREE.CubeGeometry( 200, 200, 200 )}\n        \"material\": {type: \"Material\", val: new THREE.MeshBasicMaterial({color: 0xff0000})}\n        \"overdraw\": false\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    if @ob\n      for item in @ob\n        @deleteObjectAttributes(item)\n        delete item.geometry\n        delete item.material\n\n    super\n\n  compute: =>\n    needs_rebuild = false\n    count_change = false\n    numItems = @fields.getMaxInputSliceCount()\n    new_material_cache = @get_material_cache()\n    new_geometry_cache = @get_geometry_cache()\n\n    if @last_slice_count != numItems\n      count_change = true\n\n      if !@ob?\n        @ob = []\n\n      if @last_slice_count > numItems\n        # Remove extra items.\n        @ob = @ob.slice(0, numItems)\n      else\n        # Add new items.\n        for i in [@ob.length..numItems]\n          item = new THREE.Mesh(@fields.getField('geometry').getValue(i), @fields.getField('material').getValue(i))\n          @ob[i] = item\n\n    if @inputValueHasChanged(@vars_shadow_options, @shadow_cache)\n      needs_rebuild = true\n\n    if @material_cache != new_material_cache\n      # let's trigger a geometry rebuild so we have the appropriate buffers set\n      @rebuild_geometry()\n\n    if @geometry_cache != new_geometry_cache || @material_cache != new_material_cache || needs_rebuild\n      @ob = []\n      for i in [0..numItems - 1]\n        item = new THREE.Mesh(@fields.getField('geometry').getValue(i), @fields.getField('material').getValue(i))\n        @ob[i] = item\n\n    for i in [0..@ob.length - 1]\n      @applyFieldsToVal(@fields.inputs, @ob[i], ['children', 'geometry', 'material', 'rotation'], i)\n      rotation = @fields.getField('rotation').getValue(i)\n      @applyRotation(@ob[i], rotation)\n\n    if needs_rebuild == true || count_change\n      @trigger(\"RebuildAllShaders\")\n\n    @shadow_cache = @createCacheObject(@vars_shadow_options)\n    @geometry_cache = @get_geometry_cache()\n    @material_cache = @get_material_cache()\n    @last_slice_count = numItems\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('ThreeMesh', ThreeMesh)\n\nclass ThreeLine extends Object3DwithMeshAndMaterial\n  @node_name = 'Line'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    @ob = [new THREE.Line(new THREE.CubeGeometry( 200, 200, 200 ), new THREE.LineBasicMaterial({color: 0xffffff}))]\n    @last_slice_count = 1\n    @compute()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"geometry\": {type: \"Geometry\", val: new THREE.CubeGeometry( 200, 200, 200 )}\n        \"material\": {type: \"Material\", val: new THREE.LineBasicMaterial({color: 0xffffff})}\n        \"type\":\n          type: \"Float\"\n          val: THREE.LineStrip\n          values:\n            \"LineStrip\": THREE.LineStrip\n            \"LinePieces\": THREE.LinePieces\n    return $.extend(true, base_fields, fields)\n\n  compute: =>\n    needs_rebuild = false\n    numItems = @fields.getMaxInputSliceCount()\n    new_material_cache = @get_material_cache()\n    new_geometry_cache = @get_geometry_cache()\n\n    if @last_slice_count != numItems\n      needs_rebuild = true\n      @last_slice_count = numItems\n\n    if @inputValueHasChanged(@vars_shadow_options, @shadow_cache)\n      needs_rebuild = true\n\n    if @material_cache != new_material_cache\n      # let's trigger a geometry rebuild so we have the appropriate buffers set\n      @rebuild_geometry()\n\n    if @geometry_cache != new_geometry_cache || @material_cache != new_material_cache || needs_rebuild\n      @ob = []\n      for i in [0..numItems]\n        item = new THREE.Line(@fields.getField('geometry').getValue(i), @fields.getField('material').getValue(i))\n        @ob[i] = item\n\n    for i in [0..numItems]\n      @applyFieldsToVal(@fields.inputs, @ob[i], ['children', 'geometry', 'material', 'rotation'], i)\n      rotation = @fields.getField('rotation').getValue(i)\n      @applyRotation(@ob[i], rotation)\n\n    if needs_rebuild == true\n      @trigger(\"RebuildAllShaders\")\n\n    @shadow_cache = @createCacheObject(@vars_shadow_options)\n    @geometry_cache = @get_geometry_cache()\n    @material_cache = @get_material_cache()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('ThreeLine', ThreeLine)\n\nclass Camera extends Node\n  @node_name = 'Camera'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = new THREE.PerspectiveCamera(75, 800 / 600, 1, 10000)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"fov\": 50\n        \"aspect\": 1\n        \"near\": 0.1\n        \"far\": 2000\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"target\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"useTarget\": false\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  deleteObjectAttributes: (ob) =>\n    if ob\n      delete ob.up\n      delete ob.position\n      delete ob.rotation\n      delete ob.scale\n      delete ob.matrix\n      delete ob.matrixWorld\n      delete ob.matrixRotationWorld\n      delete ob.quaternion\n      delete ob._vector\n\n  remove: () =>\n    @deleteObjectAttributes(@ob)\n    delete @ob\n    super\n\n  compute: =>\n    @applyFieldsToVal(@fields.inputs, @ob, ['target'])\n    @ob.lookAt(@fields.getField(\"target\").getValue())\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('Camera', Camera)\n\nclass Texture extends Node\n  @node_name = 'Texture'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = false\n    @cached = false\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"image\": {type: \"String\", val: false}\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    delete @cached\n    super\n\n  compute: =>\n    current = @fields.getField(\"image\").getValue()\n    if current && current != \"\"\n      if @cached == false || ($.type(@cached) == \"object\" && @cached.constructor == THREE.Texture && @cached.image.attributes[0].nodeValue != current)\n        #@ob = new THREE.Texture(current)\n        @ob = new THREE.ImageUtils.loadTexture(current)\n        console.log \"new texture\"\n        console.log @ob\n        @cached = @ob\n\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('Texture', Texture)\n\nclass Fog extends Node\n  @node_name = 'Fog'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = false\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xffffff)}\n        \"near\": 1\n        \"far\": 1000\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    if @ob == false\n      @ob = new THREE.Fog(0xffffff, 1, 1000)\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('Fog', Fog)\n\nclass FogExp2 extends Node\n  @node_name = 'FogExp2'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @ob = false\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xffffff)}\n        \"density\": 0.00025\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    if @ob == false\n      @ob = new THREE.FogExp2(0xffffff, 0.00025)\n    @applyFieldsToVal(@fields.inputs, @ob)\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('FogExp2', FogExp2)\n\nclass WebGLRenderer extends Node\n  @node_name = 'WebGLRenderer'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    if !WebglBase.instance\n      @webgl = new WebglBase()\n    else\n      @webgl = WebglBase.instance\n    @auto_evaluate = true\n    @ob = WebglBase.current_renderer\n\n    @width = 0\n    @height = 0\n\n  getFields: =>\n    camera = new THREE.PerspectiveCamera(75, 800 / 600, 1, 10000)\n    camera.position.z = 1000\n    base_fields = super\n    fields =\n      inputs:\n        \"width\": 800\n        \"height\": 600\n        \"scene\": {type: \"Scene\", val: new THREE.Scene()}\n        \"camera\": {type: \"Camera\", val: camera}\n        \"bg_color\": {type: \"Color\", val: new THREE.Color(0, 0, 0)}\n        \"postfx\": {type: \"Array\", val: []}\n        \"shadowCameraNear\": 3\n        \"shadowCameraFar\": 3000\n        \"shadowMapWidth\": 512\n        \"shadowMapHeight\": 512\n        \"shadowMapEnabled\": false\n        \"shadowMapSoft\": true\n\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    if WebglBase.current_camera == @fields.getField(\"camera\").getValue()\n      WebglBase.current_camera = new THREE.PerspectiveCamera(75, 800 / 600, 1, 10000)\n      WebglBase.renderModel.camera = WebglBase.current_camera\n    if WebglBase.current_scene == @fields.getField(\"scene\").getValue()\n      WebglBase.current_scene = new THREE.Scene()\n      WebglBase.renderModel.scene = WebglBase.current_scene\n\n    $(@ob.domElement).unbind()\n    delete @ob\n    delete @width\n    delete @height\n    super\n\n  apply_post_fx: =>\n    # work on a copy of the incoming array\n    fxs = @fields.getField(\"postfx\").getValue().slice(0)\n    # 1st pass = rendermodel, last pass = screen\n    fxs.unshift WebglBase.renderModel\n    fxs.push WebglBase.effectScreen\n    WebglBase.composer.passes = fxs\n\n  compute: =>\n    if !WebglBase.current_renderer\n      return\n\n    @trigger(\"on_compute\")\n\n    @applyFieldsToVal(@fields.inputs, @ob, ['width', 'height', 'scene', 'camera', 'bg_color', 'postfx'])\n    WebglBase.current_camera = @fields.getField(\"camera\").getValue()\n    WebglBase.current_scene = @fields.getField(\"scene\").getValue()\n\n    #set the current aspect on the camera\n    @fields.getField(\"camera\").getValue().aspect = @width / @height\n    @fields.getField(\"camera\").getValue().updateProjectionMatrix()\n\n    @apply_post_fx()\n    @ob.clear()\n    WebglBase.renderModel.scene = WebglBase.current_scene\n    WebglBase.renderModel.camera = WebglBase.current_camera\n    WebglBase.composer.renderer = WebglBase.current_renderer\n    WebglBase.composer.render(0.05)\n\nThreeNodes.Core.addNodeType('WebGLRenderer', WebGLRenderer)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Three.coffee","/**\n * @author Tim Knip / http://www.floorplanner.com/ / tim at floorplanner.com\n */\n\nTHREE.ColladaLoader = function () {\n\n\tvar COLLADA = null;\n\tvar scene = null;\n\tvar daeScene;\n\n\tvar readyCallbackFunc = null;\n\n\tvar sources = {};\n\tvar images = {};\n\tvar animations = {};\n\tvar controllers = {};\n\tvar geometries = {};\n\tvar materials = {};\n\tvar effects = {};\n\tvar cameras = {};\n\tvar lights = {};\n\n\tvar animData;\n\tvar visualScenes;\n\tvar baseUrl;\n\tvar morphs;\n\tvar skins;\n\n\tvar flip_uv = true;\n\tvar preferredShading = THREE.SmoothShading;\n\n\tvar options = {\n\t\t// Force Geometry to always be centered at the local origin of the\n\t\t// containing Mesh.\n\t\tcenterGeometry: false,\n\n\t\t// Axis conversion is done for geometries, animations, and controllers.\n\t\t// If we ever pull cameras or lights out of the COLLADA file, they'll\n\t\t// need extra work.\n\t\tconvertUpAxis: false,\n\n\t\tsubdivideFaces: true,\n\n\t\tupAxis: 'Y',\n\n\t\t// For reflective or refractive materials we'll use this cubemap\n\t\tdefaultEnvMap: null\n\n\t};\n\n\tvar colladaUnit = 1.0;\n\tvar colladaUp = 'Y';\n\tvar upConversion = null;\n\n\tfunction load ( url, readyCallback, progressCallback ) {\n\n\t\tvar length = 0;\n\n\t\tif ( document.implementation && document.implementation.createDocument ) {\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.onreadystatechange = function() {\n\n\t\t\t\tif( request.readyState == 4 ) {\n\n\t\t\t\t\tif( request.status == 0 || request.status == 200 ) {\n\n\n\t\t\t\t\t\tif ( request.responseXML ) {\n\n\t\t\t\t\t\t\treadyCallbackFunc = readyCallback;\n\t\t\t\t\t\t\tparse( request.responseXML, undefined, url );\n\n\t\t\t\t\t\t} else if ( request.responseText ) {\n\n\t\t\t\t\t\t\treadyCallbackFunc = readyCallback;\n\t\t\t\t\t\t\tvar xmlParser = new DOMParser();\n\t\t\t\t\t\t\tvar responseXML = xmlParser.parseFromString( request.responseText, \"application/xml\" );\n\t\t\t\t\t\t\tparse( responseXML, undefined, url );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( \"ColladaLoader: Empty or non-existing file (\" + url + \")\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( request.readyState == 3 ) {\n\n\t\t\t\t\tif ( progressCallback ) {\n\n\t\t\t\t\t\tif ( length == 0 ) {\n\n\t\t\t\t\t\t\tlength = request.getResponseHeader( \"Content-Length\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprogressCallback( { total: length, loaded: request.responseText.length } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\trequest.open( \"GET\", url, true );\n\t\t\trequest.send( null );\n\n\t\t} else {\n\n\t\t\talert( \"Don't know how to parse XML!\" );\n\n\t\t}\n\n\t}\n\n\tfunction parse( doc, callBack, url ) {\n\n\t\tCOLLADA = doc;\n\t\tcallBack = callBack || readyCallbackFunc;\n\n\t\tif ( url !== undefined ) {\n\n\t\t\tvar parts = url.split( '/' );\n\t\t\tparts.pop();\n\t\t\tbaseUrl = ( parts.length < 1 ? '.' : parts.join( '/' ) ) + '/';\n\n\t\t}\n\n\t\tparseAsset();\n\t\tsetUpConversion();\n\t\timages = parseLib( \"library_images image\", _Image, \"image\" );\n\t\tmaterials = parseLib( \"library_materials material\", Material, \"material\" );\n\t\teffects = parseLib( \"library_effects effect\", Effect, \"effect\" );\n\t\tgeometries = parseLib( \"library_geometries geometry\", Geometry, \"geometry\" );\n\t\tcameras = parseLib( \"library_cameras camera\", Camera, \"camera\" );\n\t\tlights = parseLib( \"library_lights light\", Light, \"light\" );\n\t\tcontrollers = parseLib( \"library_controllers controller\", Controller, \"controller\" );\n\t\tanimations = parseLib( \"library_animations animation\", Animation, \"animation\" );\n\t\tvisualScenes = parseLib( \"library_visual_scenes visual_scene\", VisualScene, \"visual_scene\" );\n\t\t\n\t\tmorphs = [];\n\t\tskins = [];\n\n\t\tdaeScene = parseScene();\n\t\tscene = new THREE.Object3D();\n\n\t\tfor ( var i = 0; i < daeScene.nodes.length; i ++ ) {\n\n\t\t\tscene.add( createSceneGraph( daeScene.nodes[ i ] ) );\n\n\t\t}\n\n\t\t// unit conversion\n\t\tscene.scale.multiplyScalar( colladaUnit );\n\n\t\tcreateAnimations();\n\n\t\tvar result = {\n\n\t\t\tscene: scene,\n\t\t\tmorphs: morphs,\n\t\t\tskins: skins,\n\t\t\tanimations: animData,\n\t\t\tdae: {\n\t\t\t\timages: images,\n\t\t\t\tmaterials: materials,\n\t\t\t\tcameras: cameras,\n\t\t\t\tlights: lights,\n\t\t\t\teffects: effects,\n\t\t\t\tgeometries: geometries,\n\t\t\t\tcontrollers: controllers,\n\t\t\t\tanimations: animations,\n\t\t\t\tvisualScenes: visualScenes,\n\t\t\t\tscene: daeScene\n\t\t\t}\n\n\t\t};\n\n\t\tif ( callBack ) {\n\n\t\t\tcallBack( result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction setPreferredShading ( shading ) {\n\n\t\tpreferredShading = shading;\n\n\t}\n\n\tfunction parseAsset () {\n\n\t\tvar elements = COLLADA.querySelectorAll('asset');\n\n\t\tvar element = elements[0];\n\n\t\tif ( element && element.childNodes ) {\n\n\t\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'unit':\n\n\t\t\t\t\t\tvar meter = child.getAttribute( 'meter' );\n\n\t\t\t\t\t\tif ( meter ) {\n\n\t\t\t\t\t\t\tcolladaUnit = parseFloat( meter );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'up_axis':\n\n\t\t\t\t\t\tcolladaUp = child.textContent.charAt(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction parseLib ( q, classSpec, prefix ) {\n\n\t\tvar elements = COLLADA.querySelectorAll(q);\n\n\t\tvar lib = {};\n\n\t\tvar i = 0;\n\n\t\tvar elementsLength = elements.length;\n\n\t\tfor ( var j = 0; j < elementsLength; j ++ ) {\n\n\t\t\tvar element = elements[j];\n\t\t\tvar daeElement = ( new classSpec() ).parse( element );\n\n\t\t\tif ( !daeElement.id || daeElement.id.length == 0 ) daeElement.id = prefix + ( i ++ );\n\t\t\tlib[ daeElement.id ] = daeElement;\n\n\t\t}\n\n\t\treturn lib;\n\n\t}\n\n\tfunction parseScene() {\n\t\n\t\tvar sceneElement = COLLADA.querySelectorAll('scene instance_visual_scene')[0];\n\t\t\n\t\tif ( sceneElement ) {\n\n\t\t\tvar url = sceneElement.getAttribute( 'url' ).replace( /^#/, '' );\n\t\t\treturn visualScenes[ url.length > 0 ? url : 'visual_scene0' ];\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\tfunction createAnimations() {\n\n\t\tanimData = [];\n\n\t\t// fill in the keys\n\t\trecurseHierarchy( scene );\n\n\t}\n\n\tfunction recurseHierarchy( node ) {\n\n\t\tvar n = daeScene.getChildById( node.name, true ),\n\t\t\tnewData = null;\n\n\t\tif ( n && n.keys ) {\n\n\t\t\tnewData = {\n\t\t\t\tfps: 60,\n\t\t\t\thierarchy: [ {\n\t\t\t\t\tnode: n,\n\t\t\t\t\tkeys: n.keys,\n\t\t\t\t\tsids: n.sids\n\t\t\t\t} ],\n\t\t\t\tnode: node,\n\t\t\t\tname: 'animation_' + node.name,\n\t\t\t\tlength: 0\n\t\t\t};\n\n\t\t\tanimData.push(newData);\n\n\t\t\tfor ( var i = 0, il = n.keys.length; i < il; i++ ) {\n\n\t\t\t\tnewData.length = Math.max( newData.length, n.keys[i].time );\n\n\t\t\t}\n\n\t\t} else  {\n\n\t\t\tnewData = {\n\t\t\t\thierarchy: [ {\n\t\t\t\t\tkeys: [],\n\t\t\t\t\tsids: []\n\t\t\t\t} ]\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0, il = node.children.length; i < il; i++ ) {\n\n\t\t\tvar d = recurseHierarchy( node.children[i] );\n\n\t\t\tfor ( var j = 0, jl = d.hierarchy.length; j < jl; j ++ ) {\n\n\t\t\t\tnewData.hierarchy.push( {\n\t\t\t\t\tkeys: [],\n\t\t\t\t\tsids: []\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn newData;\n\n\t}\n\n\tfunction calcAnimationBounds () {\n\n\t\tvar start = 1000000;\n\t\tvar end = -start;\n\t\tvar frames = 0;\n\t\tvar ID;\n\t\tfor ( var id in animations ) {\n\n\t\t\tvar animation = animations[ id ];\n\t\t\tID = ID || animation.id; \n\t\t\tfor ( var i = 0; i < animation.sampler.length; i ++ ) {\n\n\t\t\t\tvar sampler = animation.sampler[ i ];\n\t\t\t\t\n\t\t\t\tsampler.create();\n\n\t\t\t\tstart = Math.min( start, sampler.startTime );\n\t\t\t\tend = Math.max( end, sampler.endTime );\n\t\t\t\tframes = Math.max( frames, sampler.input.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { start:start, end:end, frames:frames,ID:ID };\n\n\t}\n\n\tfunction createMorph ( geometry, ctrl ) {\n\n\t\tvar morphCtrl = ctrl instanceof InstanceController ? controllers[ ctrl.url ] : ctrl;\n\n\t\tif ( !morphCtrl || !morphCtrl.morph ) {\n\n\t\t\tconsole.log(\"could not find morph controller!\");\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar morph = morphCtrl.morph;\n\n\t\tfor ( var i = 0; i < morph.targets.length; i ++ ) {\n\n\t\t\tvar target_id = morph.targets[ i ];\n\t\t\tvar daeGeometry = geometries[ target_id ];\n\n\t\t\tif ( !daeGeometry.mesh ||\n\t\t\t\t !daeGeometry.mesh.primitives ||\n\t\t\t\t !daeGeometry.mesh.primitives.length ) {\n\t\t\t\t continue;\n\t\t\t}\n\n\t\t\tvar target = daeGeometry.mesh.primitives[ 0 ].geometry;\n\n\t\t\tif ( target.vertices.length === geometry.vertices.length ) {\n\n\t\t\t\tgeometry.morphTargets.push( { name: \"target_1\", vertices: target.vertices } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.morphTargets.push( { name: \"target_Z\", vertices: geometry.vertices } );\n\n\t};\n\n\tfunction createSkin ( geometry, ctrl, applyBindShape ) {\n\n\t\tvar skinCtrl = controllers[ ctrl.url ];\n\n\t\tif ( !skinCtrl || !skinCtrl.skin ) {\n\n\t\t\tconsole.log( \"could not find skin controller!\" );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( !ctrl.skeleton || !ctrl.skeleton.length ) {\n\n\t\t\tconsole.log( \"could not find the skeleton for the skin!\" );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar skin = skinCtrl.skin;\n\t\tvar skeleton = daeScene.getChildById( ctrl.skeleton[ 0 ] );\n\t\tvar hierarchy = [];\n\n\t\tapplyBindShape = applyBindShape !== undefined ? applyBindShape : true;\n\n\t\tvar bones = [];\n\t\tgeometry.skinWeights = [];\n\t\tgeometry.skinIndices = [];\n\n\t\t//createBones( geometry.bones, skin, hierarchy, skeleton, null, -1 );\n\t\t//createWeights( skin, geometry.bones, geometry.skinIndices, geometry.skinWeights );\n\n\t\t/*\n\t\tgeometry.animation = {\n\t\t\tname: 'take_001',\n\t\t\tfps: 30,\n\t\t\tlength: 2,\n\t\t\tJIT: true,\n\t\t\thierarchy: hierarchy\n\t\t};\n\t\t*/\n\n\t\tif ( applyBindShape ) {\n\n\t\t\tfor ( var i = 0; i < geometry.vertices.length; i ++ ) {\n\n\t\t\t\tgeometry.vertices[ i ].applyMatrix4( skin.bindShapeMatrix );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setupSkeleton ( node, bones, frame, parent ) {\n\n\t\tnode.world = node.world || new THREE.Matrix4();\n\t\tnode.localworld = node.localworld || new THREE.Matrix4();\n\t\tnode.world.copy( node.matrix );\n\t\tnode.localworld.copy( node.matrix );\n\n\t\tif ( node.channels && node.channels.length ) {\n\n\t\t\tvar channel = node.channels[ 0 ];\n\t\t\tvar m = channel.sampler.output[ frame ];\n\n\t\t\tif ( m instanceof THREE.Matrix4 ) {\n\n\t\t\t\tnode.world.copy( m );\n\t\t\t\tnode.localworld.copy(m);\n\t\t\t\tif(frame == 0)\n\t\t\t\t\tnode.matrix.copy(m);\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parent ) {\n\n\t\t\tnode.world.multiplyMatrices( parent, node.world );\n\n\t\t}\n\n\t\tbones.push( node );\n\n\t\tfor ( var i = 0; i < node.nodes.length; i ++ ) {\n\n\t\t\tsetupSkeleton( node.nodes[ i ], bones, frame, node.world );\n\n\t\t}\n\n\t}\n\n\tfunction setupSkinningMatrices ( bones, skin ) {\n\n\t\t// FIXME: this is dumb...\n\t\t\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\t\t\n\t\t\tvar bone = bones[ i ];\n\t\t\tvar found = -1;\n\n\t\t\tif ( bone.type != 'JOINT' ) continue;\n\n\t\t\tfor ( var j = 0; j < skin.joints.length; j ++ ) {\n\n\t\t\t\tif ( bone.sid == skin.joints[ j ] ) {\n\n\t\t\t\t\tfound = j;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( found >= 0 ) {\n\n\t\t\t\tvar inv = skin.invBindMatrices[ found ];\n\n\t\t\t\tbone.invBindMatrix = inv;\n\t\t\t\tbone.skinningMatrix = new THREE.Matrix4();\n\t\t\t\tbone.skinningMatrix.multiplyMatrices(bone.world, inv); // (IBMi * JMi)\n\t\t\t\tbone.animatrix = new THREE.Matrix4();\n\n\t\t\t\tbone.animatrix.copy(bone.localworld);\n\t\t\t\tbone.weights = [];\n\n\t\t\t\tfor ( var j = 0; j < skin.weights.length; j ++ ) {\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < skin.weights[ j ].length; k ++ ) {\n\n\t\t\t\t\t\tvar w = skin.weights[ j ][ k ];\n\n\t\t\t\t\t\tif ( w.joint == found ) {\n\n\t\t\t\t\t\t\tbone.weights.push( w );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( \"ColladaLoader: Could not find joint '\" + bone.sid + \"'.\" );\n\n\t\t\t\tbone.skinningMatrix = new THREE.Matrix4();\n\t\t\t\tbone.weights = [];\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t//Walk the Collada tree and flatten the bones into a list, extract the position, quat and scale from the matrix\n\tfunction flattenSkeleton(skeleton) {\n\n\t\tvar list = [];\n\t\tvar walk = function(parentid, node, list) {\n\n\t\t\tvar bone = {};\n\t\t\tbone.name = node.sid;\n\t\t\tbone.parent = parentid;\n\t\t\tbone.matrix = node.matrix;\n\t\t\tvar data = [new THREE.Vector3(),new THREE.Quaternion(),new THREE.Vector3()];\n\t\t\tbone.matrix.decompose(data[0],data[1],data[2]);\n\t\t\t\t\t\t\t\n\t\t\tbone.pos = [data[0].x,data[0].y,data[0].z];\n\t\t\t\t\t\t\t\n\t\t\tbone.scl = [data[2].x,data[2].y,data[2].z];\n\t\t\tbone.rotq = [data[1].x,data[1].y,data[1].z,data[1].w];\n\t\t\tlist.push(bone);\n\n\t\t\tfor(var i in node.nodes) {\n\n\t\t\t\twalk(node.sid,node.nodes[i],list);\n\n\t\t\t}\n\n\t\t};\n\n\t\twalk(-1,skeleton,list);\n\t\treturn list;\n\n\t}\n\n\t//Move the vertices into the pose that is proper for the start of the animation\n\tfunction skinToBindPose(geometry,skeleton,skinController) {\n\n\t\tvar bones = [];\n\t\tsetupSkeleton( skeleton, bones, -1 );\n\t\tsetupSkinningMatrices( bones, skinController.skin );\n\t\tv = new THREE.Vector3();\n\t\tvar skinned = [];\n\n\t\tfor(var i =0; i < geometry.vertices.length; i++) {\n\n\t\t\tskinned.push(new THREE.Vector3());\n\n\t\t}\n\n\t\tfor ( i = 0; i < bones.length; i ++ ) {\n\n\t\t\tif ( bones[ i ].type != 'JOINT' ) continue;\n\n\t\t\tfor ( j = 0; j < bones[ i ].weights.length; j ++ ) {\n\n\t\t\t\tw = bones[ i ].weights[ j ];\n\t\t\t\tvidx = w.index;\n\t\t\t\tweight = w.weight;\n\n\t\t\t\to = geometry.vertices[vidx];\n\t\t\t\ts = skinned[vidx];\n\t\t\t\t\n\t\t\t\tv.x = o.x;\n\t\t\t\tv.y = o.y;\n\t\t\t\tv.z = o.z;\n\n\t\t\t\tv.applyMatrix4( bones[i].skinningMatrix );\n\n\t\t\t\ts.x += (v.x * weight);\n\t\t\t\ts.y += (v.y * weight);\n\t\t\t\ts.z += (v.z * weight);\n\t\t\t}\n\n\t\t}\n\n\t\tfor(var i =0; i < geometry.vertices.length; i++) {\n\n\t\t\tgeometry.vertices[i] = skinned[i];\n\n\t\t}\n\n\t}\n\n\tfunction applySkin ( geometry, instanceCtrl, frame ) {\n\n\t\t// TODO: get this from the renderer or options\n\t\tvar maxbones = 30;\n\t\t\n\t\tvar skinController = controllers[ instanceCtrl.url ];\n\n\t\tframe = frame !== undefined ? frame : 40;\n\n\t\tif ( !skinController || !skinController.skin ) {\n\n\t\t\tconsole.log( 'ColladaLoader: Could not find skin controller.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( !instanceCtrl.skeleton || !instanceCtrl.skeleton.length ) {\n\n\t\t\tconsole.log( 'ColladaLoader: Could not find the skeleton for the skin. ' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar animationBounds = calcAnimationBounds();\n\t\tvar skeleton = daeScene.getChildById( instanceCtrl.skeleton[0], true ) ||\n\t\t\t\t\t   daeScene.getChildBySid( instanceCtrl.skeleton[0], true );\n\t\t\n\t\t//flatten the skeleton into a list of bones\n\t\tvar bonelist = flattenSkeleton(skeleton);\n\t\tvar joints = skinController.skin.joints;\n\n\t\t//sort that list so that the order reflects the order in the joint list\n\t\tvar sortedbones = [];\n\t\tfor(var i = 0; i < joints.length; i++) {\n\n\t\t\tfor(var j =0; j < bonelist.length; j++) {\n\n\t\t\t\tif(bonelist[j].name == joints[i]) {\n\n\t\t\t\t\tsortedbones[i] = bonelist[j];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//hook up the parents by index instead of name\n\t\tfor(var i = 0; i < sortedbones.length; i++) {\n\n\t\t\tfor(var j =0; j < sortedbones.length; j++) {\n\n\t\t\t\tif(sortedbones[i].parent == sortedbones[j].name) {\n\n\t\t\t\t\tsortedbones[i].parent = j;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar i, j, w, vidx, weight;\n\t\tvar v = new THREE.Vector3(), o, s;\n\n\t\t// move vertices to bind shape\n\t\tfor ( i = 0; i < geometry.vertices.length; i ++ ) {\n\t\t\t\t\tgeometry.vertices[i].applyMatrix4( skinController.skin.bindShapeMatrix );\n\t\t}\n\n\t\tvar skinIndices = [];\n\t\tvar skinWeights = [];\n\t\tvar weights = skinController.skin.weights;\n\n\t\t//hook up the skin weights\n\t\t// TODO -  this might be a good place to choose greatest 4 weights\n\t\tfor(var i =0; i < weights.length; i++) {\n\n\t\t\tvar indicies = new THREE.Vector4(weights[i][0]?weights[i][0].joint:0,weights[i][1]?weights[i][1].joint:0,weights[i][2]?weights[i][2].joint:0,weights[i][3]?weights[i][3].joint:0);\n\t\t\tvar weight = new THREE.Vector4(weights[i][0]?weights[i][0].weight:0,weights[i][1]?weights[i][1].weight:0,weights[i][2]?weights[i][2].weight:0,weights[i][3]?weights[i][3].weight:0);\n\t\t\t\n\t\t\tskinIndices.push(indicies);\n\t\t\tskinWeights.push(weight);\n\n\t\t}\n\n\t\tgeometry.skinIndices = skinIndices;\n\t\tgeometry.skinWeights = skinWeights;\n\t\tgeometry.bones = sortedbones;\n\t\t// process animation, or simply pose the rig if no animation\n\t\t\n\t\t//create an animation for the animated bones\n\t\t//NOTE: this has no effect when using morphtargets\n\t\tvar animationdata = {\"name\":animationBounds.ID,\"fps\":30,\"length\":animationBounds.frames/30,\"hierarchy\":[]};\n\n\t\tfor(var j =0; j < sortedbones.length; j++) {\n\n\t\t\tanimationdata.hierarchy.push({parent:sortedbones[j].parent, name:sortedbones[j].name, keys:[]});\n\n\t\t}\n\n\t\t//if using hardware skinning, move the vertices into the binding pose\n\t\tif(sortedbones.length < maxbones) {\n\n\t\t\tskinToBindPose(geometry,skeleton,skinController);\n\n\t\t}\n\n\t\tfor ( frame = 0; frame < animationBounds.frames; frame ++ ) {\n\n\t\t\tvar bones = [];\n\t\t\tvar skinned = [];\n\t\t\t// process the frame and setup the rig with a fresh\n\t\t\t// transform, possibly from the bone's animation channel(s)\n\n\t\t\tsetupSkeleton( skeleton, bones, frame );\n\t\t\tsetupSkinningMatrices( bones, skinController.skin );\n\n\t\t\t//if using hardware skinning, just hook up the animiation data\n\t\t\tif(sortedbones.length < maxbones) {\n\n\t\t\t\tfor(var i = 0; i < bones.length; i ++) {\n\n\t\t\t\t\tfor(var j = 0; j < animationdata.hierarchy.length; j ++) {\n\n\t\t\t\t\t\tif(animationdata.hierarchy[j].name == bones[i].sid) {\n\n\t\t\t\t\t\t\tvar key = {};\n\t\t\t\t\t\t\tkey.time = (frame/30);\n\t\t\t\t\t\t\tkey.matrix = bones[i].animatrix;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(frame == 0)\n\t\t\t\t\t\t\t\tbones[i].matrix = key.matrix;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar data = [new THREE.Vector3(),new THREE.Quaternion(),new THREE.Vector3()];\n\t\t\t\t\t\t\tkey.matrix.decompose(data[0],data[1],data[2]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tkey.pos = [data[0].x,data[0].y,data[0].z];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tkey.scl = [data[2].x,data[2].y,data[2].z];\n\t\t\t\t\t\t\tkey.rot = data[1];\n\n\t\t\t\t\t\t\tanimationdata.hierarchy[j].keys.push(key);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.animation = animationdata;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise, process the animation into morphtargets\n\t\t\t\t\n\t\t\t\tfor ( i = 0; i < geometry.vertices.length; i++ ) {\n\n\t\t\t\t\tskinned.push( new THREE.Vector3() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < bones.length; i ++ ) {\n\n\t\t\t\t\tif ( bones[ i ].type != 'JOINT' ) continue;\n\n\t\t\t\t\tfor ( j = 0; j < bones[ i ].weights.length; j ++ ) {\n\n\t\t\t\t\t\tw = bones[ i ].weights[ j ];\n\t\t\t\t\t\tvidx = w.index;\n\t\t\t\t\t\tweight = w.weight;\n\n\t\t\t\t\t\to = geometry.vertices[vidx];\n\t\t\t\t\t\ts = skinned[vidx];\n\n\t\t\t\t\t\tv.x = o.x;\n\t\t\t\t\t\tv.y = o.y;\n\t\t\t\t\t\tv.z = o.z;\n\n\t\t\t\t\t\tv.applyMatrix4( bones[i].skinningMatrix );\n\n\t\t\t\t\t\ts.x += (v.x * weight);\n\t\t\t\t\t\ts.y += (v.y * weight);\n\t\t\t\t\t\ts.z += (v.z * weight);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\tgeometry.morphTargets.push( { name: \"target_\" + frame, vertices: skinned } );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction createSceneGraph ( node, parent ) {\n\n\t\tvar obj = new THREE.Object3D();\n\t\tvar skinned = false;\n\t\tvar skinController;\n\t\tvar morphController;\n\t\tvar i, j;\n\n\t\t// FIXME: controllers\n\n\t\tfor ( i = 0; i < node.controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ node.controllers[ i ].url ];\n\n\t\t\tswitch ( controller.type ) {\n\n\t\t\t\tcase 'skin':\n\n\t\t\t\t\tif ( geometries[ controller.skin.source ] ) {\n\n\t\t\t\t\t\tvar inst_geom = new InstanceGeometry();\n\n\t\t\t\t\t\tinst_geom.url = controller.skin.source;\n\t\t\t\t\t\tinst_geom.instance_material = node.controllers[ i ].instance_material;\n\n\t\t\t\t\t\tnode.geometries.push( inst_geom );\n\t\t\t\t\t\tskinned = true;\n\t\t\t\t\t\tskinController = node.controllers[ i ];\n\n\t\t\t\t\t} else if ( controllers[ controller.skin.source ] ) {\n\n\t\t\t\t\t\t// urgh: controller can be chained\n\t\t\t\t\t\t// handle the most basic case...\n\n\t\t\t\t\t\tvar second = controllers[ controller.skin.source ];\n\t\t\t\t\t\tmorphController = second;\n\t\t\t\t\t//\tskinController = node.controllers[i];\n\n\t\t\t\t\t\tif ( second.morph && geometries[ second.morph.source ] ) {\n\n\t\t\t\t\t\t\tvar inst_geom = new InstanceGeometry();\n\n\t\t\t\t\t\t\tinst_geom.url = second.morph.source;\n\t\t\t\t\t\t\tinst_geom.instance_material = node.controllers[ i ].instance_material;\n\n\t\t\t\t\t\t\tnode.geometries.push( inst_geom );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'morph':\n\n\t\t\t\t\tif ( geometries[ controller.morph.source ] ) {\n\n\t\t\t\t\t\tvar inst_geom = new InstanceGeometry();\n\n\t\t\t\t\t\tinst_geom.url = controller.morph.source;\n\t\t\t\t\t\tinst_geom.instance_material = node.controllers[ i ].instance_material;\n\n\t\t\t\t\t\tnode.geometries.push( inst_geom );\n\t\t\t\t\t\tmorphController = node.controllers[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log( 'ColladaLoader: Morph-controller partially supported.' );\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// geometries\n\n\t\tvar double_sided_materials = {};\n\n\t\tfor ( i = 0; i < node.geometries.length; i ++ ) {\n\n\t\t\tvar instance_geometry = node.geometries[i];\n\t\t\tvar instance_materials = instance_geometry.instance_material;\n\t\t\tvar geometry = geometries[ instance_geometry.url ];\n\t\t\tvar used_materials = {};\n\t\t\tvar used_materials_array = [];\n\t\t\tvar num_materials = 0;\n\t\t\tvar first_material;\n\n\t\t\tif ( geometry ) {\n\n\t\t\t\tif ( !geometry.mesh || !geometry.mesh.primitives )\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif ( obj.name.length == 0 ) {\n\n\t\t\t\t\tobj.name = geometry.id;\n\n\t\t\t\t}\n\n\t\t\t\t// collect used fx for this geometry-instance\n\n\t\t\t\tif ( instance_materials ) {\n\n\t\t\t\t\tfor ( j = 0; j < instance_materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar instance_material = instance_materials[ j ];\n\t\t\t\t\t\tvar mat = materials[ instance_material.target ];\n\t\t\t\t\t\tvar effect_id = mat.instance_effect.url;\n\t\t\t\t\t\tvar shader = effects[ effect_id ].shader;\n\t\t\t\t\t\tvar material3js = shader.material;\n\n\t\t\t\t\t\tif ( geometry.doubleSided ) {\n\n\t\t\t\t\t\t\tif ( !( instance_material.symbol in double_sided_materials ) ) {\n\n\t\t\t\t\t\t\t\tvar _copied_material = material3js.clone();\n\t\t\t\t\t\t\t\t_copied_material.side = THREE.DoubleSide;\n\t\t\t\t\t\t\t\tdouble_sided_materials[ instance_material.symbol ] = _copied_material;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial3js = double_sided_materials[ instance_material.symbol ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial3js.opacity = !material3js.opacity ? 1 : material3js.opacity;\n\t\t\t\t\t\tused_materials[ instance_material.symbol ] = num_materials;\n\t\t\t\t\t\tused_materials_array.push( material3js );\n\t\t\t\t\t\tfirst_material = material3js;\n\t\t\t\t\t\tfirst_material.name = mat.name == null || mat.name === '' ? mat.id : mat.name;\n\t\t\t\t\t\tnum_materials ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar mesh;\n\t\t\t\tvar material = first_material || new THREE.MeshLambertMaterial( { color: 0xdddddd, shading: THREE.FlatShading, side: geometry.doubleSided ? THREE.DoubleSide : THREE.FrontSide } );\n\t\t\t\tvar geom = geometry.mesh.geometry3js;\n\n\t\t\t\tif ( num_materials > 1 ) {\n\n\t\t\t\t\tmaterial = new THREE.MeshFaceMaterial( used_materials_array );\n\n\t\t\t\t\tfor ( j = 0; j < geom.faces.length; j ++ ) {\n\n\t\t\t\t\t\tvar face = geom.faces[ j ];\n\t\t\t\t\t\tface.materialIndex = used_materials[ face.daeMaterial ]\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( skinController !== undefined ) {\n\n\t\t\t\t\t\n\t\t\t\t\tapplySkin( geom, skinController );\n\n\t\t\t\t\tif(geom.morphTargets.length > 0) {\n\n\t\t\t\t\t\tmaterial.morphTargets = true;\n\t\t\t\t\t\tmaterial.skinning = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterial.morphTargets = false;\n\t\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\tmesh = new THREE.SkinnedMesh( geom, material, false );\n\n\n\t\t\t\t\t//mesh.skeleton = skinController.skeleton;\n\t\t\t\t\t//mesh.skinController = controllers[ skinController.url ];\n\t\t\t\t\t//mesh.skinInstanceController = skinController;\n\t\t\t\t\tmesh.name = 'skin_' + skins.length;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t//mesh.animationHandle.setKey(0);\n\t\t\t\t\tskins.push( mesh );\n\n\t\t\t\t} else if ( morphController !== undefined ) {\n\n\t\t\t\t\tcreateMorph( geom, morphController );\n\n\t\t\t\t\tmaterial.morphTargets = true;\n\n\t\t\t\t\tmesh = new THREE.Mesh( geom, material );\n\t\t\t\t\tmesh.name = 'morph_' + morphs.length;\n\n\t\t\t\t\tmorphs.push( mesh );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmesh = new THREE.Mesh( geom, material );\n\t\t\t\t\t// mesh.geom.name = geometry.id;\n\n\t\t\t\t}\n\n\t\t\t\tnode.geometries.length > 1 ? obj.add( mesh ) : obj = mesh;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = 0; i < node.cameras.length; i ++ ) {\n\n\t\t\tvar instance_camera = node.cameras[i];\n\t\t\tvar cparams = cameras[instance_camera.url];\n\n\t\t\tobj = new THREE.PerspectiveCamera(cparams.fov, parseFloat(cparams.aspect_ratio), \n\t\t\t\t\tparseFloat(cparams.znear), parseFloat(cparams.zfar));\n\n\t\t}\n\n\t\tfor ( i = 0; i < node.lights.length; i ++ ) {\n\n\t\t\tvar instance_light = node.lights[i];\n\t\t\tvar lparams = lights[instance_light.url];\n\n\t\t\tif ( lparams && lparams.technique ) {\n\n\t\t\t\tvar color = lparams.color.getHex();\n\t\t\t\tvar intensity = lparams.intensity;\n\t\t\t\tvar distance = 0;\n\t\t\t\tvar angle = lparams.falloff_angle;\n\t\t\t\tvar exponent; // Intentionally undefined, don't know what this is yet\n\n\t\t\t\tswitch ( lparams.technique ) {\n\n\t\t\t\t\tcase 'directional':\n\n\t\t\t\t\t\tobj = new THREE.DirectionalLight( color, intensity, distance );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'point':\n\n\t\t\t\t\t\tobj = new THREE.PointLight( color, intensity, distance );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'spot':\n\n\t\t\t\t\t\tobj = new THREE.SpotLight( color, intensity, distance, angle, exponent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ambient':\n\n\t\t\t\t\t\tobj = new THREE.AmbientLight( color );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tobj.name = node.name || node.id || \"\";\n\t\tobj.layer = node.layer || \"\";\n\t\tobj.matrix = node.matrix;\n\t\tobj.matrix.decompose( obj.position, obj.quaternion, obj.scale );\n\n\t\tif ( options.centerGeometry && obj.geometry ) {\n\n\t\t\tvar delta = THREE.GeometryUtils.center( obj.geometry );\n\t\t\tdelta.multiply( obj.scale );\n\t\t\tdelta.applyQuaternion( obj.quaternion );\n\n\t\t\tobj.position.sub( delta );\n\n\t\t}\n\n\t\tfor ( i = 0; i < node.nodes.length; i ++ ) {\n\n\t\t\tobj.add( createSceneGraph( node.nodes[i], node ) );\n\n\t\t}\n\n\t\treturn obj;\n\n\t};\n\n\tfunction getJointId( skin, id ) {\n\n\t\tfor ( var i = 0; i < skin.joints.length; i ++ ) {\n\n\t\t\tif ( skin.joints[ i ] == id ) {\n\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction getLibraryNode( id ) {\n\n        var nodes = COLLADA.querySelectorAll('library_nodes node');\n\n        for ( var i = 0; i < nodes.length; i++ ) {\n\n            var attObj = nodes[i].attributes.getNamedItem('id');\n            if ( attObj && attObj.value === id ) {\n                return nodes[i];\n        }\n        }\n\n        return undefined;\n\n\t};\n\n\tfunction getChannelsForNode (node ) {\n\n\t\tvar channels = [];\n\t\tvar startTime = 1000000;\n\t\tvar endTime = -1000000;\n\n\t\tfor ( var id in animations ) {\n\n\t\t\tvar animation = animations[id];\n\n\t\t\tfor ( var i = 0; i < animation.channel.length; i ++ ) {\n\n\t\t\t\tvar channel = animation.channel[i];\n\t\t\t\tvar sampler = animation.sampler[i];\n\t\t\t\tvar id = channel.target.split('/')[0];\n\n\t\t\t\tif ( id == node.id ) {\n\n\t\t\t\t\tsampler.create();\n\t\t\t\t\tchannel.sampler = sampler;\n\t\t\t\t\tstartTime = Math.min(startTime, sampler.startTime);\n\t\t\t\t\tendTime = Math.max(endTime, sampler.endTime);\n\t\t\t\t\tchannels.push(channel);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( channels.length ) {\n\n\t\t\tnode.startTime = startTime;\n\t\t\tnode.endTime = endTime;\n\n\t\t}\n\n\t\treturn channels;\n\n\t};\n\n\tfunction calcFrameDuration( node ) {\n\n\t\tvar minT = 10000000;\n\n\t\tfor ( var i = 0; i < node.channels.length; i ++ ) {\n\n\t\t\tvar sampler = node.channels[i].sampler;\n\n\t\t\tfor ( var j = 0; j < sampler.input.length - 1; j ++ ) {\n\n\t\t\t\tvar t0 = sampler.input[ j ];\n\t\t\t\tvar t1 = sampler.input[ j + 1 ];\n\t\t\t\tminT = Math.min( minT, t1 - t0 );\n\n\t\t\t}\n\t\t}\n\n\t\treturn minT;\n\n\t};\n\n\tfunction calcMatrixAt( node, t ) {\n\n\t\tvar animated = {};\n\n\t\tvar i, j;\n\n\t\tfor ( i = 0; i < node.channels.length; i ++ ) {\n\n\t\t\tvar channel = node.channels[ i ];\n\t\t\tanimated[ channel.sid ] = channel;\n\n\t\t}\n\n\t\tvar matrix = new THREE.Matrix4();\n\n\t\tfor ( i = 0; i < node.transforms.length; i ++ ) {\n\n\t\t\tvar transform = node.transforms[ i ];\n\t\t\tvar channel = animated[ transform.sid ];\n\n\t\t\tif ( channel !== undefined ) {\n\n\t\t\t\tvar sampler = channel.sampler;\n\t\t\t\tvar value;\n\n\t\t\t\tfor ( j = 0; j < sampler.input.length - 1; j ++ ) {\n\n\t\t\t\t\tif ( sampler.input[ j + 1 ] > t ) {\n\n\t\t\t\t\t\tvalue = sampler.output[ j ];\n\t\t\t\t\t\t//console.log(value.flatten)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\tif ( value instanceof THREE.Matrix4 ) {\n\n\t\t\t\t\t\tmatrix.multiplyMatrices( matrix, value );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// FIXME: handle other types\n\n\t\t\t\t\t\tmatrix.multiplyMatrices( matrix, transform.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmatrix.multiplyMatrices( matrix, transform.matrix );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmatrix.multiplyMatrices( matrix, transform.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn matrix;\n\n\t};\n\n\tfunction bakeAnimations ( node ) {\n\n\t\tif ( node.channels && node.channels.length ) {\n\n\t\t\tvar keys = [],\n\t\t\t\tsids = [];\n\n\t\t\tfor ( var i = 0, il = node.channels.length; i < il; i++ ) {\n\n\t\t\t\tvar channel = node.channels[i],\n\t\t\t\t\tfullSid = channel.fullSid,\n\t\t\t\t\tsampler = channel.sampler,\n\t\t\t\t\tinput = sampler.input,\n\t\t\t\t\ttransform = node.getTransformBySid( channel.sid ),\n\t\t\t\t\tmember;\n\n\t\t\t\tif ( channel.arrIndices ) {\n\n\t\t\t\t\tmember = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = channel.arrIndices.length; j < jl; j++ ) {\n\n\t\t\t\t\t\tmember[ j ] = getConvertedIndex( channel.arrIndices[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmember = getConvertedMember( channel.member );\n\n\t\t\t\t}\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tif ( sids.indexOf( fullSid ) === -1 ) {\n\n\t\t\t\t\t\tsids.push( fullSid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = input.length; j < jl; j++ ) {\n\n\t\t\t\t\t\tvar time = input[j],\n\t\t\t\t\t\t\tdata = sampler.getData( transform.type, j ),\n\t\t\t\t\t\t\tkey = findKey( keys, time );\n\n\t\t\t\t\t\tif ( !key ) {\n\n\t\t\t\t\t\t\tkey = new Key( time );\n\t\t\t\t\t\t\tvar timeNdx = findTimeNdx( keys, time );\n\t\t\t\t\t\t\tkeys.splice( timeNdx == -1 ? keys.length : timeNdx, 0, key );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tkey.addTarget( fullSid, transform, member, data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.log( 'Could not find transform \"' + channel.sid + '\" in node ' + node.id );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// post process\n\t\t\tfor ( var i = 0; i < sids.length; i++ ) {\n\n\t\t\t\tvar sid = sids[ i ];\n\n\t\t\t\tfor ( var j = 0; j < keys.length; j++ ) {\n\n\t\t\t\t\tvar key = keys[ j ];\n\n\t\t\t\t\tif ( !key.hasTarget( sid ) ) {\n\n\t\t\t\t\t\tinterpolateKeys( keys, key, j, sid );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnode.keys = keys;\n\t\t\tnode.sids = sids;\n\n\t\t}\n\n\t};\n\n\tfunction findKey ( keys, time) {\n\n\t\tvar retVal = null;\n\n\t\tfor ( var i = 0, il = keys.length; i < il && retVal == null; i++ ) {\n\n\t\t\tvar key = keys[i];\n\n\t\t\tif ( key.time === time ) {\n\n\t\t\t\tretVal = key;\n\n\t\t\t} else if ( key.time > time ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn retVal;\n\n\t};\n\n\tfunction findTimeNdx ( keys, time) {\n\n\t\tvar ndx = -1;\n\n\t\tfor ( var i = 0, il = keys.length; i < il && ndx == -1; i++ ) {\n\n\t\t\tvar key = keys[i];\n\n\t\t\tif ( key.time >= time ) {\n\n\t\t\t\tndx = i;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ndx;\n\n\t};\n\n\tfunction interpolateKeys ( keys, key, ndx, fullSid ) {\n\n\t\tvar prevKey = getPrevKeyWith( keys, fullSid, ndx ? ndx-1 : 0 ),\n\t\t\tnextKey = getNextKeyWith( keys, fullSid, ndx+1 );\n\n\t\tif ( prevKey && nextKey ) {\n\n\t\t\tvar scale = (key.time - prevKey.time) / (nextKey.time - prevKey.time),\n\t\t\t\tprevTarget = prevKey.getTarget( fullSid ),\n\t\t\t\tnextData = nextKey.getTarget( fullSid ).data,\n\t\t\t\tprevData = prevTarget.data,\n\t\t\t\tdata;\n\n\t\t\tif ( prevTarget.type === 'matrix' ) {\n\n\t\t\t\tdata = prevData;\n\n\t\t\t} else if ( prevData.length ) {\n\n\t\t\t\tdata = [];\n\n\t\t\t\tfor ( var i = 0; i < prevData.length; ++i ) {\n\n\t\t\t\t\tdata[ i ] = prevData[ i ] + ( nextData[ i ] - prevData[ i ] ) * scale;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdata = prevData + ( nextData - prevData ) * scale;\n\n\t\t\t}\n\n\t\t\tkey.addTarget( fullSid, prevTarget.transform, prevTarget.member, data );\n\n\t\t}\n\n\t};\n\n\t// Get next key with given sid\n\n\tfunction getNextKeyWith( keys, fullSid, ndx ) {\n\n\t\tfor ( ; ndx < keys.length; ndx++ ) {\n\n\t\t\tvar key = keys[ ndx ];\n\n\t\t\tif ( key.hasTarget( fullSid ) ) {\n\n\t\t\t\treturn key;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\t// Get previous key with given sid\n\n\tfunction getPrevKeyWith( keys, fullSid, ndx ) {\n\n\t\tndx = ndx >= 0 ? ndx : ndx + keys.length;\n\n\t\tfor ( ; ndx >= 0; ndx-- ) {\n\n\t\t\tvar key = keys[ ndx ];\n\n\t\t\tif ( key.hasTarget( fullSid ) ) {\n\n\t\t\t\treturn key;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tfunction _Image() {\n\n\t\tthis.id = \"\";\n\t\tthis.init_from = \"\";\n\n\t};\n\n\t_Image.prototype.parse = function(element) {\n\n\t\tthis.id = element.getAttribute('id');\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tif ( child.nodeName == 'init_from' ) {\n\n\t\t\t\tthis.init_from = child.textContent;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Controller() {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.type = \"\";\n\t\tthis.skin = null;\n\t\tthis.morph = null;\n\n\t};\n\n\tController.prototype.parse = function( element ) {\n\n\t\tthis.id = element.getAttribute('id');\n\t\tthis.name = element.getAttribute('name');\n\t\tthis.type = \"none\";\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'skin':\n\n\t\t\t\t\tthis.skin = (new Skin()).parse(child);\n\t\t\t\t\tthis.type = child.nodeName;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'morph':\n\n\t\t\t\t\tthis.morph = (new Morph()).parse(child);\n\t\t\t\t\tthis.type = child.nodeName;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Morph() {\n\n\t\tthis.method = null;\n\t\tthis.source = null;\n\t\tthis.targets = null;\n\t\tthis.weights = null;\n\n\t};\n\n\tMorph.prototype.parse = function( element ) {\n\n\t\tvar sources = {};\n\t\tvar inputs = [];\n\t\tvar i;\n\n\t\tthis.method = element.getAttribute( 'method' );\n\t\tthis.source = element.getAttribute( 'source' ).replace( /^#/, '' );\n\n\t\tfor ( i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'source':\n\n\t\t\t\t\tvar source = ( new Source() ).parse( child );\n\t\t\t\t\tsources[ source.id ] = source;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'targets':\n\n\t\t\t\t\tinputs = this.parseInputs( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = 0; i < inputs.length; i ++ ) {\n\n\t\t\tvar input = inputs[ i ];\n\t\t\tvar source = sources[ input.source ];\n\n\t\t\tswitch ( input.semantic ) {\n\n\t\t\t\tcase 'MORPH_TARGET':\n\n\t\t\t\t\tthis.targets = source.read();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'MORPH_WEIGHT':\n\n\t\t\t\t\tthis.weights = source.read();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tMorph.prototype.parseInputs = function(element) {\n\n\t\tvar inputs = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[i];\n\t\t\tif ( child.nodeType != 1) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'input':\n\n\t\t\t\t\tinputs.push( (new Input()).parse(child) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn inputs;\n\n\t};\n\n\tfunction Skin() {\n\n\t\tthis.source = \"\";\n\t\tthis.bindShapeMatrix = null;\n\t\tthis.invBindMatrices = [];\n\t\tthis.joints = [];\n\t\tthis.weights = [];\n\n\t};\n\n\tSkin.prototype.parse = function( element ) {\n\n\t\tvar sources = {};\n\t\tvar joints, weights;\n\n\t\tthis.source = element.getAttribute( 'source' ).replace( /^#/, '' );\n\t\tthis.invBindMatrices = [];\n\t\tthis.joints = [];\n\t\tthis.weights = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[i];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'bind_shape_matrix':\n\n\t\t\t\t\tvar f = _floats(child.textContent);\n\t\t\t\t\tthis.bindShapeMatrix = getConvertedMat4( f );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'source':\n\n\t\t\t\t\tvar src = new Source().parse(child);\n\t\t\t\t\tsources[ src.id ] = src;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'joints':\n\n\t\t\t\t\tjoints = child;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'vertex_weights':\n\n\t\t\t\t\tweights = child;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\n\t\tthis.parseJoints( joints, sources );\n\t\tthis.parseWeights( weights, sources );\n\n\t\treturn this;\n\n\t};\n\n\tSkin.prototype.parseJoints = function ( element, sources ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'input':\n\n\t\t\t\t\tvar input = ( new Input() ).parse( child );\n\t\t\t\t\tvar source = sources[ input.source ];\n\n\t\t\t\t\tif ( input.semantic == 'JOINT' ) {\n\n\t\t\t\t\t\tthis.joints = source.read();\n\n\t\t\t\t\t} else if ( input.semantic == 'INV_BIND_MATRIX' ) {\n\n\t\t\t\t\t\tthis.invBindMatrices = source.read();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSkin.prototype.parseWeights = function ( element, sources ) {\n\n\t\tvar v, vcount, inputs = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'input':\n\n\t\t\t\t\tinputs.push( ( new Input() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v':\n\n\t\t\t\t\tv = _ints( child.textContent );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'vcount':\n\n\t\t\t\t\tvcount = _ints( child.textContent );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar index = 0;\n\n\t\tfor ( var i = 0; i < vcount.length; i ++ ) {\n\n\t\t\tvar numBones = vcount[i];\n\t\t\tvar vertex_weights = [];\n\n\t\t\tfor ( var j = 0; j < numBones; j++ ) {\n\n\t\t\t\tvar influence = {};\n\n\t\t\t\tfor ( var k = 0; k < inputs.length; k ++ ) {\n\n\t\t\t\t\tvar input = inputs[ k ];\n\t\t\t\t\tvar value = v[ index + input.offset ];\n\n\t\t\t\t\tswitch ( input.semantic ) {\n\n\t\t\t\t\t\tcase 'JOINT':\n\n\t\t\t\t\t\t\tinfluence.joint = value;//this.joints[value];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'WEIGHT':\n\n\t\t\t\t\t\t\tinfluence.weight = sources[ input.source ].data[ value ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvertex_weights.push( influence );\n\t\t\t\tindex += inputs.length;\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < vertex_weights.length; j ++ ) {\n\n\t\t\t\tvertex_weights[ j ].index = i;\n\n\t\t\t}\n\n\t\t\tthis.weights.push( vertex_weights );\n\n\t\t}\n\n\t};\n\n\tfunction VisualScene () {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.nodes = [];\n\t\tthis.scene = new THREE.Object3D();\n\n\t};\n\n\tVisualScene.prototype.getChildById = function( id, recursive ) {\n\n\t\tfor ( var i = 0; i < this.nodes.length; i ++ ) {\n\n\t\t\tvar node = this.nodes[ i ].getChildById( id, recursive );\n\n\t\t\tif ( node ) {\n\n\t\t\t\treturn node;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tVisualScene.prototype.getChildBySid = function( sid, recursive ) {\n\n\t\tfor ( var i = 0; i < this.nodes.length; i ++ ) {\n\n\t\t\tvar node = this.nodes[ i ].getChildBySid( sid, recursive );\n\n\t\t\tif ( node ) {\n\n\t\t\t\treturn node;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tVisualScene.prototype.parse = function( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.name = element.getAttribute( 'name' );\n\t\tthis.nodes = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'node':\n\n\t\t\t\t\tthis.nodes.push( ( new Node() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Node() {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.sid = \"\";\n\t\tthis.nodes = [];\n\t\tthis.controllers = [];\n\t\tthis.transforms = [];\n\t\tthis.geometries = [];\n\t\tthis.channels = [];\n\t\tthis.matrix = new THREE.Matrix4();\n\n\t};\n\n\tNode.prototype.getChannelForTransform = function( transformSid ) {\n\n\t\tfor ( var i = 0; i < this.channels.length; i ++ ) {\n\n\t\t\tvar channel = this.channels[i];\n\t\t\tvar parts = channel.target.split('/');\n\t\t\tvar id = parts.shift();\n\t\t\tvar sid = parts.shift();\n\t\t\tvar dotSyntax = (sid.indexOf(\".\") >= 0);\n\t\t\tvar arrSyntax = (sid.indexOf(\"(\") >= 0);\n\t\t\tvar arrIndices;\n\t\t\tvar member;\n\n\t\t\tif ( dotSyntax ) {\n\n\t\t\t\tparts = sid.split(\".\");\n\t\t\t\tsid = parts.shift();\n\t\t\t\tmember = parts.shift();\n\n\t\t\t} else if ( arrSyntax ) {\n\n\t\t\t\tarrIndices = sid.split(\"(\");\n\t\t\t\tsid = arrIndices.shift();\n\n\t\t\t\tfor ( var j = 0; j < arrIndices.length; j ++ ) {\n\n\t\t\t\t\tarrIndices[ j ] = parseInt( arrIndices[ j ].replace( /\\)/, '' ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( sid == transformSid ) {\n\n\t\t\t\tchannel.info = { sid: sid, dotSyntax: dotSyntax, arrSyntax: arrSyntax, arrIndices: arrIndices };\n\t\t\t\treturn channel;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tNode.prototype.getChildById = function ( id, recursive ) {\n\n\t\tif ( this.id == id ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( recursive ) {\n\n\t\t\tfor ( var i = 0; i < this.nodes.length; i ++ ) {\n\n\t\t\t\tvar n = this.nodes[ i ].getChildById( id, recursive );\n\n\t\t\t\tif ( n ) {\n\n\t\t\t\t\treturn n;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tNode.prototype.getChildBySid = function ( sid, recursive ) {\n\n\t\tif ( this.sid == sid ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( recursive ) {\n\n\t\t\tfor ( var i = 0; i < this.nodes.length; i ++ ) {\n\n\t\t\t\tvar n = this.nodes[ i ].getChildBySid( sid, recursive );\n\n\t\t\t\tif ( n ) {\n\n\t\t\t\t\treturn n;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tNode.prototype.getTransformBySid = function ( sid ) {\n\n\t\tfor ( var i = 0; i < this.transforms.length; i ++ ) {\n\n\t\t\tif ( this.transforms[ i ].sid == sid ) return this.transforms[ i ];\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tNode.prototype.parse = function( element ) {\n\n\t\tvar url;\n\n\t\tthis.id = element.getAttribute('id');\n\t\tthis.sid = element.getAttribute('sid');\n\t\tthis.name = element.getAttribute('name');\n\t\tthis.type = element.getAttribute('type');\n\t\tthis.layer = element.getAttribute('layer');\n\n\t\tthis.type = this.type == 'JOINT' ? this.type : 'NODE';\n\n\t\tthis.nodes = [];\n\t\tthis.transforms = [];\n\t\tthis.geometries = [];\n\t\tthis.cameras = [];\n\t\tthis.lights = [];\n\t\tthis.controllers = [];\n\t\tthis.matrix = new THREE.Matrix4();\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'node':\n\n\t\t\t\t\tthis.nodes.push( ( new Node() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'instance_camera':\n\n\t\t\t\t\tthis.cameras.push( ( new InstanceCamera() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'instance_controller':\n\n\t\t\t\t\tthis.controllers.push( ( new InstanceController() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'instance_geometry':\n\n\t\t\t\t\tthis.geometries.push( ( new InstanceGeometry() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'instance_light':\n\n\t\t\t\t\tthis.lights.push( ( new InstanceLight() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'instance_node':\n\n\t\t\t\t\turl = child.getAttribute( 'url' ).replace( /^#/, '' );\n\t\t\t\t\tvar iNode = getLibraryNode( url );\n\n\t\t\t\t\tif ( iNode ) {\n\n\t\t\t\t\t\tthis.nodes.push( ( new Node() ).parse( iNode )) ;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\tcase 'translate':\n\t\t\t\tcase 'scale':\n\t\t\t\tcase 'matrix':\n\t\t\t\tcase 'lookat':\n\t\t\t\tcase 'skew':\n\n\t\t\t\t\tthis.transforms.push( ( new Transform() ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'extra':\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.channels = getChannelsForNode( this );\n\t\tbakeAnimations( this );\n\n\t\tthis.updateMatrix();\n\n\t\treturn this;\n\n\t};\n\n\tNode.prototype.updateMatrix = function () {\n\n\t\tthis.matrix.identity();\n\n\t\tfor ( var i = 0; i < this.transforms.length; i ++ ) {\n\n\t\t\tthis.transforms[ i ].apply( this.matrix );\n\n\t\t}\n\n\t};\n\n\tfunction Transform () {\n\n\t\tthis.sid = \"\";\n\t\tthis.type = \"\";\n\t\tthis.data = [];\n\t\tthis.obj = null;\n\n\t};\n\n\tTransform.prototype.parse = function ( element ) {\n\n\t\tthis.sid = element.getAttribute( 'sid' );\n\t\tthis.type = element.nodeName;\n\t\tthis.data = _floats( element.textContent );\n\t\tthis.convert();\n\n\t\treturn this;\n\n\t};\n\n\tTransform.prototype.convert = function () {\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase 'matrix':\n\n\t\t\t\tthis.obj = getConvertedMat4( this.data );\n\t\t\t\tbreak;\n\n\t\t\tcase 'rotate':\n\n\t\t\t\tthis.angle = THREE.Math.degToRad( this.data[3] );\n\n\t\t\tcase 'translate':\n\n\t\t\t\tfixCoords( this.data, -1 );\n\t\t\t\tthis.obj = new THREE.Vector3( this.data[ 0 ], this.data[ 1 ], this.data[ 2 ] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'scale':\n\n\t\t\t\tfixCoords( this.data, 1 );\n\t\t\t\tthis.obj = new THREE.Vector3( this.data[ 0 ], this.data[ 1 ], this.data[ 2 ] );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.log( 'Can not convert Transform of type ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tTransform.prototype.apply = function () {\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function ( matrix ) {\n\n\t\t\tswitch ( this.type ) {\n\n\t\t\t\tcase 'matrix':\n\n\t\t\t\t\tmatrix.multiply( this.obj );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\n\t\t\t\t\tmatrix.multiply( m1.makeTranslation( this.obj.x, this.obj.y, this.obj.z ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\n\t\t\t\t\tmatrix.multiply( m1.makeRotationAxis( this.obj, this.angle ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scale':\n\n\t\t\t\t\tmatrix.scale( this.obj );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tTransform.prototype.update = function ( data, member ) {\n\n\t\tvar members = [ 'X', 'Y', 'Z', 'ANGLE' ];\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase 'matrix':\n\n\t\t\t\tif ( ! member ) {\n\n\t\t\t\t\tthis.obj.copy( data );\n\n\t\t\t\t} else if ( member.length === 1 ) {\n\n\t\t\t\t\tswitch ( member[ 0 ] ) {\n\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tthis.obj.n11 = data[ 0 ];\n\t\t\t\t\t\t\tthis.obj.n21 = data[ 1 ];\n\t\t\t\t\t\t\tthis.obj.n31 = data[ 2 ];\n\t\t\t\t\t\t\tthis.obj.n41 = data[ 3 ];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:\n\n\t\t\t\t\t\t\tthis.obj.n12 = data[ 0 ];\n\t\t\t\t\t\t\tthis.obj.n22 = data[ 1 ];\n\t\t\t\t\t\t\tthis.obj.n32 = data[ 2 ];\n\t\t\t\t\t\t\tthis.obj.n42 = data[ 3 ];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:\n\n\t\t\t\t\t\t\tthis.obj.n13 = data[ 0 ];\n\t\t\t\t\t\t\tthis.obj.n23 = data[ 1 ];\n\t\t\t\t\t\t\tthis.obj.n33 = data[ 2 ];\n\t\t\t\t\t\t\tthis.obj.n43 = data[ 3 ];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:\n\n\t\t\t\t\t\t\tthis.obj.n14 = data[ 0 ];\n\t\t\t\t\t\t\tthis.obj.n24 = data[ 1 ];\n\t\t\t\t\t\t\tthis.obj.n34 = data[ 2 ];\n\t\t\t\t\t\t\tthis.obj.n44 = data[ 3 ];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( member.length === 2 ) {\n\n\t\t\t\t\tvar propName = 'n' + ( member[ 0 ] + 1 ) + ( member[ 1 ] + 1 );\n\t\t\t\t\tthis.obj[ propName ] = data;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.log('Incorrect addressing of matrix in transform.');\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\n\t\t\t\tif ( Object.prototype.toString.call( member ) === '[object Array]' ) {\n\n\t\t\t\t\tmember = members[ member[ 0 ] ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( member ) {\n\n\t\t\t\t\tcase 'X':\n\n\t\t\t\t\t\tthis.obj.x = data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Y':\n\n\t\t\t\t\t\tthis.obj.y = data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Z':\n\n\t\t\t\t\t\tthis.obj.z = data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tthis.obj.x = data[ 0 ];\n\t\t\t\t\t\tthis.obj.y = data[ 1 ];\n\t\t\t\t\t\tthis.obj.z = data[ 2 ];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'rotate':\n\n\t\t\t\tif ( Object.prototype.toString.call( member ) === '[object Array]' ) {\n\n\t\t\t\t\tmember = members[ member[ 0 ] ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( member ) {\n\n\t\t\t\t\tcase 'X':\n\n\t\t\t\t\t\tthis.obj.x = data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Y':\n\n\t\t\t\t\t\tthis.obj.y = data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Z':\n\n\t\t\t\t\t\tthis.obj.z = data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ANGLE':\n\n\t\t\t\t\t\tthis.angle = THREE.Math.degToRad( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tthis.obj.x = data[ 0 ];\n\t\t\t\t\t\tthis.obj.y = data[ 1 ];\n\t\t\t\t\t\tthis.obj.z = data[ 2 ];\n\t\t\t\t\t\tthis.angle = THREE.Math.degToRad( data[ 3 ] );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction InstanceController() {\n\n\t\tthis.url = \"\";\n\t\tthis.skeleton = [];\n\t\tthis.instance_material = [];\n\n\t};\n\n\tInstanceController.prototype.parse = function ( element ) {\n\n\t\tthis.url = element.getAttribute('url').replace(/^#/, '');\n\t\tthis.skeleton = [];\n\t\tthis.instance_material = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'skeleton':\n\n\t\t\t\t\tthis.skeleton.push( child.textContent.replace(/^#/, '') );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bind_material':\n\t\t\t\n\t\t\t\t\tvar instances = child.querySelectorAll('instance_material');\n\t\t\t\t\t\n\t\t\t\t\tfor ( var j = 0; j < instances.length; j ++ ){\n\n\t\t\t\t\t\tvar instance = instances[j];\n\t\t\t\t\t\tthis.instance_material.push( (new InstanceMaterial()).parse(instance) );\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'extra':\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction InstanceMaterial () {\n\n\t\tthis.symbol = \"\";\n\t\tthis.target = \"\";\n\n\t};\n\n\tInstanceMaterial.prototype.parse = function ( element ) {\n\n\t\tthis.symbol = element.getAttribute('symbol');\n\t\tthis.target = element.getAttribute('target').replace(/^#/, '');\n\t\treturn this;\n\n\t};\n\n\tfunction InstanceGeometry() {\n\n\t\tthis.url = \"\";\n\t\tthis.instance_material = [];\n\n\t};\n\n\tInstanceGeometry.prototype.parse = function ( element ) {\n\n\t\tthis.url = element.getAttribute('url').replace(/^#/, '');\n\t\tthis.instance_material = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[i];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tif ( child.nodeName == 'bind_material' ) {\n\n\t\t\t\tvar instances = child.querySelectorAll('instance_material');\n\t\t\t\t\t\n\t\t\t\tfor ( var j = 0; j < instances.length; j ++ ) {\n\n\t\t\t\t\tvar instance = instances[j];\n\t\t\t\t\tthis.instance_material.push( (new InstanceMaterial()).parse(instance) );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Geometry() {\n\n\t\tthis.id = \"\";\n\t\tthis.mesh = null;\n\n\t};\n\n\tGeometry.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute('id');\n\n\t\textractDoubleSided( this, element );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[i];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'mesh':\n\n\t\t\t\t\tthis.mesh = (new Mesh(this)).parse(child);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'extra':\n\n\t\t\t\t\t// console.log( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Mesh( geometry ) {\n\n\t\tthis.geometry = geometry.id;\n\t\tthis.primitives = [];\n\t\tthis.vertices = null;\n\t\tthis.geometry3js = null;\n\n\t};\n\n\tMesh.prototype.parse = function( element ) {\n\n\t\tthis.primitives = [];\n\n\t\tvar i, j;\n\n\t\tfor ( i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'source':\n\n\t\t\t\t\t_source( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'vertices':\n\n\t\t\t\t\tthis.vertices = ( new Vertices() ).parse( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'triangles':\n\n\t\t\t\t\tthis.primitives.push( ( new Triangles().parse( child ) ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polygons':\n\n\t\t\t\t\tthis.primitives.push( ( new Polygons().parse( child ) ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polylist':\n\n\t\t\t\t\tthis.primitives.push( ( new Polylist().parse( child ) ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.geometry3js = new THREE.Geometry();\n\n\t\tvar vertexData = sources[ this.vertices.input['POSITION'].source ].data;\n\n\t\tfor ( i = 0; i < vertexData.length; i += 3 ) {\n\n\t\t\tthis.geometry3js.vertices.push( getConvertedVec3( vertexData, i ).clone() );\n\n\t\t}\n\n\t\tfor ( i = 0; i < this.primitives.length; i ++ ) {\n\n\t\t\tvar primitive = this.primitives[ i ];\n\t\t\tprimitive.setVertices( this.vertices );\n\t\t\tthis.handlePrimitive( primitive, this.geometry3js );\n\n\t\t}\n\n\t\tthis.geometry3js.computeCentroids();\n\t\tthis.geometry3js.computeFaceNormals();\n\n\t\tif ( this.geometry3js.calcNormals ) {\n\n\t\t\tthis.geometry3js.computeVertexNormals();\n\t\t\tdelete this.geometry3js.calcNormals;\n\n\t\t}\n\n\t\t// this.geometry3js.computeBoundingBox();\n\n\t\treturn this;\n\n\t};\n\n\tMesh.prototype.handlePrimitive = function( primitive, geom ) {\n\n\t\tvar j, k, pList = primitive.p, inputs = primitive.inputs;\n\t\tvar input, index, idx32;\n\t\tvar source, numParams;\n\t\tvar vcIndex = 0, vcount = 3, maxOffset = 0;\n\t\tvar texture_sets = [];\n\t\t\n\t\tfor ( j = 0; j < inputs.length; j ++ ) {\n\n\t\t\tinput = inputs[ j ];\n\n\t\t\tvar offset = input.offset + 1;\n\t\t\tmaxOffset = (maxOffset < offset)? offset : maxOffset;\n\n\t\t\tswitch ( input.semantic ) {\n\n\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\ttexture_sets.push( input.set );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var pCount = 0; pCount < pList.length; ++pCount ) {\n\n\t\t\tvar p = pList[ pCount ], i = 0;\n\n\t\t\twhile ( i < p.length ) {\n\n\t\t\t\tvar vs = [];\n\t\t\t\tvar ns = [];\n\t\t\t\tvar ts = null;\n\t\t\t\tvar cs = [];\n\n\t\t\t\tif ( primitive.vcount ) {\n\n\t\t\t\t\tvcount = primitive.vcount.length ? primitive.vcount[ vcIndex ++ ] : primitive.vcount;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvcount = p.length / maxOffset;\n\n\t\t\t\t}\n\n\n\t\t\t\tfor ( j = 0; j < vcount; j ++ ) {\n\n\t\t\t\t\tfor ( k = 0; k < inputs.length; k ++ ) {\n\n\t\t\t\t\t\tinput = inputs[ k ];\n\t\t\t\t\t\tsource = sources[ input.source ];\n\n\t\t\t\t\t\tindex = p[ i + ( j * maxOffset ) + input.offset ];\n\t\t\t\t\t\tnumParams = source.accessor.params.length;\n\t\t\t\t\t\tidx32 = index * numParams;\n\n\t\t\t\t\t\tswitch ( input.semantic ) {\n\n\t\t\t\t\t\t\tcase 'VERTEX':\n\n\t\t\t\t\t\t\t\tvs.push( index );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'NORMAL':\n\n\t\t\t\t\t\t\t\tns.push( getConvertedVec3( source.data, idx32 ) );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'TEXCOORD':\n\n\t\t\t\t\t\t\t\tts = ts || { };\n\t\t\t\t\t\t\t\tif ( ts[ input.set ] === undefined ) ts[ input.set ] = [];\n\t\t\t\t\t\t\t\t// invert the V\n\t\t\t\t\t\t\t\tts[ input.set ].push( new THREE.Vector2( source.data[ idx32 ], source.data[ idx32 + 1 ] ) );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'COLOR':\n\n\t\t\t\t\t\t\t\tcs.push( new THREE.Color().setRGB( source.data[ idx32 ], source.data[ idx32 + 1 ], source.data[ idx32 + 2 ] ) );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ns.length == 0 ) {\n\n\t\t\t\t\t// check the vertices inputs\n\t\t\t\t\tinput = this.vertices.input.NORMAL;\n\n\t\t\t\t\tif ( input ) {\n\n\t\t\t\t\t\tsource = sources[ input.source ];\n\t\t\t\t\t\tnumParams = source.accessor.params.length;\n\n\t\t\t\t\t\tfor ( var ndx = 0, len = vs.length; ndx < len; ndx++ ) {\n\n\t\t\t\t\t\t\tns.push( getConvertedVec3( source.data, vs[ ndx ] * numParams ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgeom.calcNormals = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( !ts ) {\n\n\t\t\t\t\tts = { };\n\t\t\t\t\t// check the vertices inputs\n\t\t\t\t\tinput = this.vertices.input.TEXCOORD;\n\n\t\t\t\t\tif ( input ) {\n\n\t\t\t\t\t\ttexture_sets.push( input.set );\n\t\t\t\t\t\tsource = sources[ input.source ];\n\t\t\t\t\t\tnumParams = source.accessor.params.length;\n\n\t\t\t\t\t\tfor ( var ndx = 0, len = vs.length; ndx < len; ndx++ ) {\n\n\t\t\t\t\t\t\tidx32 = vs[ ndx ] * numParams;\n\t\t\t\t\t\t\tif ( ts[ input.set ] === undefined ) ts[ input.set ] = [ ];\n\t\t\t\t\t\t\t// invert the V\n\t\t\t\t\t\t\tts[ input.set ].push( new THREE.Vector2( source.data[ idx32 ], 1.0 - source.data[ idx32 + 1 ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( cs.length == 0 ) {\n\n\t\t\t\t\t// check the vertices inputs\n\t\t\t\t\tinput = this.vertices.input.COLOR;\n\n\t\t\t\t\tif ( input ) {\n\n\t\t\t\t\t\tsource = sources[ input.source ];\n\t\t\t\t\t\tnumParams = source.accessor.params.length;\n\n\t\t\t\t\t\tfor ( var ndx = 0, len = vs.length; ndx < len; ndx++ ) {\n\n\t\t\t\t\t\t\tidx32 = vs[ ndx ] * numParams;\n\t\t\t\t\t\t\tcs.push( new THREE.Color().setRGB( source.data[ idx32 ], source.data[ idx32 + 1 ], source.data[ idx32 + 2 ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar face = null, faces = [], uv, uvArr;\n\n\t\t\t\tif ( vcount === 3 ) {\n\n\t\t\t\t\tfaces.push( new THREE.Face3( vs[0], vs[1], vs[2], ns, cs.length ? cs : new THREE.Color() ) );\n\n\t\t\t\t} else if ( vcount === 4 ) {\n\n\t\t\t\t\tfaces.push( new THREE.Face3( vs[0], vs[1], vs[3], [ns[0], ns[1], ns[3]], cs.length ? [cs[0], cs[1], cs[3]] : new THREE.Color() ) );\n\t\t\t\t\t\n\t\t\t\t\tfaces.push( new THREE.Face3( vs[1], vs[2], vs[3], [ns[1], ns[2], ns[3]], cs.length ? [cs[1], cs[2], cs[3]] : new THREE.Color() ) );\n\n\t\t\t\t} else if ( vcount > 4 && options.subdivideFaces ) {\n\n\t\t\t\t\tvar clr = cs.length ? cs : new THREE.Color(),\n\t\t\t\t\t\tvec1, vec2, vec3, v1, v2, norm;\n\n\t\t\t\t\t// subdivide into multiple Face3s\n\n\t\t\t\t\tfor ( k = 1; k < vcount - 1; ) {\n\n\t\t\t\t\t\t// FIXME: normals don't seem to be quite right\n\n\t\t\t\t\t\tfaces.push( new THREE.Face3( vs[0], vs[k], vs[k+1], [ ns[0], ns[k++], ns[k] ],  clr ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( faces.length ) {\n\n\t\t\t\t\tfor ( var ndx = 0, len = faces.length; ndx < len; ndx ++ ) {\n\n\t\t\t\t\t\tface = faces[ndx];\n\t\t\t\t\t\tface.daeMaterial = primitive.material;\n\t\t\t\t\t\tgeom.faces.push( face );\n\n\t\t\t\t\t\tfor ( k = 0; k < texture_sets.length; k++ ) {\n\n\t\t\t\t\t\t\tuv = ts[ texture_sets[k] ];\n\n\t\t\t\t\t\t\tif ( vcount > 4 ) {\n\n\t\t\t\t\t\t\t\t// Grab the right UVs for the vertices in this face\n\t\t\t\t\t\t\t\tuvArr = [ uv[0], uv[ndx+1], uv[ndx+2] ];\n\n\t\t\t\t\t\t\t} else if ( vcount === 4 ) {\n\n\t\t\t\t\t\t\t\tif ( ndx === 0 ) {\n\n\t\t\t\t\t\t\t\t\tuvArr = [ uv[0], uv[1], uv[3] ];\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tuvArr = [ uv[1].clone(), uv[2], uv[3].clone() ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tuvArr = [ uv[0], uv[1], uv[2] ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( geom.faceVertexUvs[k] === undefined ) {\n\n\t\t\t\t\t\t\t\tgeom.faceVertexUvs[k] = [];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeom.faceVertexUvs[k].push( uvArr );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.log( 'dropped face with vcount ' + vcount + ' for geometry with id: ' + geom.id );\n\n\t\t\t\t}\n\n\t\t\t\ti += maxOffset * vcount;\n\n\t\t\t}\n\t\t}\n\n\t};\n\n\tfunction Polygons () {\n\n\t\tthis.material = \"\";\n\t\tthis.count = 0;\n\t\tthis.inputs = [];\n\t\tthis.vcount = null;\n\t\tthis.p = [];\n\t\tthis.geometry = new THREE.Geometry();\n\n\t};\n\n\tPolygons.prototype.setVertices = function ( vertices ) {\n\n\t\tfor ( var i = 0; i < this.inputs.length; i ++ ) {\n\n\t\t\tif ( this.inputs[ i ].source == vertices.id ) {\n\n\t\t\t\tthis.inputs[ i ].source = vertices.input[ 'POSITION' ].source;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tPolygons.prototype.parse = function ( element ) {\n\n\t\tthis.material = element.getAttribute( 'material' );\n\t\tthis.count = _attr_as_int( element, 'count', 0 );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'input':\n\n\t\t\t\t\tthis.inputs.push( ( new Input() ).parse( element.childNodes[ i ] ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'vcount':\n\n\t\t\t\t\tthis.vcount = _ints( child.textContent );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'p':\n\n\t\t\t\t\tthis.p.push( _ints( child.textContent ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ph':\n\n\t\t\t\t\tconsole.warn( 'polygon holes not yet supported!' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Polylist () {\n\n\t\tPolygons.call( this );\n\n\t\tthis.vcount = [];\n\n\t};\n\n\tPolylist.prototype = Object.create( Polygons.prototype );\n\n\tfunction Triangles () {\n\n\t\tPolygons.call( this );\n\n\t\tthis.vcount = 3;\n\n\t};\n\n\tTriangles.prototype = Object.create( Polygons.prototype );\n\n\tfunction Accessor() {\n\n\t\tthis.source = \"\";\n\t\tthis.count = 0;\n\t\tthis.stride = 0;\n\t\tthis.params = [];\n\n\t};\n\n\tAccessor.prototype.parse = function ( element ) {\n\n\t\tthis.params = [];\n\t\tthis.source = element.getAttribute( 'source' );\n\t\tthis.count = _attr_as_int( element, 'count', 0 );\n\t\tthis.stride = _attr_as_int( element, 'stride', 0 );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tif ( child.nodeName == 'param' ) {\n\n\t\t\t\tvar param = {};\n\t\t\t\tparam[ 'name' ] = child.getAttribute( 'name' );\n\t\t\t\tparam[ 'type' ] = child.getAttribute( 'type' );\n\t\t\t\tthis.params.push( param );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Vertices() {\n\n\t\tthis.input = {};\n\n\t};\n\n\tVertices.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute('id');\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tif ( element.childNodes[i].nodeName == 'input' ) {\n\n\t\t\t\tvar input = ( new Input() ).parse( element.childNodes[ i ] );\n\t\t\t\tthis.input[ input.semantic ] = input;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Input () {\n\n\t\tthis.semantic = \"\";\n\t\tthis.offset = 0;\n\t\tthis.source = \"\";\n\t\tthis.set = 0;\n\n\t};\n\n\tInput.prototype.parse = function ( element ) {\n\n\t\tthis.semantic = element.getAttribute('semantic');\n\t\tthis.source = element.getAttribute('source').replace(/^#/, '');\n\t\tthis.set = _attr_as_int(element, 'set', -1);\n\t\tthis.offset = _attr_as_int(element, 'offset', 0);\n\n\t\tif ( this.semantic == 'TEXCOORD' && this.set < 0 ) {\n\n\t\t\tthis.set = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Source ( id ) {\n\n\t\tthis.id = id;\n\t\tthis.type = null;\n\n\t};\n\n\tSource.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[i];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'bool_array':\n\n\t\t\t\t\tthis.data = _bools( child.textContent );\n\t\t\t\t\tthis.type = child.nodeName;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'float_array':\n\n\t\t\t\t\tthis.data = _floats( child.textContent );\n\t\t\t\t\tthis.type = child.nodeName;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'int_array':\n\n\t\t\t\t\tthis.data = _ints( child.textContent );\n\t\t\t\t\tthis.type = child.nodeName;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'IDREF_array':\n\t\t\t\tcase 'Name_array':\n\n\t\t\t\t\tthis.data = _strings( child.textContent );\n\t\t\t\t\tthis.type = child.nodeName;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'technique_common':\n\n\t\t\t\t\tfor ( var j = 0; j < child.childNodes.length; j ++ ) {\n\n\t\t\t\t\t\tif ( child.childNodes[ j ].nodeName == 'accessor' ) {\n\n\t\t\t\t\t\t\tthis.accessor = ( new Accessor() ).parse( child.childNodes[ j ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// console.log(child.nodeName);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSource.prototype.read = function () {\n\n\t\tvar result = [];\n\n\t\t//for (var i = 0; i < this.accessor.params.length; i++) {\n\n\t\t\tvar param = this.accessor.params[ 0 ];\n\n\t\t\t//console.log(param.name + \" \" + param.type);\n\n\t\t\tswitch ( param.type ) {\n\n\t\t\t\tcase 'IDREF':\n\t\t\t\tcase 'Name': case 'name':\n\t\t\t\tcase 'float':\n\n\t\t\t\t\treturn this.data;\n\n\t\t\t\tcase 'float4x4':\n\n\t\t\t\t\tfor ( var j = 0; j < this.data.length; j += 16 ) {\n\n\t\t\t\t\t\tvar s = this.data.slice( j, j + 16 );\n\t\t\t\t\t\tvar m = getConvertedMat4( s );\n\t\t\t\t\t\tresult.push( m );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( 'ColladaLoader: Source: Read dont know how to read ' + param.type + '.' );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t//}\n\n\t\treturn result;\n\n\t};\n\n\tfunction Material () {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.instance_effect = null;\n\n\t};\n\n\tMaterial.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.name = element.getAttribute( 'name' );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tif ( element.childNodes[ i ].nodeName == 'instance_effect' ) {\n\n\t\t\t\tthis.instance_effect = ( new InstanceEffect() ).parse( element.childNodes[ i ] );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction ColorOrTexture () {\n\n\t\tthis.color = new THREE.Color();\n\t\tthis.color.setRGB( Math.random(), Math.random(), Math.random() );\n\t\tthis.color.a = 1.0;\n\n\t\tthis.texture = null;\n\t\tthis.texcoord = null;\n\t\tthis.texOpts = null;\n\n\t};\n\n\tColorOrTexture.prototype.isColor = function () {\n\n\t\treturn ( this.texture == null );\n\n\t};\n\n\tColorOrTexture.prototype.isTexture = function () {\n\n\t\treturn ( this.texture != null );\n\n\t};\n\n\tColorOrTexture.prototype.parse = function ( element ) {\n\n\t\tif (element.nodeName == 'transparent') {\n\n\t\t\tthis.opaque = element.getAttribute('opaque');\n\n\t\t}\n\t\t\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'color':\n\n\t\t\t\t\tvar rgba = _floats( child.textContent );\n\t\t\t\t\tthis.color = new THREE.Color();\n\t\t\t\t\tthis.color.setRGB( rgba[0], rgba[1], rgba[2] );\n\t\t\t\t\tthis.color.a = rgba[3];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\n\t\t\t\t\tthis.texture = child.getAttribute('texture');\n\t\t\t\t\tthis.texcoord = child.getAttribute('texcoord');\n\t\t\t\t\t// Defaults from:\n\t\t\t\t\t// https://collada.org/mediawiki/index.php/Maya_texture_placement_MAYA_extension\n\t\t\t\t\tthis.texOpts = {\n\t\t\t\t\t\toffsetU: 0,\n\t\t\t\t\t\toffsetV: 0,\n\t\t\t\t\t\trepeatU: 1,\n\t\t\t\t\t\trepeatV: 1,\n\t\t\t\t\t\twrapU: 1,\n\t\t\t\t\t\twrapV: 1\n\t\t\t\t\t};\n\t\t\t\t\tthis.parseTexture( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tColorOrTexture.prototype.parseTexture = function ( element ) {\n\n\t\tif ( ! element.childNodes ) return this;\n\n\t\t// This should be supported by Maya, 3dsMax, and MotionBuilder\n\n\t\tif ( element.childNodes[1] && element.childNodes[1].nodeName === 'extra' ) {\n\n\t\t\telement = element.childNodes[1];\n\n\t\t\tif ( element.childNodes[1] && element.childNodes[1].nodeName === 'technique' ) {\n\n\t\t\t\telement = element.childNodes[1];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'offsetU':\n\t\t\t\tcase 'offsetV':\n\t\t\t\tcase 'repeatU':\n\t\t\t\tcase 'repeatV':\n\n\t\t\t\t\tthis.texOpts[ child.nodeName ] = parseFloat( child.textContent );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'wrapU':\n\t\t\t\tcase 'wrapV':\n\t\t\t\t\t\n\t\t\t\t\t// some dae have a value of true which becomes NaN via parseInt\n\n\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\n\t\t\t\t\t\n\t\t\t\t\t\tthis.texOpts[ child.nodeName ] = 1;\n\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t\tthis.texOpts[ child.nodeName ] = parseInt( child.textContent );\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.texOpts[ child.nodeName ] = child.textContent;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Shader ( type, effect ) {\n\n\t\tthis.type = type;\n\t\tthis.effect = effect;\n\t\tthis.material = null;\n\n\t};\n\n\tShader.prototype.parse = function ( element ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'ambient':\n\t\t\t\tcase 'emission':\n\t\t\t\tcase 'diffuse':\n\t\t\t\tcase 'specular':\n\t\t\t\tcase 'transparent':\n\n\t\t\t\t\tthis[ child.nodeName ] = ( new ColorOrTexture() ).parse( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'shininess':\n\t\t\t\tcase 'reflectivity':\n\t\t\t\tcase 'index_of_refraction':\n\t\t\t\tcase 'transparency':\n\n\t\t\t\t\tvar f = child.querySelectorAll('float');\n\n\t\t\t\t\tif ( f.length > 0 )\n\t\t\t\t\t\tthis[ child.nodeName ] = parseFloat( f[ 0 ].textContent );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.create();\n\t\treturn this;\n\n\t};\n\n\tShader.prototype.create = function() {\n\n\t\tvar props = {};\n\n\t\tvar transparent = false;\n\n\t\tif (this['transparency'] !== undefined && this['transparent'] !== undefined) {\n\t\t\t// convert transparent color RBG to average value\n\t\t\tvar transparentColor = this['transparent'];\n\t\t\tvar transparencyLevel = (this.transparent.color.r +\n\t\t\t\t\t\t\t\t\t\tthis.transparent.color.g + \n\t\t\t\t\t\t\t\t\t\tthis.transparent.color.b)\n\t\t\t\t\t\t\t\t\t\t/ 3 * this.transparency;\n\t\t\t\n\t\t\tif (transparencyLevel > 0) {\n\t\t\t\ttransparent = true;\n\t\t\t\tprops[ 'transparent' ] = true;\n\t\t\t\tprops[ 'opacity' ] = 1 - transparencyLevel;\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tfor ( var prop in this ) {\n\n\t\t\tswitch ( prop ) {\n\n\t\t\t\tcase 'ambient':\n\t\t\t\tcase 'emission':\n\t\t\t\tcase 'diffuse':\n\t\t\t\tcase 'specular':\n\n\t\t\t\t\tvar cot = this[ prop ];\n\n\t\t\t\t\tif ( cot instanceof ColorOrTexture ) {\n\n\t\t\t\t\t\tif ( cot.isTexture() ) {\n\n\t\t\t\t\t\t\tvar samplerId = cot.texture;\n\t\t\t\t\t\t\tvar surfaceId = this.effect.sampler[samplerId];\n\n\t\t\t\t\t\t\tif ( surfaceId !== undefined && surfaceId.source !== undefined ) {\n\n\t\t\t\t\t\t\t\tvar surface = this.effect.surface[surfaceId.source];\n\t\t\t\t\t\t\t\tvar image = images[surface.init_from];\n\n\t\t\t\t\t\t\t\tif (image) {\n\n\t\t\t\t\t\t\t\t\tvar texture = THREE.ImageUtils.loadTexture(baseUrl + image.init_from);\n\t\t\t\t\t\t\t\t\ttexture.wrapS = cot.texOpts.wrapU ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\t\t\t\t\t\t\t\t\ttexture.wrapT = cot.texOpts.wrapV ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\t\t\t\t\t\t\t\t\ttexture.offset.x = cot.texOpts.offsetU;\n\t\t\t\t\t\t\t\t\ttexture.offset.y = cot.texOpts.offsetV;\n\t\t\t\t\t\t\t\t\ttexture.repeat.x = cot.texOpts.repeatU;\n\t\t\t\t\t\t\t\t\ttexture.repeat.y = cot.texOpts.repeatV;\n\t\t\t\t\t\t\t\t\tprops['map'] = texture;\n\n\t\t\t\t\t\t\t\t\t// Texture with baked lighting?\n\t\t\t\t\t\t\t\t\tif (prop === 'emission') props['emissive'] = 0xffffff;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( prop === 'diffuse' || !transparent ) {\n\n\t\t\t\t\t\t\tif ( prop === 'emission' ) {\n\n\t\t\t\t\t\t\t\tprops[ 'emissive' ] = cot.color.getHex();\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tprops[ prop ] = cot.color.getHex();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'shininess':\n\n\t\t\t\t\tprops[ prop ] = this[ prop ];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'reflectivity':\n\n\t\t\t\t\tprops[ prop ] = this[ prop ];\n\t\t\t\t\tif( props[ prop ] > 0.0 ) props['envMap'] = options.defaultEnvMap;\n\t\t\t\t\tprops['combine'] = THREE.MixOperation;\t//mix regular shading with reflective component\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'index_of_refraction':\n\n\t\t\t\t\tprops[ 'refractionRatio' ] = this[ prop ]; //TODO: \"index_of_refraction\" becomes \"refractionRatio\" in shader, but I'm not sure if the two are actually comparable\n\t\t\t\t\tif ( this[ prop ] !== 1.0 ) props['envMap'] = options.defaultEnvMap;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'transparency':\n\t\t\t\t\t// gets figured out up top\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tprops[ 'shading' ] = preferredShading;\n\t\tprops[ 'side' ] = this.effect.doubleSided ? THREE.DoubleSide : THREE.FrontSide;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase 'constant':\n\n\t\t\t\tif (props.emissive != undefined) props.color = props.emissive;\n\t\t\t\tthis.material = new THREE.MeshBasicMaterial( props );\n\t\t\t\tbreak;\n\n\t\t\tcase 'phong':\n\t\t\tcase 'blinn':\n\n\t\t\t\tif (props.diffuse != undefined) props.color = props.diffuse;\n\t\t\t\tthis.material = new THREE.MeshPhongMaterial( props );\n\t\t\t\tbreak;\n\n\t\t\tcase 'lambert':\n\t\t\tdefault:\n\n\t\t\t\tif (props.diffuse != undefined) props.color = props.diffuse;\n\t\t\t\tthis.material = new THREE.MeshLambertMaterial( props );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn this.material;\n\n\t};\n\n\tfunction Surface ( effect ) {\n\n\t\tthis.effect = effect;\n\t\tthis.init_from = null;\n\t\tthis.format = null;\n\n\t};\n\n\tSurface.prototype.parse = function ( element ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'init_from':\n\n\t\t\t\t\tthis.init_from = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'format':\n\n\t\t\t\t\tthis.format = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( \"unhandled Surface prop: \" + child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Sampler2D ( effect ) {\n\n\t\tthis.effect = effect;\n\t\tthis.source = null;\n\t\tthis.wrap_s = null;\n\t\tthis.wrap_t = null;\n\t\tthis.minfilter = null;\n\t\tthis.magfilter = null;\n\t\tthis.mipfilter = null;\n\n\t};\n\n\tSampler2D.prototype.parse = function ( element ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'source':\n\n\t\t\t\t\tthis.source = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'minfilter':\n\n\t\t\t\t\tthis.minfilter = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'magfilter':\n\n\t\t\t\t\tthis.magfilter = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mipfilter':\n\n\t\t\t\t\tthis.mipfilter = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'wrap_s':\n\n\t\t\t\t\tthis.wrap_s = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'wrap_t':\n\n\t\t\t\t\tthis.wrap_t = child.textContent;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( \"unhandled Sampler2D prop: \" + child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Effect () {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.shader = null;\n\t\tthis.surface = {};\n\t\tthis.sampler = {};\n\n\t};\n\n\tEffect.prototype.create = function () {\n\n\t\tif ( this.shader == null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\tEffect.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.name = element.getAttribute( 'name' );\n\n\t\textractDoubleSided( this, element );\n\n\t\tthis.shader = null;\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'profile_COMMON':\n\n\t\t\t\t\tthis.parseTechnique( this.parseProfileCOMMON( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tEffect.prototype.parseNewparam = function ( element ) {\n\n\t\tvar sid = element.getAttribute( 'sid' );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'surface':\n\n\t\t\t\t\tthis.surface[sid] = ( new Surface( this ) ).parse( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'sampler2D':\n\n\t\t\t\t\tthis.sampler[sid] = ( new Sampler2D( this ) ).parse( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'extra':\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tEffect.prototype.parseProfileCOMMON = function ( element ) {\n\n\t\tvar technique;\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'profile_COMMON':\n\n\t\t\t\t\tthis.parseProfileCOMMON( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'technique':\n\n\t\t\t\t\ttechnique = child;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'newparam':\n\n\t\t\t\t\tthis.parseNewparam( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'image':\n\n\t\t\t\t\tvar _image = ( new _Image() ).parse( child );\n\t\t\t\t\timages[ _image.id ] = _image;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'extra':\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log( child.nodeName );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn technique;\n\n\t};\n\n\tEffect.prototype.parseTechnique= function ( element ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[i];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'constant':\n\t\t\t\tcase 'lambert':\n\t\t\t\tcase 'blinn':\n\t\t\t\tcase 'phong':\n\n\t\t\t\t\tthis.shader = ( new Shader( child.nodeName, this ) ).parse( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction InstanceEffect () {\n\n\t\tthis.url = \"\";\n\n\t};\n\n\tInstanceEffect.prototype.parse = function ( element ) {\n\n\t\tthis.url = element.getAttribute( 'url' ).replace( /^#/, '' );\n\t\treturn this;\n\n\t};\n\n\tfunction Animation() {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.source = {};\n\t\tthis.sampler = [];\n\t\tthis.channel = [];\n\n\t};\n\n\tAnimation.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.name = element.getAttribute( 'name' );\n\t\tthis.source = {};\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'animation':\n\n\t\t\t\t\tvar anim = ( new Animation() ).parse( child );\n\n\t\t\t\t\tfor ( var src in anim.source ) {\n\n\t\t\t\t\t\tthis.source[ src ] = anim.source[ src ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0; j < anim.channel.length; j ++ ) {\n\n\t\t\t\t\t\tthis.channel.push( anim.channel[ j ] );\n\t\t\t\t\t\tthis.sampler.push( anim.sampler[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'source':\n\n\t\t\t\t\tvar src = ( new Source() ).parse( child );\n\t\t\t\t\tthis.source[ src.id ] = src;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'sampler':\n\n\t\t\t\t\tthis.sampler.push( ( new Sampler( this ) ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'channel':\n\n\t\t\t\t\tthis.channel.push( ( new Channel( this ) ).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction Channel( animation ) {\n\n\t\tthis.animation = animation;\n\t\tthis.source = \"\";\n\t\tthis.target = \"\";\n\t\tthis.fullSid = null;\n\t\tthis.sid = null;\n\t\tthis.dotSyntax = null;\n\t\tthis.arrSyntax = null;\n\t\tthis.arrIndices = null;\n\t\tthis.member = null;\n\n\t};\n\n\tChannel.prototype.parse = function ( element ) {\n\n\t\tthis.source = element.getAttribute( 'source' ).replace( /^#/, '' );\n\t\tthis.target = element.getAttribute( 'target' );\n\n\t\tvar parts = this.target.split( '/' );\n\n\t\tvar id = parts.shift();\n\t\tvar sid = parts.shift();\n\n\t\tvar dotSyntax = ( sid.indexOf(\".\") >= 0 );\n\t\tvar arrSyntax = ( sid.indexOf(\"(\") >= 0 );\n\n\t\tif ( dotSyntax ) {\n\n\t\t\tparts = sid.split(\".\");\n\t\t\tthis.sid = parts.shift();\n\t\t\tthis.member = parts.shift();\n\n\t\t} else if ( arrSyntax ) {\n\n\t\t\tvar arrIndices = sid.split(\"(\");\n\t\t\tthis.sid = arrIndices.shift();\n\n\t\t\tfor (var j = 0; j < arrIndices.length; j ++ ) {\n\n\t\t\t\tarrIndices[j] = parseInt( arrIndices[j].replace(/\\)/, '') );\n\n\t\t\t}\n\n\t\t\tthis.arrIndices = arrIndices;\n\n\t\t} else {\n\n\t\t\tthis.sid = sid;\n\n\t\t}\n\n\t\tthis.fullSid = sid;\n\t\tthis.dotSyntax = dotSyntax;\n\t\tthis.arrSyntax = arrSyntax;\n\n\t\treturn this;\n\n\t};\n\n\tfunction Sampler ( animation ) {\n\n\t\tthis.id = \"\";\n\t\tthis.animation = animation;\n\t\tthis.inputs = [];\n\t\tthis.input = null;\n\t\tthis.output = null;\n\t\tthis.strideOut = null;\n\t\tthis.interpolation = null;\n\t\tthis.startTime = null;\n\t\tthis.endTime = null;\n\t\tthis.duration = 0;\n\n\t};\n\n\tSampler.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.inputs = [];\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'input':\n\n\t\t\t\t\tthis.inputs.push( (new Input()).parse( child ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSampler.prototype.create = function () {\n\n\t\tfor ( var i = 0; i < this.inputs.length; i ++ ) {\n\n\t\t\tvar input = this.inputs[ i ];\n\t\t\tvar source = this.animation.source[ input.source ];\n\n\t\t\tswitch ( input.semantic ) {\n\n\t\t\t\tcase 'INPUT':\n\n\t\t\t\t\tthis.input = source.read();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OUTPUT':\n\n\t\t\t\t\tthis.output = source.read();\n\t\t\t\t\tthis.strideOut = source.accessor.stride;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'INTERPOLATION':\n\n\t\t\t\t\tthis.interpolation = source.read();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'IN_TANGENT':\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OUT_TANGENT':\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.log(input.semantic);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.startTime = 0;\n\t\tthis.endTime = 0;\n\t\tthis.duration = 0;\n\n\t\tif ( this.input.length ) {\n\n\t\t\tthis.startTime = 100000000;\n\t\t\tthis.endTime = -100000000;\n\n\t\t\tfor ( var i = 0; i < this.input.length; i ++ ) {\n\n\t\t\t\tthis.startTime = Math.min( this.startTime, this.input[ i ] );\n\t\t\t\tthis.endTime = Math.max( this.endTime, this.input[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = this.endTime - this.startTime;\n\n\t\t}\n\n\t};\n\n\tSampler.prototype.getData = function ( type, ndx ) {\n\n\t\tvar data;\n\n\t\tif ( type === 'matrix' && this.strideOut === 16 ) {\n\n\t\t\tdata = this.output[ ndx ];\n\n\t\t} else if ( this.strideOut > 1 ) {\n\n\t\t\tdata = [];\n\t\t\tndx *= this.strideOut;\n\n\t\t\tfor ( var i = 0; i < this.strideOut; ++i ) {\n\n\t\t\t\tdata[ i ] = this.output[ ndx + i ];\n\n\t\t\t}\n\n\t\t\tif ( this.strideOut === 3 ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\tcase 'translate':\n\n\t\t\t\t\t\tfixCoords( data, -1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale':\n\n\t\t\t\t\t\tfixCoords( data, 1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.strideOut === 4 && type === 'matrix' ) {\n\n\t\t\t\tfixCoords( data, -1 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata = this.output[ ndx ];\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tfunction Key ( time ) {\n\n\t\tthis.targets = [];\n\t\tthis.time = time;\n\n\t};\n\n\tKey.prototype.addTarget = function ( fullSid, transform, member, data ) {\n\n\t\tthis.targets.push( {\n\t\t\tsid: fullSid,\n\t\t\tmember: member,\n\t\t\ttransform: transform,\n\t\t\tdata: data\n\t\t} );\n\n\t};\n\n\tKey.prototype.apply = function ( opt_sid ) {\n\n\t\tfor ( var i = 0; i < this.targets.length; ++i ) {\n\n\t\t\tvar target = this.targets[ i ];\n\n\t\t\tif ( !opt_sid || target.sid === opt_sid ) {\n\n\t\t\t\ttarget.transform.update( target.data, target.member );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tKey.prototype.getTarget = function ( fullSid ) {\n\n\t\tfor ( var i = 0; i < this.targets.length; ++i ) {\n\n\t\t\tif ( this.targets[ i ].sid === fullSid ) {\n\n\t\t\t\treturn this.targets[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tKey.prototype.hasTarget = function ( fullSid ) {\n\n\t\tfor ( var i = 0; i < this.targets.length; ++i ) {\n\n\t\t\tif ( this.targets[ i ].sid === fullSid ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n\t// TODO: Currently only doing linear interpolation. Should support full COLLADA spec.\n\tKey.prototype.interpolate = function ( nextKey, time ) {\n\n\t\tfor ( var i = 0; i < this.targets.length; ++i ) {\n\n\t\t\tvar target = this.targets[ i ],\n\t\t\t\tnextTarget = nextKey.getTarget( target.sid ),\n\t\t\t\tdata;\n\n\t\t\tif ( target.transform.type !== 'matrix' && nextTarget ) {\n\n\t\t\t\tvar scale = ( time - this.time ) / ( nextKey.time - this.time ),\n\t\t\t\t\tnextData = nextTarget.data,\n\t\t\t\t\tprevData = target.data;\n\n\t\t\t\t// check scale error\n\n\t\t\t\tif ( scale < 0 || scale > 1 ) {\n\n\t\t\t\t\tconsole.log( \"Key.interpolate: Warning! Scale out of bounds:\" + scale );\n\t\t\t\t\tscale = scale < 0 ? 0 : 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevData.length ) {\n\n\t\t\t\t\tdata = [];\n\n\t\t\t\t\tfor ( var j = 0; j < prevData.length; ++j ) {\n\n\t\t\t\t\t\tdata[ j ] = prevData[ j ] + ( nextData[ j ] - prevData[ j ] ) * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdata = prevData + ( nextData - prevData ) * scale;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdata = target.data;\n\n\t\t\t}\n\n\t\t\ttarget.transform.update( data, target.member );\n\n\t\t}\n\n\t};\n\n\t// Camera\n\tfunction Camera() {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.technique = \"\";\n\n\t};\n\n\tCamera.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.name = element.getAttribute( 'name' );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'optics':\n\n\t\t\t\t\tthis.parseOptics( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tCamera.prototype.parseOptics = function ( element ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tif ( element.childNodes[ i ].nodeName == 'technique_common' ) {\n\n\t\t\t\tvar technique = element.childNodes[ i ];\n\n\t\t\t\tfor ( var j = 0; j < technique.childNodes.length; j ++ ) {\n\n\t\t\t\t\tthis.technique = technique.childNodes[ j ].nodeName;\n\n\t\t\t\t\tif ( this.technique == 'perspective' ) {\n\n\t\t\t\t\t\tvar perspective = technique.childNodes[ j ];\n\n\t\t\t\t\t\tfor ( var k = 0; k < perspective.childNodes.length; k ++ ) {\n\n\t\t\t\t\t\t\tvar param = perspective.childNodes[ k ];\n\n\t\t\t\t\t\t\tswitch ( param.nodeName ) {\n\n\t\t\t\t\t\t\t\tcase 'yfov':\n\t\t\t\t\t\t\t\t\tthis.yfov = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'xfov':\n\t\t\t\t\t\t\t\t\tthis.xfov = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'znear':\n\t\t\t\t\t\t\t\t\tthis.znear = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'zfar':\n\t\t\t\t\t\t\t\t\tthis.zfar = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\t\t\t\tthis.aspect_ratio = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( this.technique == 'orthographic' ) {\n\n\t\t\t\t\t\tvar orthographic = technique.childNodes[ j ];\n\n\t\t\t\t\t\tfor ( var k = 0; k < orthographic.childNodes.length; k ++ ) {\n\n\t\t\t\t\t\t\tvar param = orthographic.childNodes[ k ];\n\n\t\t\t\t\t\t\tswitch ( param.nodeName ) {\n\n\t\t\t\t\t\t\t\tcase 'xmag':\n\t\t\t\t\t\t\t\t\tthis.xmag = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'ymag':\n\t\t\t\t\t\t\t\t\tthis.ymag = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'znear':\n\t\t\t\t\t\t\t\t\tthis.znear = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'zfar':\n\t\t\t\t\t\t\t\t\tthis.zfar = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\t\t\t\tthis.aspect_ratio = param.textContent;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction InstanceCamera() {\n\n\t\tthis.url = \"\";\n\n\t};\n\n\tInstanceCamera.prototype.parse = function ( element ) {\n\n\t\tthis.url = element.getAttribute('url').replace(/^#/, '');\n\n\t\treturn this;\n\n\t};\n\n\t// Light\n\n\tfunction Light() {\n\n\t\tthis.id = \"\";\n\t\tthis.name = \"\";\n\t\tthis.technique = \"\";\n\n\t};\n\n\tLight.prototype.parse = function ( element ) {\n\n\t\tthis.id = element.getAttribute( 'id' );\n\t\tthis.name = element.getAttribute( 'name' );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\t\t\tif ( child.nodeType != 1 ) continue;\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'technique_common':\n\n\t\t\t\t\tthis.parseCommon( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'technique':\n\n\t\t\t\t\tthis.parseTechnique( child );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tLight.prototype.parseCommon = function ( element ) {\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tswitch ( element.childNodes[ i ].nodeName ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\tcase 'point':\n\t\t\t\tcase 'spot':\n\t\t\t\tcase 'ambient':\n\n\t\t\t\t\tthis.technique = element.childNodes[ i ].nodeName;\n\n\t\t\t\t\tvar light = element.childNodes[ i ];\n\n\t\t\t\t\tfor ( var j = 0; j < light.childNodes.length; j ++ ) {\n\n\t\t\t\t\t\tvar child = light.childNodes[j];\n\n\t\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\t\tcase 'color':\n\n\t\t\t\t\t\t\t\tvar rgba = _floats( child.textContent );\n\t\t\t\t\t\t\t\tthis.color = new THREE.Color(0);\n\t\t\t\t\t\t\t\tthis.color.setRGB( rgba[0], rgba[1], rgba[2] );\n\t\t\t\t\t\t\t\tthis.color.a = rgba[3];\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'falloff_angle':\n\n\t\t\t\t\t\t\t\tthis.falloff_angle = parseFloat( child.textContent );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tLight.prototype.parseTechnique = function ( element ) {\n\n\t\tthis.profile = element.getAttribute( 'profile' );\n\n\t\tfor ( var i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tvar child = element.childNodes[ i ];\n\n\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\tcase 'intensity':\n\n\t\t\t\t\tthis.intensity = parseFloat(child.textContent);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tfunction InstanceLight() {\n\n\t\tthis.url = \"\";\n\n\t};\n\n\tInstanceLight.prototype.parse = function ( element ) {\n\n\t\tthis.url = element.getAttribute('url').replace(/^#/, '');\n\n\t\treturn this;\n\n\t};\n\n\tfunction _source( element ) {\n\n\t\tvar id = element.getAttribute( 'id' );\n\n\t\tif ( sources[ id ] != undefined ) {\n\n\t\t\treturn sources[ id ];\n\n\t\t}\n\n\t\tsources[ id ] = ( new Source(id )).parse( element );\n\t\treturn sources[ id ];\n\n\t};\n\n\tfunction _nsResolver( nsPrefix ) {\n\n\t\tif ( nsPrefix == \"dae\" ) {\n\n\t\t\treturn \"http://www.collada.org/2005/11/COLLADASchema\";\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\tfunction _bools( str ) {\n\n\t\tvar raw = _strings( str );\n\t\tvar data = [];\n\n\t\tfor ( var i = 0, l = raw.length; i < l; i ++ ) {\n\n\t\t\tdata.push( (raw[i] == 'true' || raw[i] == '1') ? true : false );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tfunction _floats( str ) {\n\n\t\tvar raw = _strings(str);\n\t\tvar data = [];\n\n\t\tfor ( var i = 0, l = raw.length; i < l; i ++ ) {\n\n\t\t\tdata.push( parseFloat( raw[ i ] ) );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tfunction _ints( str ) {\n\n\t\tvar raw = _strings( str );\n\t\tvar data = [];\n\n\t\tfor ( var i = 0, l = raw.length; i < l; i ++ ) {\n\n\t\t\tdata.push( parseInt( raw[ i ], 10 ) );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tfunction _strings( str ) {\n\n\t\treturn ( str.length > 0 ) ? _trimString( str ).split( /\\s+/ ) : [];\n\n\t};\n\n\tfunction _trimString( str ) {\n\n\t\treturn str.replace( /^\\s+/, \"\" ).replace( /\\s+$/, \"\" );\n\n\t};\n\n\tfunction _attr_as_float( element, name, defaultValue ) {\n\n\t\tif ( element.hasAttribute( name ) ) {\n\n\t\t\treturn parseFloat( element.getAttribute( name ) );\n\n\t\t} else {\n\n\t\t\treturn defaultValue;\n\n\t\t}\n\n\t};\n\n\tfunction _attr_as_int( element, name, defaultValue ) {\n\n\t\tif ( element.hasAttribute( name ) ) {\n\n\t\t\treturn parseInt( element.getAttribute( name ), 10) ;\n\n\t\t} else {\n\n\t\t\treturn defaultValue;\n\n\t\t}\n\n\t};\n\n\tfunction _attr_as_string( element, name, defaultValue ) {\n\n\t\tif ( element.hasAttribute( name ) ) {\n\n\t\t\treturn element.getAttribute( name );\n\n\t\t} else {\n\n\t\t\treturn defaultValue;\n\n\t\t}\n\n\t};\n\n\tfunction _format_float( f, num ) {\n\n\t\tif ( f === undefined ) {\n\n\t\t\tvar s = '0.';\n\n\t\t\twhile ( s.length < num + 2 ) {\n\n\t\t\t\ts += '0';\n\n\t\t\t}\n\n\t\t\treturn s;\n\n\t\t}\n\n\t\tnum = num || 2;\n\n\t\tvar parts = f.toString().split( '.' );\n\t\tparts[ 1 ] = parts.length > 1 ? parts[ 1 ].substr( 0, num ) : \"0\";\n\n\t\twhile( parts[ 1 ].length < num ) {\n\n\t\t\tparts[ 1 ] += '0';\n\n\t\t}\n\n\t\treturn parts.join( '.' );\n\n\t};\n\n\tfunction extractDoubleSided( obj, element ) {\n\n\t\tobj.doubleSided = false;\n\n\t\tvar node = element.querySelectorAll('extra double_sided')[0];\n\t\n\t\tif ( node ) {\n\n\t\t\tif ( node && parseInt( node.textContent, 10 ) === 1 ) {\n\n\t\t\t\tobj.doubleSided = true;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// Up axis conversion\n\n\tfunction setUpConversion() {\n\n\t\tif ( !options.convertUpAxis || colladaUp === options.upAxis ) {\n\n\t\t\tupConversion = null;\n\n\t\t} else {\n\n\t\t\tswitch ( colladaUp ) {\n\n\t\t\t\tcase 'X':\n\n\t\t\t\t\tupConversion = options.upAxis === 'Y' ? 'XtoY' : 'XtoZ';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Y':\n\n\t\t\t\t\tupConversion = options.upAxis === 'X' ? 'YtoX' : 'YtoZ';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Z':\n\n\t\t\t\t\tupConversion = options.upAxis === 'X' ? 'ZtoX' : 'ZtoY';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction fixCoords( data, sign ) {\n\n\t\tif ( !options.convertUpAxis || colladaUp === options.upAxis ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tswitch ( upConversion ) {\n\n\t\t\tcase 'XtoY':\n\n\t\t\t\tvar tmp = data[ 0 ];\n\t\t\t\tdata[ 0 ] = sign * data[ 1 ];\n\t\t\t\tdata[ 1 ] = tmp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XtoZ':\n\n\t\t\t\tvar tmp = data[ 2 ];\n\t\t\t\tdata[ 2 ] = data[ 1 ];\n\t\t\t\tdata[ 1 ] = data[ 0 ];\n\t\t\t\tdata[ 0 ] = tmp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YtoX':\n\n\t\t\t\tvar tmp = data[ 0 ];\n\t\t\t\tdata[ 0 ] = data[ 1 ];\n\t\t\t\tdata[ 1 ] = sign * tmp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YtoZ':\n\n\t\t\t\tvar tmp = data[ 1 ];\n\t\t\t\tdata[ 1 ] = sign * data[ 2 ];\n\t\t\t\tdata[ 2 ] = tmp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZtoX':\n\n\t\t\t\tvar tmp = data[ 0 ];\n\t\t\t\tdata[ 0 ] = data[ 1 ];\n\t\t\t\tdata[ 1 ] = data[ 2 ];\n\t\t\t\tdata[ 2 ] = tmp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZtoY':\n\n\t\t\t\tvar tmp = data[ 1 ];\n\t\t\t\tdata[ 1 ] = data[ 2 ];\n\t\t\t\tdata[ 2 ] = sign * tmp;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction getConvertedVec3( data, offset ) {\n\n\t\tvar arr = [ data[ offset ], data[ offset + 1 ], data[ offset + 2 ] ];\n\t\tfixCoords( arr, -1 );\n\t\treturn new THREE.Vector3( arr[ 0 ], arr[ 1 ], arr[ 2 ] );\n\n\t};\n\n\tfunction getConvertedMat4( data ) {\n\n\t\tif ( options.convertUpAxis ) {\n\n\t\t\t// First fix rotation and scale\n\n\t\t\t// Columns first\n\t\t\tvar arr = [ data[ 0 ], data[ 4 ], data[ 8 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 0 ] = arr[ 0 ];\n\t\t\tdata[ 4 ] = arr[ 1 ];\n\t\t\tdata[ 8 ] = arr[ 2 ];\n\t\t\tarr = [ data[ 1 ], data[ 5 ], data[ 9 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 1 ] = arr[ 0 ];\n\t\t\tdata[ 5 ] = arr[ 1 ];\n\t\t\tdata[ 9 ] = arr[ 2 ];\n\t\t\tarr = [ data[ 2 ], data[ 6 ], data[ 10 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 2 ] = arr[ 0 ];\n\t\t\tdata[ 6 ] = arr[ 1 ];\n\t\t\tdata[ 10 ] = arr[ 2 ];\n\t\t\t// Rows second\n\t\t\tarr = [ data[ 0 ], data[ 1 ], data[ 2 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 0 ] = arr[ 0 ];\n\t\t\tdata[ 1 ] = arr[ 1 ];\n\t\t\tdata[ 2 ] = arr[ 2 ];\n\t\t\tarr = [ data[ 4 ], data[ 5 ], data[ 6 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 4 ] = arr[ 0 ];\n\t\t\tdata[ 5 ] = arr[ 1 ];\n\t\t\tdata[ 6 ] = arr[ 2 ];\n\t\t\tarr = [ data[ 8 ], data[ 9 ], data[ 10 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 8 ] = arr[ 0 ];\n\t\t\tdata[ 9 ] = arr[ 1 ];\n\t\t\tdata[ 10 ] = arr[ 2 ];\n\n\t\t\t// Now fix translation\n\t\t\tarr = [ data[ 3 ], data[ 7 ], data[ 11 ] ];\n\t\t\tfixCoords( arr, -1 );\n\t\t\tdata[ 3 ] = arr[ 0 ];\n\t\t\tdata[ 7 ] = arr[ 1 ];\n\t\t\tdata[ 11 ] = arr[ 2 ];\n\n\t\t}\n\n\t\treturn new THREE.Matrix4(\n\t\t\tdata[0], data[1], data[2], data[3],\n\t\t\tdata[4], data[5], data[6], data[7],\n\t\t\tdata[8], data[9], data[10], data[11],\n\t\t\tdata[12], data[13], data[14], data[15]\n\t\t\t);\n\n\t};\n\n\tfunction getConvertedIndex( index ) {\n\n\t\tif ( index > -1 && index < 3 ) {\n\n\t\t\tvar members = ['X', 'Y', 'Z'],\n\t\t\t\tindices = { X: 0, Y: 1, Z: 2 };\n\n\t\t\tindex = getConvertedMember( members[ index ] );\n\t\t\tindex = indices[ index ];\n\n\t\t}\n\n\t\treturn index;\n\n\t};\n\n\tfunction getConvertedMember( member ) {\n\n\t\tif ( options.convertUpAxis ) {\n\n\t\t\tswitch ( member ) {\n\n\t\t\t\tcase 'X':\n\n\t\t\t\t\tswitch ( upConversion ) {\n\n\t\t\t\t\t\tcase 'XtoY':\n\t\t\t\t\t\tcase 'XtoZ':\n\t\t\t\t\t\tcase 'YtoX':\n\n\t\t\t\t\t\t\tmember = 'Y';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ZtoX':\n\n\t\t\t\t\t\t\tmember = 'Z';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Y':\n\n\t\t\t\t\tswitch ( upConversion ) {\n\n\t\t\t\t\t\tcase 'XtoY':\n\t\t\t\t\t\tcase 'YtoX':\n\t\t\t\t\t\tcase 'ZtoX':\n\n\t\t\t\t\t\t\tmember = 'X';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'XtoZ':\n\t\t\t\t\t\tcase 'YtoZ':\n\t\t\t\t\t\tcase 'ZtoY':\n\n\t\t\t\t\t\t\tmember = 'Z';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Z':\n\n\t\t\t\t\tswitch ( upConversion ) {\n\n\t\t\t\t\t\tcase 'XtoZ':\n\n\t\t\t\t\t\t\tmember = 'X';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'YtoZ':\n\t\t\t\t\t\tcase 'ZtoX':\n\t\t\t\t\t\tcase 'ZtoY':\n\n\t\t\t\t\t\t\tmember = 'Y';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn member;\n\n\t};\n\n\treturn {\n\n\t\tload: load,\n\t\tparse: parse,\n\t\tsetPreferredShading: setPreferredShading,\n\t\tapplySkin: applySkin,\n\t\tgeometries : geometries,\n\t\toptions: options\n\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/loaders/ColladaLoader.js\n// module id = 75\n// module chunks = 2","Node = require 'threenodes/nodes/models/Node'\n\nclass Object3D extends Node\n  @node_name = 'Object3D'\n  @group_name = 'Three'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = false\n    @ob = new THREE.Object3D()\n    @vars_shadow_options = [\"castShadow\", \"receiveShadow\"]\n    @shadow_cache = @createCacheObject(@vars_shadow_options)\n    @vars_shadow_options = [\"castShadow\", \"receiveShadow\"]\n\n  getFields: =>\n    # We don't want to have the basic input / output\n    # so don't call super neither extend fields with base_fields\n    fields =\n      inputs:\n        \"children\": {type: \"Object3D\", val: [], default: [], propagateDirty: false}\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3(), propagateDirty: false}\n        \"rotation\": {type: \"Any\", val: new THREE.Euler(), propagateDirty: false}\n        \"scale\": {type: \"Vector3\", val: new THREE.Vector3(1, 1, 1), propagateDirty: false}\n        \"visible\": true\n        \"castShadow\": false\n        \"receiveShadow\": false\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return fields\n\n  deleteObjectAttributes: (ob) =>\n    if ob\n      delete ob.up\n      delete ob.position\n      delete ob.rotation\n      delete ob.scale\n      delete ob.matrix\n      delete ob.matrixWorld\n      delete ob.matrixRotationWorld\n      delete ob.quaternion\n      delete ob._vector\n\n  remove: () =>\n    super\n    @deleteObjectAttributes(@ob)\n    delete @ob\n    delete @shadow_cache\n\n  get_children_array: =>\n    childs = @fields.getField(\"children\").get(\"value\")\n    if childs && $.type(childs) != \"array\"\n      return [childs]\n    return childs\n\n  apply_children: =>\n    children = @fields.getField(\"children\")\n    if !children then return false\n    if !children.changed then return\n    #console.log \"changed\"\n\n    # no connections means no children\n    if @fields.getField(\"children\").connections.length == 0 && @ob.children.length != 0\n      @ob.remove(@ob.children[0]) while @ob.children.length > 0\n      return true\n\n    childs_in = @get_children_array()\n    # remove old childs\n    i = @ob.children.length\n\n    # webglrender node trigger apply_children on each frame..\n    # when removing objects, every items are removed first\n    # if setting from 300 > 20 items, remove 300 then add 20, should remove 280\n\n    #for child in @ob.children\n    while i--\n      child = @ob.children[i]\n\n      #ind = childs_in.indexOf(child)\n      item = _.find(childs_in, (item) ->\n        item.uuid == child.uuid\n      )\n      if !item\n        console.log \"object remove child\"\n        @ob.remove(child)\n\n    #add new childs\n    for child in childs_in\n      #ind = @ob.children.indexOf(child)\n      item = _.find(@ob.children, (item) -> item.uuid == child.uuid)\n      if !item\n        if child instanceof THREE.Light == true\n          #if ind == -1\n          @ob.add(child)\n          @trigger(\"RebuildAllShaders\")\n        else\n          #if ind == -1\n          console.log \"scene add child\"\n          @ob.add(child)\n\n  applyRotation: (target, rotation) =>\n    if rotation instanceof THREE.Euler\n      target.setRotationFromEuler(rotation)\n    else if rotation instanceof THREE.Quaternion\n      target.quaternion = rotation\n    else if rotation instanceof THREE.Vector3\n      target.rotation.set(rotation.x, rotation.y, rotation.z, \"XYZ\")\n\n  compute: =>\n    @applyFieldsToVal(@fields.inputs, @ob, ['children', 'rotation'])\n    rotation = @fields.getField('rotation').getValue()\n    @applyRotation(@ob, rotation)\n    @apply_children()\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('Object3D', Object3D)\n\nmodule.exports = Object3D\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Three/Object3D.coffee","#\"use strict\"\n_ = require 'Underscore'\nBackbone = require 'Backbone'\n\n#THREE = require 'Three'\nrequire 'EffectComposer'\nrequire 'MaskPass'\nrequire 'RenderPass'\nrequire 'ShaderPass'\nrequire 'CopyShader'\nrequire 'Blob'\nrequire 'FileSaver'\nrequire 'libs/canvas-toBlob.min'\n\nclass WebglBase\n  @instance: false\n\n  constructor: () ->\n    console.log \"webgl init...\"\n    WebglBase.instance = this\n    @current_scene = new THREE.Scene()\n    @current_camera = new THREE.PerspectiveCamera(75, 800 / 600, 1, 10000)\n    @current_renderer = false\n    if window.WebGLRenderingContext\n      @current_renderer = new THREE.WebGLRenderer\n        clearColor: 0x000000\n        preserveDrawingBuffer: true\n    @current_renderer.autoClear = false\n    @effectScreen = new THREE.ShaderPass( THREE.CopyShader )\n    @effectScreen.renderToScreen = true\n    @renderModel = new THREE.RenderPass( @current_scene, @current_camera )\n    @composer = new THREE.EffectComposer( @current_renderer )\n\n    WebglBase.current_renderer = @current_renderer\n    WebglBase.current_scene = @current_scene\n    WebglBase.current_camera = @current_camera\n    WebglBase.composer = @composer\n    WebglBase.renderModel = @renderModel\n    WebglBase.effectScreen = @effectScreen\n\n  exportImage: (fname) =>\n    canvas = @current_renderer.domElement\n    on_write = (blob) ->\n      saveAs(blob, fname)\n    canvas.toBlob(on_write, \"image/png\")\n\nmodule.exports = WebglBase\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/utils/WebglBase.coffee","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar width = window.innerWidth || 1;\n\t\tvar height = window.innerHeight || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\trenderTarget.width = window.innerWidth;\n\t\t\trenderTarget.height = window.innerHeight;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};\n\n// shared ortho camera\n\nTHREE.EffectComposer.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\nTHREE.EffectComposer.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\nTHREE.EffectComposer.scene = new THREE.Scene();\nTHREE.EffectComposer.scene.add( THREE.EffectComposer.quad );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/EffectComposer.js\n// module id = 78\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/MaskPass.js\n// module id = 79\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/RenderPass.js\n// module id = 80\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tTHREE.EffectComposer.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( THREE.EffectComposer.scene, THREE.EffectComposer.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/postprocessing/ShaderPass.js\n// module id = 81\n// module chunks = 2","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/three-extras/js/shaders/CopyShader.js\n// module id = 82\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_83__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Blob\"\n// module id = 83\n// module chunks = 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_84__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"FileSaver\"\n// module id = 84\n// module chunks = 2 3","/* canvas-toBlob.js\n * A canvas.toBlob() implementation.\n * 2011-07-13\n *\n * By Eli Grey, http://eligrey.com and Devin Samarin, https://github.com/eboyjr\n * License: X11/MIT\n *   See LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n  plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/canvas-toBlob.js/blob/master/canvas-toBlob.js */\n\n(function(view) {\n\"use strict\";\nvar\n    Uint8Array = view.Uint8Array\n  , HTMLCanvasElement = view.HTMLCanvasElement\n  , is_base64_regex = /\\s*;\\s*base64\\s*(?:;|$)/i\n  , base64_ranks\n  , decode_base64 = function(base64) {\n    var\n        len = base64.length\n      , buffer = new Uint8Array(len / 4 * 3 | 0)\n      , i = 0\n      , outptr = 0\n      , last = [0, 0]\n      , state = 0\n      , save = 0\n      , rank\n      , code\n      , undef\n    ;\n    while (len--) {\n      code = base64.charCodeAt(i++);\n      rank = base64_ranks[code-43];\n      if (rank !== 255 && rank !== undef) {\n        last[1] = last[0];\n        last[0] = code;\n        save = (save << 6) | rank;\n        state++;\n        if (state === 4) {\n          buffer[outptr++] = save >>> 16;\n          if (last[1] !== 61 /* padding character */) {\n            buffer[outptr++] = save >>> 8;\n          }\n          if (last[0] !== 61 /* padding character */) {\n            buffer[outptr++] = save;\n          }\n          state = 0;\n        }\n      }\n    }\n    // 2/3 chance there's going to be some null bytes at the end, but that\n    // doesn't really matter with most image formats.\n    // If it somehow matters for you, truncate the buffer up outptr.\n    return buffer;\n  }\n;\nif (Uint8Array) {\n  base64_ranks = new Uint8Array([\n      62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1\n    , -1, -1,  0, -1, -1, -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9\n    , 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25\n    , -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35\n    , 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n  ]);\n}\nif (HTMLCanvasElement && !HTMLCanvasElement.prototype.toBlob) {\n  HTMLCanvasElement.prototype.toBlob = function(callback, type /*, ...args*/) {\n      if (!type) {\n      type = \"image/png\";\n    } if (this.mozGetAsFile) {\n      callback(this.mozGetAsFile(\"canvas\", type));\n      return;\n    }\n    var\n        args = Array.prototype.slice.call(arguments, 1)\n      , dataURI = this.toDataURL.apply(this, args)\n      , header_end = dataURI.indexOf(\",\")\n      , data = dataURI.substring(header_end + 1)\n      , is_base64 = is_base64_regex.test(dataURI.substring(0, header_end))\n      , blob\n    ;\n    if (Blob.fake) {\n      // no reason to decode a data: URI that's just going to become a data URI again\n      blob = new Blob\n      if (is_base64) {\n        blob.encoding = \"base64\";\n      } else {\n        blob.encoding = \"URI\";\n      }\n      blob.data = data;\n      blob.size = data.length;\n    } else if (Uint8Array) {\n      if (is_base64) {\n        blob = new Blob([decode_base64(data)], {type: type});\n      } else {\n        blob = new Blob([decodeURIComponent(data)], {type: type});\n      }\n    }\n    callback(blob);\n  };\n}\n}(self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/canvas-toBlob.min.js\n// module id = 85\n// module chunks = 2","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\nNode = require 'threenodes/nodes/models/Node'\nrequire 'Three'\nrequire 'csg'\nrequire 'ThreeCSG'\n\nclass NodeCSG extends Node\n  constructor: () ->\n    super\n    @auto_evaluate = true\n    @ob = false\n    @cached = []\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"a\": {type: \"Any\", val: false},\n        \"position_a\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"rotation_a\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"b\": {type: \"Any\", val: false},\n        \"position_b\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"rotation_b\": {type: \"Vector3\", val: new THREE.Vector3()}\n      outputs:\n        \"geometry\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  comput_csg_geometry: (a, b) => a.union(b)\n\n  get_cache_array: =>\n    a = @fields.getField(\"a\").getValue()\n    pos_a = @fields.getField(\"position_a\").getValue()\n    rot_a = @fields.getField(\"rotation_a\").getValue()\n    b = @fields.getField(\"b\").getValue()\n    pos_b = @fields.getField(\"position_b\").getValue()\n    rot_b = @fields.getField(\"rotation_b\").getValue()\n    if !a || !b then return []\n    [a.id, b.id, pos_a.x, pos_a.y, pos_a.z, rot_a.x, rot_a.y, rot_a.z, pos_b.x, pos_b.y, pos_b.z, rot_b.x, rot_b.y, rot_b.z]\n\n  remove: =>\n    delete @ob\n    delete @cached\n    super\n\n  compute: =>\n    a = @fields.getField(\"a\").getValue()\n    pos_a = @fields.getField(\"position_a\").getValue()\n    rot_a = @fields.getField(\"rotation_a\").getValue()\n    b = @fields.getField(\"b\").getValue()\n    pos_b = @fields.getField(\"position_b\").getValue()\n    rot_b = @fields.getField(\"rotation_b\").getValue()\n    new_cache = @get_cache_array()\n    # todo: recompute if a or b change\n    if (a && b) && (Utils.flatArraysAreEquals(new_cache, @cached) == false)\n      console.log \"csg operation\"\n      csg_a = THREE.CSG.toCSG(a, pos_a, rot_a)\n      csg_b = THREE.CSG.toCSG(b, pos_b, rot_b)\n      csg_geom = @comput_csg_geometry(csg_a, csg_b)\n      @ob = THREE.CSG.fromCSG(csg_geom)\n      @cached = new_cache\n    @fields.setField(\"geometry\", @ob)\n\nclass CsgUnion extends NodeCSG\n  @node_name = 'Union'\n  @group_name = 'Constructive-Geometry'\n\nThreeNodes.Core.addNodeType('CsgUnion', CsgUnion)\n\nclass CsgSubtract extends NodeCSG\n  @node_name = 'Subtract'\n  @group_name = 'Constructive-Geometry'\n\n  comput_csg_geometry: (a, b) => a.subtract(b)\n\nThreeNodes.Core.addNodeType('CsgSubtract', CsgSubtract)\n\nclass CsgIntersect extends NodeCSG\n  @node_name = 'Intersect'\n  @group_name = 'Constructive-Geometry'\n\n  comput_csg_geometry: (a, b) => a.intersect(b)\n\nThreeNodes.Core.addNodeType('CsgIntersect', CsgIntersect)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/ConstructiveSolidGeometry.coffee","module.exports = __WEBPACK_EXTERNAL_MODULE_87__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Three\"\n// module id = 87\n// module chunks = 2","// Constructive Solid Geometry (CSG) is a modeling technique that uses Boolean\n// operations like union and intersection to combine 3D solids. This library\n// implements CSG operations on meshes elegantly and concisely using BSP trees,\n// and is meant to serve as an easily understandable implementation of the\n// algorithm. All edge cases involving overlapping coplanar polygons in both\n// solids are correctly handled.\n// \n// Example usage:\n// \n//     var cube = CSG.cube();\n//     var sphere = CSG.sphere({ radius: 1.3 });\n//     var polygons = cube.subtract(sphere).toPolygons();\n// \n// ## Implementation Details\n// \n// All CSG operations are implemented in terms of two functions, `clipTo()` and\n// `invert()`, which remove parts of a BSP tree inside another BSP tree and swap\n// solid and empty space, respectively. To find the union of `a` and `b`, we\n// want to remove everything in `a` inside `b` and everything in `b` inside `a`,\n// then combine polygons from `a` and `b` into one solid:\n// \n//     a.clipTo(b);\n//     b.clipTo(a);\n//     a.build(b.allPolygons());\n// \n// The only tricky part is handling overlapping coplanar polygons in both trees.\n// The code above keeps both copies, but we need to keep them in one tree and\n// remove them in the other tree. To remove them from `b` we can clip the\n// inverse of `b` against `a`. The code for union now looks like this:\n// \n//     a.clipTo(b);\n//     b.clipTo(a);\n//     b.invert();\n//     b.clipTo(a);\n//     b.invert();\n//     a.build(b.allPolygons());\n// \n// Subtraction and intersection naturally follow from set operations. If\n// union is `A | B`, subtraction is `A - B = ~(~A | B)` and intersection is\n// `A & B = ~(~A | ~B)` where `~` is the complement operator.\n// \n// ## License\n// \n// Copyright (c) 2011 Evan Wallace (http://madebyevan.com/), under the MIT license.\n\n// # class CSG\n\n// Holds a binary space partition tree representing a 3D solid. Two solids can\n// be combined using the `union()`, `subtract()`, and `intersect()` methods.\n\nCSG = function() {\n  this.polygons = [];\n};\n\n// Construct a CSG solid from a list of `CSG.Polygon` instances.\nCSG.fromPolygons = function(polygons) {\n  var csg = new CSG();\n  csg.polygons = polygons;\n  return csg;\n};\n\nCSG.prototype = {\n  clone: function() {\n    var csg = new CSG();\n    csg.polygons = this.polygons.map(function(p) { return p.clone(); });\n    return csg;\n  },\n\n  toPolygons: function() {\n    return this.polygons;\n  },\n\n  // Return a new CSG solid representing space in either this solid or in the\n  // solid `csg`. Neither this solid nor the solid `csg` are modified.\n  // \n  //     A.union(B)\n  // \n  //     +-------+            +-------+\n  //     |       |            |       |\n  //     |   A   |            |       |\n  //     |    +--+----+   =   |       +----+\n  //     +----+--+    |       +----+       |\n  //          |   B   |            |       |\n  //          |       |            |       |\n  //          +-------+            +-------+\n  // \n  union: function(csg) {\n    var a = new CSG.Node(this.clone().polygons);\n    var b = new CSG.Node(csg.clone().polygons);\n    a.clipTo(b);\n    b.clipTo(a);\n    b.invert();\n    b.clipTo(a);\n    b.invert();\n    a.build(b.allPolygons());\n    return CSG.fromPolygons(a.allPolygons());\n  },\n\n  // Return a new CSG solid representing space in this solid but not in the\n  // solid `csg`. Neither this solid nor the solid `csg` are modified.\n  // \n  //     A.subtract(B)\n  // \n  //     +-------+            +-------+\n  //     |       |            |       |\n  //     |   A   |            |       |\n  //     |    +--+----+   =   |    +--+\n  //     +----+--+    |       +----+\n  //          |   B   |\n  //          |       |\n  //          +-------+\n  // \n  subtract: function(csg) {\n    var a = new CSG.Node(this.clone().polygons);\n    var b = new CSG.Node(csg.clone().polygons);\n    a.invert();\n    a.clipTo(b);\n    b.clipTo(a);\n    b.invert();\n    b.clipTo(a);\n    b.invert();\n    a.build(b.allPolygons());\n    a.invert();\n    return CSG.fromPolygons(a.allPolygons());\n  },\n\n  // Return a new CSG solid representing space both this solid and in the\n  // solid `csg`. Neither this solid nor the solid `csg` are modified.\n  // \n  //     A.intersect(B)\n  // \n  //     +-------+\n  //     |       |\n  //     |   A   |\n  //     |    +--+----+   =   +--+\n  //     +----+--+    |       +--+\n  //          |   B   |\n  //          |       |\n  //          +-------+\n  // \n  intersect: function(csg) {\n    var a = new CSG.Node(this.clone().polygons);\n    var b = new CSG.Node(csg.clone().polygons);\n    a.invert();\n    b.clipTo(a);\n    b.invert();\n    a.clipTo(b);\n    b.clipTo(a);\n    a.build(b.allPolygons());\n    a.invert();\n    return CSG.fromPolygons(a.allPolygons());\n  },\n\n  // Return a new CSG solid with solid and empty space switched. This solid is\n  // not modified.\n  inverse: function() {\n    var csg = this.clone();\n    csg.polygons.map(function(p) { p.flip(); });\n    return csg;\n  }\n};\n\n// Construct an axis-aligned solid cuboid. Optional parameters are `center` and\n// `radius`, which default to `[0, 0, 0]` and `[1, 1, 1]`. The radius can be\n// specified using a single number or a list of three numbers, one for each axis.\n// \n// Example code:\n// \n//     var cube = CSG.cube({\n//       center: [0, 0, 0],\n//       radius: 1\n//     });\nCSG.cube = function(options) {\n  options = options || {};\n  var c = new CSG.Vector(options.center || [0, 0, 0]);\n  var r = !options.radius ? [1, 1, 1] : options.radius.length ?\n           options.radius : [options.radius, options.radius, options.radius];\n  return CSG.fromPolygons([\n    [[0, 4, 6, 2], [-1, 0, 0]],\n    [[1, 3, 7, 5], [+1, 0, 0]],\n    [[0, 1, 5, 4], [0, -1, 0]],\n    [[2, 6, 7, 3], [0, +1, 0]],\n    [[0, 2, 3, 1], [0, 0, -1]],\n    [[4, 5, 7, 6], [0, 0, +1]]\n  ].map(function(info) {\n    return new CSG.Polygon(info[0].map(function(i) {\n      var pos = new CSG.Vector(\n        c.x + r[0] * (2 * !!(i & 1) - 1),\n        c.y + r[1] * (2 * !!(i & 2) - 1),\n        c.z + r[2] * (2 * !!(i & 4) - 1)\n      );\n      return new CSG.Vertex(pos, new CSG.Vector(info[1]));\n    }));\n  }));\n};\n\n// Construct a solid sphere. Optional parameters are `center`, `radius`,\n// `slices`, and `stacks`, which default to `[0, 0, 0]`, `1`, `16`, and `8`.\n// The `slices` and `stacks` parameters control the tessellation along the\n// longitude and latitude directions.\n// \n// Example usage:\n// \n//     var sphere = CSG.sphere({\n//       center: [0, 0, 0],\n//       radius: 1,\n//       slices: 16,\n//       stacks: 8\n//     });\nCSG.sphere = function(options) {\n  options = options || {};\n  var c = new CSG.Vector(options.center || [0, 0, 0]);\n  var r = options.radius || 1;\n  var slices = options.slices || 16;\n  var stacks = options.stacks || 8;\n  var polygons = [], vertices;\n  function vertex(theta, phi) {\n    theta *= Math.PI * 2;\n    phi *= Math.PI;\n    var dir = new CSG.Vector(\n      Math.cos(theta) * Math.sin(phi),\n      Math.cos(phi),\n      Math.sin(theta) * Math.sin(phi)\n    );\n    vertices.push(new CSG.Vertex(c.plus(dir.times(r)), dir));\n  }\n  for (var i = 0; i < slices; i++) {\n    for (var j = 0; j < stacks; j++) {\n      vertices = [];\n      vertex(i / slices, j / stacks);\n      if (j > 0) vertex((i + 1) / slices, j / stacks);\n      if (j < stacks - 1) vertex((i + 1) / slices, (j + 1) / stacks);\n      vertex(i / slices, (j + 1) / stacks);\n      polygons.push(new CSG.Polygon(vertices));\n    }\n  }\n  return CSG.fromPolygons(polygons);\n};\n\n// Construct a solid cylinder. Optional parameters are `start`, `end`,\n// `radius`, and `slices`, which default to `[0, -1, 0]`, `[0, 1, 0]`, `1`, and\n// `16`. The `slices` parameter controls the tessellation.\n// \n// Example usage:\n// \n//     var cylinder = CSG.cylinder({\n//       start: [0, -1, 0],\n//       end: [0, 1, 0],\n//       radius: 1,\n//       slices: 16\n//     });\nCSG.cylinder = function(options) {\n  options = options || {};\n  var s = new CSG.Vector(options.start || [0, -1, 0]);\n  var e = new CSG.Vector(options.end || [0, 1, 0]);\n  var ray = e.minus(s);\n  var r = options.radius || 1;\n  var slices = options.slices || 16;\n  var axisZ = ray.unit(), isY = (Math.abs(axisZ.y) > 0.5);\n  var axisX = new CSG.Vector(isY, !isY, 0).cross(axisZ).unit();\n  var axisY = axisX.cross(axisZ).unit();\n  var start = new CSG.Vertex(s, axisZ.negated());\n  var end = new CSG.Vertex(e, axisZ.unit());\n  var polygons = [];\n  function point(stack, slice, normalBlend) {\n    var angle = slice * Math.PI * 2;\n    var out = axisX.times(Math.cos(angle)).plus(axisY.times(Math.sin(angle)));\n    var pos = s.plus(ray.times(stack)).plus(out.times(r));\n    var normal = out.times(1 - Math.abs(normalBlend)).plus(axisZ.times(normalBlend));\n    return new CSG.Vertex(pos, normal);\n  }\n  for (var i = 0; i < slices; i++) {\n    var t0 = i / slices, t1 = (i + 1) / slices;\n    polygons.push(new CSG.Polygon([start, point(0, t0, -1), point(0, t1, -1)]));\n    polygons.push(new CSG.Polygon([point(0, t1, 0), point(0, t0, 0), point(1, t0, 0), point(1, t1, 0)]));\n    polygons.push(new CSG.Polygon([end, point(1, t1, 1), point(1, t0, 1)]));\n  }\n  return CSG.fromPolygons(polygons);\n};\n\n// # class Vector\n\n// Represents a 3D vector.\n// \n// Example usage:\n// \n//     new CSG.Vector(1, 2, 3);\n//     new CSG.Vector([1, 2, 3]);\n//     new CSG.Vector({ x: 1, y: 2, z: 3 });\n\nCSG.Vector = function(x, y, z) {\n  if (arguments.length == 3) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  } else if ('x' in x) {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z;\n  } else {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2];\n  }\n};\n\nCSG.Vector.prototype = {\n  clone: function() {\n    return new CSG.Vector(this.x, this.y, this.z);\n  },\n\n  negated: function() {\n    return new CSG.Vector(-this.x, -this.y, -this.z);\n  },\n\n  plus: function(a) {\n    return new CSG.Vector(this.x + a.x, this.y + a.y, this.z + a.z);\n  },\n\n  minus: function(a) {\n    return new CSG.Vector(this.x - a.x, this.y - a.y, this.z - a.z);\n  },\n\n  times: function(a) {\n    return new CSG.Vector(this.x * a, this.y * a, this.z * a);\n  },\n\n  dividedBy: function(a) {\n    return new CSG.Vector(this.x / a, this.y / a, this.z / a);\n  },\n\n  dot: function(a) {\n    return this.x * a.x + this.y * a.y + this.z * a.z;\n  },\n\n  lerp: function(a, t) {\n    return this.plus(a.minus(this).times(t));\n  },\n\n  length: function() {\n    return Math.sqrt(this.dot(this));\n  },\n\n  unit: function() {\n    return this.dividedBy(this.length());\n  },\n\n  cross: function(a) {\n    return new CSG.Vector(\n      this.y * a.z - this.z * a.y,\n      this.z * a.x - this.x * a.z,\n      this.x * a.y - this.y * a.x\n    );\n  }\n};\n\n// # class Vertex\n\n// Represents a vertex of a polygon. Use your own vertex class instead of this\n// one to provide additional features like texture coordinates and vertex\n// colors. Custom vertex classes need to provide a `pos` property and `clone()`,\n// `flip()`, and `interpolate()` methods that behave analogous to the ones\n// defined by `CSG.Vertex`. This class provides `normal` so convenience\n// functions like `CSG.sphere()` can return a smooth vertex normal, but `normal`\n// is not used anywhere else.\n\nCSG.Vertex = function(pos, normal) {\n  this.pos = new CSG.Vector(pos);\n  this.normal = new CSG.Vector(normal);\n};\n\nCSG.Vertex.prototype = {\n  clone: function() {\n    return new CSG.Vertex(this.pos.clone(), this.normal.clone());\n  },\n\n  // Invert all orientation-specific data (e.g. vertex normal). Called when the\n  // orientation of a polygon is flipped.\n  flip: function() {\n    this.normal = this.normal.negated();\n  },\n\n  // Create a new vertex between this vertex and `other` by linearly\n  // interpolating all properties using a parameter of `t`. Subclasses should\n  // override this to interpolate additional properties.\n  interpolate: function(other, t) {\n    return new CSG.Vertex(\n      this.pos.lerp(other.pos, t),\n      this.normal.lerp(other.normal, t)\n    );\n  }\n};\n\n// # class Plane\n\n// Represents a plane in 3D space.\n\nCSG.Plane = function(normal, w) {\n  this.normal = normal;\n  this.w = w;\n};\n\n// `CSG.Plane.EPSILON` is the tolerance used by `splitPolygon()` to decide if a\n// point is on the plane.\nCSG.Plane.EPSILON = 1e-5;\n\nCSG.Plane.fromPoints = function(a, b, c) {\n  var n = b.minus(a).cross(c.minus(a)).unit();\n  return new CSG.Plane(n, n.dot(a));\n};\n\nCSG.Plane.prototype = {\n  clone: function() {\n    return new CSG.Plane(this.normal.clone(), this.w);\n  },\n\n  flip: function() {\n    this.normal = this.normal.negated();\n    this.w = -this.w;\n  },\n\n  // Split `polygon` by this plane if needed, then put the polygon or polygon\n  // fragments in the appropriate lists. Coplanar polygons go into either\n  // `coplanarFront` or `coplanarBack` depending on their orientation with\n  // respect to this plane. Polygons in front or in back of this plane go into\n  // either `front` or `back`.\n  splitPolygon: function(polygon, coplanarFront, coplanarBack, front, back) {\n    var COPLANAR = 0;\n    var FRONT = 1;\n    var BACK = 2;\n    var SPANNING = 3;\n\n    // Classify each point as well as the entire polygon into one of the above\n    // four classes.\n    var polygonType = 0;\n    var types = [];\n    for (var i = 0; i < polygon.vertices.length; i++) {\n      var t = this.normal.dot(polygon.vertices[i].pos) - this.w;\n      var type = (t < -CSG.Plane.EPSILON) ? BACK : (t > CSG.Plane.EPSILON) ? FRONT : COPLANAR;\n      polygonType |= type;\n      types.push(type);\n    }\n\n    // Put the polygon in the correct list, splitting it when necessary.\n    switch (polygonType) {\n      case COPLANAR:\n        (this.normal.dot(polygon.plane.normal) > 0 ? coplanarFront : coplanarBack).push(polygon);\n        break;\n      case FRONT:\n        front.push(polygon);\n        break;\n      case BACK:\n        back.push(polygon);\n        break;\n      case SPANNING:\n        var f = [], b = [];\n        for (var i = 0; i < polygon.vertices.length; i++) {\n          var j = (i + 1) % polygon.vertices.length;\n          var ti = types[i], tj = types[j];\n          var vi = polygon.vertices[i], vj = polygon.vertices[j];\n          if (ti != BACK) f.push(vi);\n          if (ti != FRONT) b.push(ti != BACK ? vi.clone() : vi);\n          if ((ti | tj) == SPANNING) {\n            var t = (this.w - this.normal.dot(vi.pos)) / this.normal.dot(vj.pos.minus(vi.pos));\n            var v = vi.interpolate(vj, t);\n            f.push(v);\n            b.push(v.clone());\n          }\n        }\n        if (f.length >= 3) front.push(new CSG.Polygon(f, polygon.shared));\n        if (b.length >= 3) back.push(new CSG.Polygon(b, polygon.shared));\n        break;\n    }\n  }\n};\n\n// # class Polygon\n\n// Represents a convex polygon. The vertices used to initialize a polygon must\n// be coplanar and form a convex loop. They do not have to be `CSG.Vertex`\n// instances but they must behave similarly (duck typing can be used for\n// customization).\n// \n// Each convex polygon has a `shared` property, which is shared between all\n// polygons that are clones of each other or were split from the same polygon.\n// This can be used to define per-polygon properties (such as surface color).\n\nCSG.Polygon = function(vertices, shared) {\n  this.vertices = vertices;\n  this.shared = shared;\n  this.plane = CSG.Plane.fromPoints(vertices[0].pos, vertices[1].pos, vertices[2].pos);\n};\n\nCSG.Polygon.prototype = {\n  clone: function() {\n    var vertices = this.vertices.map(function(v) { return v.clone(); });\n    return new CSG.Polygon(vertices, this.shared);\n  },\n\n  flip: function() {\n    this.vertices.reverse().map(function(v) { v.flip(); });\n    this.plane.flip();\n  }\n};\n\n// # class Node\n\n// Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\n// by picking a polygon to split along. That polygon (and all other coplanar\n// polygons) are added directly to that node and the other polygons are added to\n// the front and/or back subtrees. This is not a leafy BSP tree since there is\n// no distinction between internal and leaf nodes.\n\nCSG.Node = function(polygons) {\n  this.plane = null;\n  this.front = null;\n  this.back = null;\n  this.polygons = [];\n  if (polygons) this.build(polygons);\n};\n\nCSG.Node.prototype = {\n  clone: function() {\n    var node = new CSG.Node();\n    node.plane = this.plane && this.plane.clone();\n    node.front = this.front && this.front.clone();\n    node.back = this.back && this.back.clone();\n    node.polygons = this.polygons.map(function(p) { return p.clone(); });\n    return node;\n  },\n\n  // Convert solid space to empty space and empty space to solid space.\n  invert: function() {\n    for (var i = 0; i < this.polygons.length; i++) {\n      this.polygons[i].flip();\n    }\n    this.plane.flip();\n    if (this.front) this.front.invert();\n    if (this.back) this.back.invert();\n    var temp = this.front;\n    this.front = this.back;\n    this.back = temp;\n  },\n\n  // Recursively remove all polygons in `polygons` that are inside this BSP\n  // tree.\n  clipPolygons: function(polygons) {\n    if (!this.plane) return polygons.slice();\n    var front = [], back = [];\n    for (var i = 0; i < polygons.length; i++) {\n      this.plane.splitPolygon(polygons[i], front, back, front, back);\n    }\n    if (this.front) front = this.front.clipPolygons(front);\n    if (this.back) back = this.back.clipPolygons(back);\n    else back = [];\n    return front.concat(back);\n  },\n\n  // Remove all polygons in this BSP tree that are inside the other BSP tree\n  // `bsp`.\n  clipTo: function(bsp) {\n    this.polygons = bsp.clipPolygons(this.polygons);\n    if (this.front) this.front.clipTo(bsp);\n    if (this.back) this.back.clipTo(bsp);\n  },\n\n  // Return a list of all polygons in this BSP tree.\n  allPolygons: function() {\n    var polygons = this.polygons.slice();\n    if (this.front) polygons = polygons.concat(this.front.allPolygons());\n    if (this.back) polygons = polygons.concat(this.back.allPolygons());\n    return polygons;\n  },\n\n  // Build a BSP tree out of `polygons`. When called on an existing tree, the\n  // new polygons are filtered down to the bottom of the tree and become new\n  // nodes there. Each set of polygons is partitioned using the first polygon\n  // (no heuristic is used to pick a good split).\n  build: function(polygons) {\n    if (!polygons.length) return;\n    if (!this.plane) this.plane = polygons[0].plane.clone();\n    var front = [], back = [];\n    for (var i = 0; i < polygons.length; i++) {\n      this.plane.splitPolygon(polygons[i], this.polygons, this.polygons, front, back);\n    }\n    if (front.length) {\n      if (!this.front) this.front = new CSG.Node();\n      this.front.build(front);\n    }\n    if (back.length) {\n      if (!this.back) this.back = new CSG.Node();\n      this.back.build(back);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/csg.js\n// module id = 88\n// module chunks = 2","'use strict';\nwindow.ThreeBSP = (function() {\n\t\n\tvar ThreeBSP,\n\t\tEPSILON = 1e-5,\n\t\tCOPLANAR = 0,\n\t\tFRONT = 1,\n\t\tBACK = 2,\n\t\tSPANNING = 3;\n\t\n\tThreeBSP = function( geometry ) {\n\t\t// Convert THREE.Geometry to ThreeBSP\n\t\tvar i, _length_i,\n\t\t\tface, vertex, faceVertexUvs,\n\t\t\tpolygon,\n\t\t\tpolygons = [],\n\t\t\ttree;\n\t\n\t\tif ( geometry instanceof THREE.Geometry ) {\n\t\t\tthis.matrix = new THREE.Matrix4;\n\t\t} else if ( geometry instanceof THREE.Mesh ) {\n\t\t\t// #todo: add hierarchy support\n\t\t\tgeometry.updateMatrix();\n\t\t\tthis.matrix = geometry.matrix.clone();\n\t\t\tgeometry = geometry.geometry;\n\t\t} else if ( geometry instanceof ThreeBSP.Node ) {\n\t\t\tthis.tree = geometry;\n\t\t\tthis.matrix = new THREE.Matrix4;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tthrow 'ThreeBSP: Given geometry is unsupported';\n\t\t}\n\t\n\t\tfor ( i = 0, _length_i = geometry.faces.length; i < _length_i; i++ ) {\n\t\t\tface = geometry.faces[i];\n\t\t\tfaceVertexUvs = geometry.faceVertexUvs[0][i];\n\t\t\tpolygon = new ThreeBSP.Polygon;\n\t\t\t\n\t\t\tif ( face instanceof THREE.Face3 ) {\n\t\t\t\tvertex = geometry.vertices[ face.a ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[0], new THREE.Vector2( faceVertexUvs[0].x, faceVertexUvs[0].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t\t\n\t\t\t\tvertex = geometry.vertices[ face.b ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[1], new THREE.Vector2( faceVertexUvs[1].x, faceVertexUvs[1].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t\t\n\t\t\t\tvertex = geometry.vertices[ face.c ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[2], new THREE.Vector2( faceVertexUvs[2].x, faceVertexUvs[2].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t} else if ( typeof THREE.Face4 ) {\n\t\t\t\tvertex = geometry.vertices[ face.a ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[0], new THREE.Vector2( faceVertexUvs[0].x, faceVertexUvs[0].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t\t\n\t\t\t\tvertex = geometry.vertices[ face.b ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[1], new THREE.Vector2( faceVertexUvs[1].x, faceVertexUvs[1].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t\t\n\t\t\t\tvertex = geometry.vertices[ face.c ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[2], new THREE.Vector2( faceVertexUvs[2].x, faceVertexUvs[2].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t\t\n\t\t\t\tvertex = geometry.vertices[ face.d ];\n\t\t\t\tvertex = new ThreeBSP.Vertex( vertex.x, vertex.y, vertex.z, face.vertexNormals[3], new THREE.Vector2( faceVertexUvs[3].x, faceVertexUvs[3].y ) );\n\t\t\t\tvertex.applyMatrix4(this.matrix);\n\t\t\t\tpolygon.vertices.push( vertex );\n\t\t\t} else {\n\t\t\t\tthrow 'Invalid face type at index ' + i;\n\t\t\t}\n\t\t\t\n\t\t\tpolygon.calculateProperties();\n\t\t\tpolygons.push( polygon );\n\t\t};\n\t\n\t\tthis.tree = new ThreeBSP.Node( polygons );\n\t};\n\tThreeBSP.prototype.subtract = function( other_tree ) {\n\t\tvar a = this.tree.clone(),\n\t\t\tb = other_tree.tree.clone();\n\t\t\n\t\ta.invert();\n\t\ta.clipTo( b );\n\t\tb.clipTo( a );\n\t\tb.invert();\n\t\tb.clipTo( a );\n\t\tb.invert();\n\t\ta.build( b.allPolygons() );\n\t\ta.invert();\n\t\ta = new ThreeBSP( a );\n\t\ta.matrix = this.matrix;\n\t\treturn a;\n\t};\n\tThreeBSP.prototype.union = function( other_tree ) {\n\t\tvar a = this.tree.clone(),\n\t\t\tb = other_tree.tree.clone();\n\t\t\n\t\ta.clipTo( b );\n\t\tb.clipTo( a );\n\t\tb.invert();\n\t\tb.clipTo( a );\n\t\tb.invert();\n\t\ta.build( b.allPolygons() );\n\t\ta = new ThreeBSP( a );\n\t\ta.matrix = this.matrix;\n\t\treturn a;\n\t};\n\tThreeBSP.prototype.intersect = function( other_tree ) {\n\t\tvar a = this.tree.clone(),\n\t\t\tb = other_tree.tree.clone();\n\t\t\n\t\ta.invert();\n\t\tb.clipTo( a );\n\t\tb.invert();\n\t\ta.clipTo( b );\n\t\tb.clipTo( a );\n\t\ta.build( b.allPolygons() );\n\t\ta.invert();\n\t\ta = new ThreeBSP( a );\n\t\ta.matrix = this.matrix;\n\t\treturn a;\n\t};\n\tThreeBSP.prototype.toGeometry = function() {\n\t\tvar i, j,\n\t\t\tmatrix = new THREE.Matrix4().getInverse( this.matrix ),\n\t\t\tgeometry = new THREE.Geometry(),\n\t\t\tpolygons = this.tree.allPolygons(),\n\t\t\tpolygon_count = polygons.length,\n\t\t\tpolygon, polygon_vertice_count,\n\t\t\tvertice_dict = {},\n\t\t\tvertex_idx_a, vertex_idx_b, vertex_idx_c,\n\t\t\tvertex, face,\n\t\t\tverticeUvs;\n\t\n\t\tfor ( i = 0; i < polygon_count; i++ ) {\n\t\t\tpolygon = polygons[i];\n\t\t\tpolygon_vertice_count = polygon.vertices.length;\n\t\t\t\n\t\t\tfor ( j = 2; j < polygon_vertice_count; j++ ) {\n\t\t\t\tverticeUvs = [];\n\t\t\t\t\n\t\t\t\tvertex = polygon.vertices[0];\n\t\t\t\tverticeUvs.push( new THREE.Vector2( vertex.uv.x, vertex.uv.y ) );\n\t\t\t\tvertex = new THREE.Vector3( vertex.x, vertex.y, vertex.z );\n\t\t\t\tvertex.applyMatrix4(matrix);\n\t\t\t\t\n\t\t\t\tif ( typeof vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ] !== 'undefined' ) {\n\t\t\t\t\tvertex_idx_a = vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ];\n\t\t\t\t} else {\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\t\t\t\t\tvertex_idx_a = vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ] = geometry.vertices.length - 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvertex = polygon.vertices[j-1];\n\t\t\t\tverticeUvs.push( new THREE.Vector2( vertex.uv.x, vertex.uv.y ) );\n\t\t\t\tvertex = new THREE.Vector3( vertex.x, vertex.y, vertex.z );\n\t\t\t\tvertex.applyMatrix4(matrix);\n\t\t\t\tif ( typeof vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ] !== 'undefined' ) {\n\t\t\t\t\tvertex_idx_b = vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ];\n\t\t\t\t} else {\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\t\t\t\t\tvertex_idx_b = vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ] = geometry.vertices.length - 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvertex = polygon.vertices[j];\n\t\t\t\tverticeUvs.push( new THREE.Vector2( vertex.uv.x, vertex.uv.y ) );\n\t\t\t\tvertex = new THREE.Vector3( vertex.x, vertex.y, vertex.z );\n\t\t\t\tvertex.applyMatrix4(matrix);\n\t\t\t\tif ( typeof vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ] !== 'undefined' ) {\n\t\t\t\t\tvertex_idx_c = vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ];\n\t\t\t\t} else {\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\t\t\t\t\tvertex_idx_c = vertice_dict[ vertex.x + ',' + vertex.y + ',' + vertex.z ] = geometry.vertices.length - 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tface = new THREE.Face3(\n\t\t\t\t\tvertex_idx_a,\n\t\t\t\t\tvertex_idx_b,\n\t\t\t\t\tvertex_idx_c,\n\t\t\t\t\tnew THREE.Vector3( polygon.normal.x, polygon.normal.y, polygon.normal.z )\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tgeometry.faces.push( face );\n\t\t\t\tgeometry.faceVertexUvs[0].push( verticeUvs );\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn geometry;\n\t};\n\tThreeBSP.prototype.toMesh = function( material ) {\n\t\tvar geometry = this.toGeometry(),\n\t\t\tmesh = new THREE.Mesh( geometry, material );\n\t\t\n\t\tmesh.position.getPositionFromMatrix( this.matrix );\n\t\tmesh.rotation.setFromRotationMatrix( this.matrix );\n\t\t\n\t\treturn mesh;\n\t};\n\t\n\t\n\tThreeBSP.Polygon = function( vertices, normal, w ) {\n\t\tif ( !( vertices instanceof Array ) ) {\n\t\t\tvertices = [];\n\t\t}\n\t\t\n\t\tthis.vertices = vertices;\n\t\tif ( vertices.length > 0 ) {\n\t\t\tthis.calculateProperties();\n\t\t} else {\n\t\t\tthis.normal = this.w = undefined;\n\t\t}\n\t};\n\tThreeBSP.Polygon.prototype.calculateProperties = function() {\n\t\tvar a = this.vertices[0],\n\t\t\tb = this.vertices[1],\n\t\t\tc = this.vertices[2];\n\t\t\t\n\t\tthis.normal = b.clone().subtract( a ).cross(\n\t\t\tc.clone().subtract( a )\n\t\t).normalize();\n\t\t\n\t\tthis.w = this.normal.clone().dot( a );\n\t\t\n\t\treturn this;\n\t};\n\tThreeBSP.Polygon.prototype.clone = function() {\n\t\tvar i, vertice_count,\n\t\t\tpolygon = new ThreeBSP.Polygon;\n\t\t\n\t\tfor ( i = 0, vertice_count = this.vertices.length; i < vertice_count; i++ ) {\n\t\t\tpolygon.vertices.push( this.vertices[i].clone() );\n\t\t};\n\t\tpolygon.calculateProperties();\n\t\t\n\t\treturn polygon;\n\t};\n\t\n\tThreeBSP.Polygon.prototype.flip = function() {\n\t\tvar i, vertices = [];\n\t\t\n\t\tthis.normal.multiplyScalar( -1 );\n\t\tthis.w *= -1;\n\t\t\n\t\tfor ( i = this.vertices.length - 1; i >= 0; i-- ) {\n\t\t\tvertices.push( this.vertices[i] );\n\t\t};\n\t\tthis.vertices = vertices;\n\t\t\n\t\treturn this;\n\t};\n\tThreeBSP.Polygon.prototype.classifyVertex = function( vertex ) {  \n\t\tvar side_value = this.normal.dot( vertex ) - this.w;\n\t\t\n\t\tif ( side_value < -EPSILON ) {\n\t\t\treturn BACK;\n\t\t} else if ( side_value > EPSILON ) {\n\t\t\treturn FRONT;\n\t\t} else {\n\t\t\treturn COPLANAR;\n\t\t}\n\t};\n\tThreeBSP.Polygon.prototype.classifySide = function( polygon ) {\n\t\tvar i, vertex, classification,\n\t\t\tnum_positive = 0,\n\t\t\tnum_negative = 0,\n\t\t\tvertice_count = polygon.vertices.length;\n\t\t\n\t\tfor ( i = 0; i < vertice_count; i++ ) {\n\t\t\tvertex = polygon.vertices[i];\n\t\t\tclassification = this.classifyVertex( vertex );\n\t\t\tif ( classification === FRONT ) {\n\t\t\t\tnum_positive++;\n\t\t\t} else if ( classification === BACK ) {\n\t\t\t\tnum_negative++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( num_positive > 0 && num_negative === 0 ) {\n\t\t\treturn FRONT;\n\t\t} else if ( num_positive === 0 && num_negative > 0 ) {\n\t\t\treturn BACK;\n\t\t} else if ( num_positive === 0 && num_negative === 0 ) {\n\t\t\treturn COPLANAR;\n\t\t} else {\n\t\t\treturn SPANNING;\n\t\t}\n\t};\n\tThreeBSP.Polygon.prototype.splitPolygon = function( polygon, coplanar_front, coplanar_back, front, back ) {\n\t\tvar classification = this.classifySide( polygon );\n\t\t\n\t\tif ( classification === COPLANAR ) {\n\t\t\t\n\t\t\t( this.normal.dot( polygon.normal ) > 0 ? coplanar_front : coplanar_back ).push( polygon );\n\t\t\t\n\t\t} else if ( classification === FRONT ) {\n\t\t\t\n\t\t\tfront.push( polygon );\n\t\t\t\n\t\t} else if ( classification === BACK ) {\n\t\t\t\n\t\t\tback.push( polygon );\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar vertice_count,\n\t\t\t\ti, j, ti, tj, vi, vj,\n\t\t\t\tt, v,\n\t\t\t\tf = [],\n\t\t\t\tb = [];\n\t\t\t\n\t\t\tfor ( i = 0, vertice_count = polygon.vertices.length; i < vertice_count; i++ ) {\n\t\t\t\t\n\t\t\t\tj = (i + 1) % vertice_count;\n\t\t\t\tvi = polygon.vertices[i];\n\t\t\t\tvj = polygon.vertices[j];\n\t\t\t\tti = this.classifyVertex( vi );\n\t\t\t\ttj = this.classifyVertex( vj );\n\t\t\t\t\n\t\t\t\tif ( ti != BACK ) f.push( vi );\n\t\t\t\tif ( ti != FRONT ) b.push( vi );\n\t\t\t\tif ( (ti | tj) === SPANNING ) {\n\t\t\t\t\tt = ( this.w - this.normal.dot( vi ) ) / this.normal.dot( vj.clone().subtract( vi ) );\n\t\t\t\t\tv = vi.interpolate( vj, t );\n\t\t\t\t\tf.push( v );\n\t\t\t\t\tb.push( v );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif ( f.length >= 3 ) front.push( new ThreeBSP.Polygon( f ).calculateProperties() );\n\t\t\tif ( b.length >= 3 ) back.push( new ThreeBSP.Polygon( b ).calculateProperties() );\n\t\t}\n\t};\n\t\n\tThreeBSP.Vertex = function( x, y, z, normal, uv ) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.normal = normal || new THREE.Vector3;\n\t\tthis.uv = uv || new THREE.Vector2;\n\t};\n\tThreeBSP.Vertex.prototype.clone = function() {\n\t\treturn new ThreeBSP.Vertex( this.x, this.y, this.z, this.normal.clone(), this.uv.clone() );\n\t};\n\tThreeBSP.Vertex.prototype.add = function( vertex ) {\n\t\tthis.x += vertex.x;\n\t\tthis.y += vertex.y;\n\t\tthis.z += vertex.z;\n\t\treturn this;\n\t};\n\tThreeBSP.Vertex.prototype.subtract = function( vertex ) {\n\t\tthis.x -= vertex.x;\n\t\tthis.y -= vertex.y;\n\t\tthis.z -= vertex.z;\n\t\treturn this;\n\t};\n\tThreeBSP.Vertex.prototype.multiplyScalar = function( scalar ) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\treturn this;\n\t};\n\tThreeBSP.Vertex.prototype.cross = function( vertex ) {\n\t\tvar x = this.x,\n\t\t\ty = this.y,\n\t\t\tz = this.z;\n\n\t\tthis.x = y * vertex.z - z * vertex.y;\n\t\tthis.y = z * vertex.x - x * vertex.z;\n\t\tthis.z = x * vertex.y - y * vertex.x;\n\t\t\n\t\treturn this;\n\t};\n\tThreeBSP.Vertex.prototype.normalize = function() {\n\t\tvar length = Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\t\t\n\t\tthis.x /= length;\n\t\tthis.y /= length;\n\t\tthis.z /= length;\n\t\t\n\t\treturn this;\n\t};\n\tThreeBSP.Vertex.prototype.dot = function( vertex ) {\n\t\treturn this.x * vertex.x + this.y * vertex.y + this.z * vertex.z;\n\t};\n\tThreeBSP.Vertex.prototype.lerp = function( a, t ) {\n\t\tthis.add(\n\t\t\ta.clone().subtract( this ).multiplyScalar( t )\n\t\t);\n\t\t\n\t\tthis.normal.add(\n\t\t\ta.normal.clone().sub( this.normal ).multiplyScalar( t )\n\t\t);\n\t\t\n\t\tthis.uv.add(\n\t\t\ta.uv.clone().sub( this.uv ).multiplyScalar( t )\n\t\t);\n\t\t\n\t\treturn this;\n\t};\n\tThreeBSP.Vertex.prototype.interpolate = function( other, t ) {\n\t\treturn this.clone().lerp( other, t );\n\t};\n\tThreeBSP.Vertex.prototype.applyMatrix4 = function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[0] * x + e[4] * y + e[8]  * z + e[12];\n\t\tthis.y = e[1] * x + e[5] * y + e[9]  * z + e[13];\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n\t\treturn this;\n\n\t}\n\t\n\t\n\tThreeBSP.Node = function( polygons ) {\n\t\tvar i, polygon_count,\n\t\t\tfront = [],\n\t\t\tback = [];\n\n\t\tthis.polygons = [];\n\t\tthis.front = this.back = undefined;\n\t\t\n\t\tif ( !(polygons instanceof Array) || polygons.length === 0 ) return;\n\n\t\tthis.divider = polygons[0].clone();\n\t\t\n\t\tfor ( i = 0, polygon_count = polygons.length; i < polygon_count; i++ ) {\n\t\t\tthis.divider.splitPolygon( polygons[i], this.polygons, this.polygons, front, back );\n\t\t}   \n\t\t\n\t\tif ( front.length > 0 ) {\n\t\t\tthis.front = new ThreeBSP.Node( front );\n\t\t}\n\t\t\n\t\tif ( back.length > 0 ) {\n\t\t\tthis.back = new ThreeBSP.Node( back );\n\t\t}\n\t};\n\tThreeBSP.Node.isConvex = function( polygons ) {\n\t\tvar i, j;\n\t\tfor ( i = 0; i < polygons.length; i++ ) {\n\t\t\tfor ( j = 0; j < polygons.length; j++ ) {\n\t\t\t\tif ( i !== j && polygons[i].classifySide( polygons[j] ) !== BACK ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\tThreeBSP.Node.prototype.build = function( polygons ) {\n\t\tvar i, polygon_count,\n\t\t\tfront = [],\n\t\t\tback = [];\n\t\t\n\t\tif ( !this.divider ) {\n\t\t\tthis.divider = polygons[0].clone();\n\t\t}\n\n\t\tfor ( i = 0, polygon_count = polygons.length; i < polygon_count; i++ ) {\n\t\t\tthis.divider.splitPolygon( polygons[i], this.polygons, this.polygons, front, back );\n\t\t}   \n\t\t\n\t\tif ( front.length > 0 ) {\n\t\t\tif ( !this.front ) this.front = new ThreeBSP.Node();\n\t\t\tthis.front.build( front );\n\t\t}\n\t\t\n\t\tif ( back.length > 0 ) {\n\t\t\tif ( !this.back ) this.back = new ThreeBSP.Node();\n\t\t\tthis.back.build( back );\n\t\t}\n\t};\n\tThreeBSP.Node.prototype.allPolygons = function() {\n\t\tvar polygons = this.polygons.slice();\n\t\tif ( this.front ) polygons = polygons.concat( this.front.allPolygons() );\n\t\tif ( this.back ) polygons = polygons.concat( this.back.allPolygons() );\n\t\treturn polygons;\n\t};\n\tThreeBSP.Node.prototype.clone = function() {\n\t\tvar node = new ThreeBSP.Node();\n\t\t\n\t\tnode.divider = this.divider.clone();\n\t\tnode.polygons = this.polygons.map( function( polygon ) { return polygon.clone(); } );\n\t\tnode.front = this.front && this.front.clone();\n\t\tnode.back = this.back && this.back.clone();\n\t\t\n\t\treturn node;\n\t};\n\tThreeBSP.Node.prototype.invert = function() {\n\t\tvar i, polygon_count, temp;\n\t\t\n\t\tfor ( i = 0, polygon_count = this.polygons.length; i < polygon_count; i++ ) {\n\t\t\tthis.polygons[i].flip();\n\t\t}\n\t\t\n\t\tthis.divider.flip();\n\t\tif ( this.front ) this.front.invert();\n\t\tif ( this.back ) this.back.invert();\n\t\t\n\t\ttemp = this.front;\n\t\tthis.front = this.back;\n\t\tthis.back = temp;\n\t\t\n\t\treturn this;\n\t};\n\tThreeBSP.Node.prototype.clipPolygons = function( polygons ) {\n\t\tvar i, polygon_count,\n\t\t\tfront, back;\n\n\t\tif ( !this.divider ) return polygons.slice();\n\t\t\n\t\tfront = [], back = [];\n\t\t\n\t\tfor ( i = 0, polygon_count = polygons.length; i < polygon_count; i++ ) {\n\t\t\tthis.divider.splitPolygon( polygons[i], front, back, front, back );\n\t\t}\n\n\t\tif ( this.front ) front = this.front.clipPolygons( front );\n\t\tif ( this.back ) back = this.back.clipPolygons( back );\n\t\telse back = [];\n\n\t\treturn front.concat( back );\n\t};\n\t\n\tThreeBSP.Node.prototype.clipTo = function( node ) {\n\t\tthis.polygons = node.clipPolygons( this.polygons );\n\t\tif ( this.front ) this.front.clipTo( node );\n\t\tif ( this.back ) this.back.clipTo( node );\n\t};\n\t\n\t\n\treturn ThreeBSP;\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/ThreeCSG.js\n// module id = 89\n// module chunks = 2","_ = require 'Underscore'\nBackbone = require 'Backbone'\nUtils = require 'threenodes/utils/Utils'\nNode = require 'threenodes/nodes/models/Node'\nObject3D = require 'threenodes/nodes/models/components/Three/Object3D'\nNodeMaterialBase = require 'threenodes/nodes/models/components/Three/NodeMaterialBase'\nrequire './Three'\nrequire './Materials'\nrequire 'libs/Tween'\nrequire 'libs/Sparks'\n\nclass ParticleSystem extends Object3D\n  @node_name = 'ParticleSystem'\n  @group_name = 'Particle'\n\n  initialize: () =>\n    super\n    @ob = new THREE.ParticleSystem(new THREE.CubeGeometry( 200, 200, 200 ), new THREE.ParticleBasicMaterial())\n    @ob.dynamic = true\n    @geometry_cache = false\n    @material_cache = false\n    @compute()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"geometry\": {type: \"Any\", val: new THREE.CubeGeometry( 200, 200, 200 )}\n        \"material\": {type: \"Any\", val: new THREE.ParticleBasicMaterial()}\n        \"sortParticles\": false\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    super\n    delete @geometry_cache\n    delete @material_cache\n\n  rebuild_geometry: =>\n    field = @fields.getField('geometry')\n    if field.connections.length > 0\n      geom = field.connections[0].from_field.node\n      geom.cached = []\n      geom.compute()\n    else\n      @fields.getField('geometry').setValue(new THREE.CubeGeometry( 200, 200, 200 ))\n\n  compute: =>\n    needs_rebuild = false\n\n    if @material_cache != @fields.getField('material').getValue().id\n      # let's trigger a geometry rebuild so we have the appropriate buffers set\n      @rebuild_geometry()\n\n    if @geometry_cache != @fields.getField('geometry').getValue().id || @material_cache != @fields.getField('material').getValue().id || needs_rebuild\n      @ob = new THREE.ParticleSystem(@fields.getField('geometry').getValue(), @fields.getField('material').getValue())\n      @geometry_cache = @fields.getField('geometry').getValue().id\n      @material_cache = @fields.getField('material').getValue().id\n\n    @applyFieldsToVal(@fields.inputs, @ob, ['children', 'geometry', 'material'])\n\n    if needs_rebuild == true\n      @trigger(\"RebuildAllShaders\")\n\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('ParticleSystem', ParticleSystem)\n\nclass ParticleBasicMaterial extends NodeMaterialBase\n  @node_name = 'ParticleBasicMaterial'\n  @group_name = 'Materials'\n\n  initialize: (options) =>\n    super\n    @ob = []\n    @material_class = THREE.ParticleBasicMaterial\n    @vars_rebuild_shader_on_change = [\"transparent\", \"depthTest\", \"map\"]\n    @material_cache = @createCacheObject(@vars_rebuild_shader_on_change)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"color\": {type: \"Color\", val: new THREE.Color(0xff0000)}\n        \"map\": {type: \"Any\", val: false}\n        \"size\": 1\n        \"sizeAttenuation\": true\n        \"vertexColors\": false\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\nThreeNodes.Core.addNodeType('ParticleBasicMaterial', ParticleBasicMaterial)\n\nclass SparksEmitter extends Node\n  @node_name = 'Emitter'\n  @group_name = 'Particle.sparks'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @geom = new THREE.Geometry()\n    @target_initializer = new SPARKS.Target( null, @setTargetParticle )\n    @pool = @fields.getField(\"pool\").getValue()\n    @ob = new SPARKS.Emitter(@fields.getField(\"counter\").getValue())\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"counter\": {type: \"Any\", val: new SPARKS.SteadyCounter(50)}\n        \"pool\": {type: \"Any\", val: false}\n        \"initializers\": {type: \"Array\", val: []}\n        \"actions\": {type: \"Array\", val: []}\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  setTargetParticle: (p) =>\n    if @pool && @pool.pool\n      return @pool.pool.get()\n\n  compute: =>\n    if @fields.getField(\"pool\").getValue() != false\n      if @pool != @fields.getField(\"pool\").getValue()\n        @ob.removeCallback \"created\"\n        @ob.removeCallback \"dead\"\n        @ob.stop()\n        @ob = new SPARKS.Emitter(@fields.getField(\"counter\").getValue())\n        @geom = new THREE.Geometry()\n\n        @pool = @fields.getField(\"pool\").getValue()\n        @pool.init_pool(@geom)\n        @ob.addCallback \"created\", @pool.on_particle_created\n        #@ob.addCallback \"updated\", @pool.on_particle_updated\n        @ob.addCallback \"dead\", @pool.on_particle_dead\n        console.log \"pool particle setup...\"\n\n    # works on a copy of the incoming array\n    initializers = @fields.getField(\"initializers\").getValue().slice(0)\n    initializers.push(@target_initializer)\n\n    @ob._initializers = initializers\n    @ob._actions = @fields.getField(\"actions\").getValue()\n    @ob._counter = @fields.getField(\"counter\").getValue()\n    if @pool != false && @ob.isRunning() == false\n      @ob.start()\n\n    @fields.setField(\"out\", @geom)\n\n  remove: =>\n    super\n    if @ob\n      @ob.removeCallback \"created\"\n      @ob.removeCallback \"dead\"\n      @ob.stop()\n    delete @ob\n    delete @target_initializer\n    delete @geom\n    delete @pool\n\nThreeNodes.Core.addNodeType('SparksEmitter', SparksEmitter)\n\nclass SparksAge extends Node\n  @node_name = 'Age'\n  @group_name = 'Particle.sparks.actions'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.Age(TWEEN.Easing.Linear.EaseNone)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"easing\": {type: \"Any\", val: TWEEN.Easing.Linear.EaseNone}\n      outputs:\n        \"action\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob._easing = @fields.getField(\"easing\").get(\"value\")\n    @fields.setField(\"action\", @ob)\n\nThreeNodes.Core.addNodeType('SparksAge', SparksAge)\n\nclass SparksMove extends Node\n  @node_name = 'Move'\n  @group_name = 'Particle.sparks.actions'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.Move()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      outputs:\n        \"action\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @fields.setField(\"action\", @ob)\n\nThreeNodes.Core.addNodeType('SparksMove', SparksMove)\n\nclass SparksAccelerate extends Node\n  @node_name = 'Accelerate'\n  @group_name = 'Particle.sparks.actions'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.Accelerate(new THREE.Vector3(0, 1, 0))\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"vector\": {type: \"Vector3\", val: new THREE.Vector3(0, 1, 0)}\n      outputs:\n        \"action\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.acceleration = @fields.getField(\"vector\").getValue()\n    @fields.setField(\"action\", @ob)\n\nThreeNodes.Core.addNodeType('SparksAccelerate', SparksAccelerate)\n\nclass SparksAccelerateFactor extends Node\n  @node_name = 'AccelerateFactor'\n  @group_name = 'Particle.sparks.actions'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.AccelerateFactor(2.0)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"factor\": 2.0\n      outputs:\n        \"action\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.factor = @fields.getField(\"factor\").getValue()\n    @fields.setField(\"action\", @ob)\n\nThreeNodes.Core.addNodeType('SparksAccelerateFactor', SparksAccelerateFactor)\n\nclass SparksAccelerateVelocity extends Node\n  @node_name = 'AccelerateVelocity'\n  @group_name = 'Particle.sparks.actions'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.AccelerateVelocity(2.0)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"factor\": 2.0\n      outputs:\n        \"action\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.factor = @fields.getField(\"factor\").getValue()\n    @fields.setField(\"action\", @ob)\n\nThreeNodes.Core.addNodeType('SparksAccelerateVelocity', SparksAccelerateVelocity)\n\nclass SparksRandomDrift extends Node\n  @node_name = 'RandomDrift'\n  @group_name = 'Particle.sparks.actions'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.RandomDrift(new THREE.Vector3(0, 1, 0))\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"vector\": {type: \"Vector3\", val: new THREE.Vector3(0, 1, 0)}\n      outputs:\n        \"action\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.drift = @fields.getField(\"vector\").getValue()\n    @fields.setField(\"action\", @ob)\n\nThreeNodes.Core.addNodeType('SparksRandomDrift', SparksRandomDrift)\n\nclass SparksLifetime extends Node\n  @node_name = 'Lifetime'\n  @group_name = 'Particle.sparks.initializers'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.Lifetime(4, 7)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"min\": 4\n        \"max\": 7\n      outputs:\n        \"initializer\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob._min = @fields.getField(\"min\").getValue()\n    @ob._min = @fields.getField(\"max\").getValue()\n    @fields.setField(\"initializer\", @ob)\n\nThreeNodes.Core.addNodeType('SparksLifetime', SparksLifetime)\n\nclass SparksPosition extends Node\n  @node_name = 'Position'\n  @group_name = 'Particle.sparks.initializers'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.Position(new SPARKS.PointZone( new THREE.Vector3(0,0,0)))\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"zone\": {type: \"Any\", val: new SPARKS.PointZone( new THREE.Vector3(0,0,0))}\n      outputs:\n        \"initializer\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.zone = @fields.getField(\"zone\").getValue()\n    @fields.setField(\"initializer\", @ob)\n\nThreeNodes.Core.addNodeType('SparksPosition', SparksPosition)\n\nclass SparksPointZone extends Node\n  @node_name = 'PointZone'\n  @group_name = 'Particle.sparks.zone'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.PointZone(new THREE.Vector3())\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"pos\": {type: \"Vector3\", val: new THREE.Vector3()}\n      outputs:\n        \"zone\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.pos = @fields.getField(\"pos\").getValue()\n    @fields.setField(\"zone\", @ob)\n\nThreeNodes.Core.addNodeType('SparksPointZone', SparksPointZone)\n\nclass SparksLineZone extends Node\n  @node_name = 'LineZone'\n  @group_name = 'Particle.sparks.zone'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.LineZone(new THREE.Vector3(), new THREE.Vector3(100, 0, 0))\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"start\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"end\": {type: \"Vector3\", val: new THREE.Vector3(100, 0, 0)}\n      outputs:\n        \"zone\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    if this.ob.start != this.fields.get(\"start\").getValue() || this.ob.end != this.fields.get(\"end\").getValue()\n      @ob.start = @fields.getField(\"start\").getValue()\n      @ob.end = @fields.getField(\"end\").getValue()\n      @ob._length = @ob.end.clone().subSelf( @ob.start )\n    @fields.setField(\"zone\", @ob)\n\nThreeNodes.Core.addNodeType('SparksLineZone', SparksLineZone)\n\nclass SparksCubeZone extends Node\n  @node_name = 'CubeZone'\n  @group_name = 'Particle.sparks.zone'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.CubeZone(new THREE.Vector3(), 0, 0, 0)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"position\": {type: \"Vector3\", val: new THREE.Vector3()}\n        \"x\": 0\n        \"y\": 0\n        \"z\": 0\n      outputs:\n        \"zone\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.position = @fields.getField(\"position\").getValue()\n    @ob.x = @fields.getField(\"x\").getValue()\n    @ob.y = @fields.getField(\"y\").getValue()\n    @ob.z = @fields.getField(\"z\").getValue()\n    @fields.setField(\"zone\", @ob)\n\nThreeNodes.Core.addNodeType('SparksCubeZone', SparksCubeZone)\n\nclass SparksSteadyCounter extends Node\n  @node_name = 'SteadyCounter'\n  @group_name = 'Particle.sparks'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new SPARKS.SteadyCounter(100)\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"rate\": 100\n      outputs:\n        \"counter\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    super\n\n  compute: =>\n    @ob.pos = @fields.getField(\"rate\").getValue()\n    @fields.setField(\"counter\", @ob)\n\nThreeNodes.Core.addNodeType('SparksSteadyCounter', SparksSteadyCounter)\n\nclass ParticlePool extends Node\n  @node_name = 'ParticlePool'\n  @group_name = 'Particle.sparks'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @geom = false\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"maxParticles\": 10000\n      outputs:\n        \"pool\": {type: \"Any\", val: this}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @pool\n    delete @geom\n    super\n\n  init_pool: (geom) =>\n    @geom = geom\n    @pool =\n      pools: []\n      get: () ->\n        if @pools.length > 0\n          return @pools.pop()\n        return null\n      add: (v) ->\n        @pools.push(v)\n\n    new_pos = () ->\n      new THREE.Vector3(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\n\n    for i in [0..@fields.getField(\"maxParticles\").getValue() - 1]\n      pos = new_pos()\n      geom.vertices.push(pos)\n      @pool.add(pos)\n\n  on_particle_created: (particle) =>\n    if @geom == false\n      return false\n    target = particle.target\n\n    if target\n      particle.target.position = particle.position\n\n  on_particle_updated: (particle) =>\n    return true\n\n  on_particle_dead: (particle) =>\n    if @geom == false\n      return false\n    target = particle.target\n    if target\n      particle.target.position.set(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\n      @pool.add(particle.target)\n\n  compute: () =>\n    if @geom != false\n      @geom.verticesNeedUpdate = true\n    @fields.setField(\"pool\", this)\n\nThreeNodes.Core.addNodeType('ParticlePool', ParticlePool)\n\nclass RandomCloudGeometry extends Node\n  @node_name = 'RandomCloudGeometry'\n  @group_name = 'Particle'\n\n  initialize: (options) =>\n    super\n    @auto_evaluate = true\n    @ob = new THREE.Geometry()\n    @cache = @get_cache_array()\n    @generate()\n\n  getFields: =>\n    base_fields = super\n    fields =\n      inputs:\n        \"nbrParticles\": 20000\n        \"radius\": 2000\n        \"rndVelocity\": {type: \"Vector3\", val: new THREE.Vector3(1, 1, 1)}\n        \"linearVelocity\": {type: \"Vector3\", val: new THREE.Vector3(1, 1, 1)}\n      outputs:\n        \"out\": {type: \"Any\", val: @ob}\n    return $.extend(true, base_fields, fields)\n\n  remove: () =>\n    delete @ob\n    delete @cache\n    super\n\n  get_cache_array: =>\n    [@fields.getField(\"radius\").getValue(), @fields.getField(\"nbrParticles\").getValue(), @fields.getField(\"linearVelocity\").getValue()]\n\n  limit_position: (pos) =>\n    radius = @fields.getField(\"radius\").getValue()\n    margin = 5\n    if pos < radius * -1\n      pos = radius - margin\n    else if pos > radius\n      pos = radius * -1 + margin\n    pos\n\n  move_particles: =>\n    rndVelocity = @fields.getField(\"rndVelocity\").getValue()\n    for key,p of @ob.vertices\n      p.x += Math.random() * rndVelocity.x - rndVelocity.x * 0.5 + p.velocity.x\n      p.y += Math.random() * rndVelocity.y - rndVelocity.y * 0.5 + p.velocity.y\n      p.z += Math.random() * rndVelocity.z - rndVelocity.z * 0.5 + p.velocity.z\n      p.x = @limit_position(p.x)\n      p.y = @limit_position(p.y)\n      p.z = @limit_position(p.z)\n    @ob.verticesNeedUpdate = true\n    true\n\n  generate: =>\n    @ob = new THREE.Geometry()\n    rad = @fields.getField(\"radius\").getValue()\n    total = @fields.getField(\"nbrParticles\").getValue()\n    linearVelocity = @fields.getField(\"linearVelocity\").getValue()\n    for i in [0..total]\n      v = new THREE.Vector3( Math.random() * rad * 2 - rad, Math.random() * rad * 2 - rad, Math.random() * rad * 2 - rad )\n      v.velocity = new THREE.Vector3( Math.random() * linearVelocity.x - linearVelocity.x * 0.5, Math.random() * linearVelocity.y - linearVelocity.y * 0.5, Math.random() * linearVelocity.z - linearVelocity.z * 0.5 )\n      @ob.vertices.push( v )\n    true\n\n  compute: =>\n    new_cache = @get_cache_array()\n    if Utils.flatArraysAreEquals(new_cache, @cache) == false\n      @generate()\n\n    @move_particles()\n    @cache = new_cache\n    @fields.setField(\"out\", @ob)\n\nThreeNodes.Core.addNodeType('RandomCloudGeometry', RandomCloudGeometry)\n\n\n\n// WEBPACK FOOTER //\n// ./threenodes/nodes/models/components/Particle.coffee","// tween.js r5 - http://github.com/sole/tween.js\nvar TWEEN=TWEEN||function(){var a,e,c=60,b=false,h=[],i;return{setFPS:function(f){c=f||60},start:function(f){arguments.length!=0&&this.setFPS(f);e=setInterval(this.update,1E3/c)},stop:function(){clearInterval(e)},setAutostart:function(f){(b=f)&&!e&&this.start()},add:function(f){h.push(f);b&&!e&&this.start()},getAll:function(){return h},removeAll:function(){h=[]},remove:function(f){a=h.indexOf(f);a!==-1&&h.splice(a,1)},update:function(f){a=0;i=h.length;for(f=f||Date.now();a<i;)if(h[a].update(f))a++;\nelse{h.splice(a,1);i--}i==0&&b==true&&this.stop()}}}();\nTWEEN.Tween=function(a){var e={},c={},b={},h=1E3,i=0,f=null,n=TWEEN.Easing.Linear.EaseNone,k=null,l=null,m=null;this.to=function(d,g){if(g!==null)h=g;for(var j in d)if(a[j]!==null)b[j]=d[j];return this};this.start=function(d){TWEEN.add(this);f=d?d+i:Date.now()+i;for(var g in b)if(a[g]!==null){e[g]=a[g];c[g]=b[g]-a[g]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(d){i=d;return this};this.easing=function(d){n=d;return this};this.chain=function(d){k=d};this.onUpdate=\nfunction(d){l=d;return this};this.onComplete=function(d){m=d;return this};this.update=function(d){var g,j;if(d<f)return true;d=(d-f)/h;d=d>1?1:d;j=n(d);for(g in c)a[g]=e[g]+c[g]*j;l!==null&&l.call(a,j);if(d==1){m!==null&&m.call(a);k!==null&&k.start();return false}return true}};TWEEN.Easing={Linear:{},Quadratic:{},Cubic:{},Quartic:{},Quintic:{},Sinusoidal:{},Exponential:{},Circular:{},Elastic:{},Back:{},Bounce:{}};TWEEN.Easing.Linear.EaseNone=function(a){return a};\nTWEEN.Easing.Quadratic.EaseIn=function(a){return a*a};TWEEN.Easing.Quadratic.EaseOut=function(a){return-a*(a-2)};TWEEN.Easing.Quadratic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a;return-0.5*(--a*(a-2)-1)};TWEEN.Easing.Cubic.EaseIn=function(a){return a*a*a};TWEEN.Easing.Cubic.EaseOut=function(a){return--a*a*a+1};TWEEN.Easing.Cubic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*a;return 0.5*((a-=2)*a*a+2)};TWEEN.Easing.Quartic.EaseIn=function(a){return a*a*a*a};\nTWEEN.Easing.Quartic.EaseOut=function(a){return-(--a*a*a*a-1)};TWEEN.Easing.Quartic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*a*a;return-0.5*((a-=2)*a*a*a-2)};TWEEN.Easing.Quintic.EaseIn=function(a){return a*a*a*a*a};TWEEN.Easing.Quintic.EaseOut=function(a){return(a-=1)*a*a*a*a+1};TWEEN.Easing.Quintic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*a*a*a;return 0.5*((a-=2)*a*a*a*a+2)};TWEEN.Easing.Sinusoidal.EaseIn=function(a){return-Math.cos(a*Math.PI/2)+1};\nTWEEN.Easing.Sinusoidal.EaseOut=function(a){return Math.sin(a*Math.PI/2)};TWEEN.Easing.Sinusoidal.EaseInOut=function(a){return-0.5*(Math.cos(Math.PI*a)-1)};TWEEN.Easing.Exponential.EaseIn=function(a){return a==0?0:Math.pow(2,10*(a-1))};TWEEN.Easing.Exponential.EaseOut=function(a){return a==1?1:-Math.pow(2,-10*a)+1};TWEEN.Easing.Exponential.EaseInOut=function(a){if(a==0)return 0;if(a==1)return 1;if((a*=2)<1)return 0.5*Math.pow(2,10*(a-1));return 0.5*(-Math.pow(2,-10*(a-1))+2)};\nTWEEN.Easing.Circular.EaseIn=function(a){return-(Math.sqrt(1-a*a)-1)};TWEEN.Easing.Circular.EaseOut=function(a){return Math.sqrt(1- --a*a)};TWEEN.Easing.Circular.EaseInOut=function(a){if((a/=0.5)<1)return-0.5*(Math.sqrt(1-a*a)-1);return 0.5*(Math.sqrt(1-(a-=2)*a)+1)};TWEEN.Easing.Elastic.EaseIn=function(a){var e,c=0.1,b=0.4;if(a==0)return 0;if(a==1)return 1;b||(b=0.3);if(!c||c<1){c=1;e=b/4}else e=b/(2*Math.PI)*Math.asin(1/c);return-(c*Math.pow(2,10*(a-=1))*Math.sin((a-e)*2*Math.PI/b))};\nTWEEN.Easing.Elastic.EaseOut=function(a){var e,c=0.1,b=0.4;if(a==0)return 0;if(a==1)return 1;b||(b=0.3);if(!c||c<1){c=1;e=b/4}else e=b/(2*Math.PI)*Math.asin(1/c);return c*Math.pow(2,-10*a)*Math.sin((a-e)*2*Math.PI/b)+1};\nTWEEN.Easing.Elastic.EaseInOut=function(a){var e,c=0.1,b=0.4;if(a==0)return 0;if(a==1)return 1;b||(b=0.3);if(!c||c<1){c=1;e=b/4}else e=b/(2*Math.PI)*Math.asin(1/c);if((a*=2)<1)return-0.5*c*Math.pow(2,10*(a-=1))*Math.sin((a-e)*2*Math.PI/b);return c*Math.pow(2,-10*(a-=1))*Math.sin((a-e)*2*Math.PI/b)*0.5+1};TWEEN.Easing.Back.EaseIn=function(a){return a*a*(2.70158*a-1.70158)};TWEEN.Easing.Back.EaseOut=function(a){return(a-=1)*a*(2.70158*a+1.70158)+1};\nTWEEN.Easing.Back.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*(3.5949095*a-2.5949095);return 0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)};TWEEN.Easing.Bounce.EaseIn=function(a){return 1-TWEEN.Easing.Bounce.EaseOut(1-a)};TWEEN.Easing.Bounce.EaseOut=function(a){return(a/=1)<1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+0.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+0.9375:7.5625*(a-=2.625/2.75)*a+0.984375};\nTWEEN.Easing.Bounce.EaseInOut=function(a){if(a<0.5)return TWEEN.Easing.Bounce.EaseIn(a*2)*0.5;return TWEEN.Easing.Bounce.EaseOut(a*2-1)*0.5+0.5};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/Tween.js\n// module id = 91\n// module chunks = 2","/*\n * @author zz85 (http://github.com/zz85 http://www.lab4games.net/zz85/blog)\n *\n * a simple to use javascript 3d particles system inspired by FliNT and Stardust\n * created with TWEEN.js and THREE.js\n *\n * for feature requests or bugs, please visit https://github.com/zz85/sparks.js\n *\n * licensed under the MIT license \n */\n\nvar SPARKS = {};\n\n/********************************\n* Emitter Class\n*\n*   Creates and Manages Particles\n*********************************/\n\n\nSPARKS.Engine = {\n\t// Combined Singleton Engine;\n\t_TIMESTEP: 15,\n\t_timer: null,\n\t_lastTime: null,\n\t_timerStep: 10,\n\t_velocityVerlet: false,\n\t_emitters: [],\n\t_isRunning: false,\n\t\n\tadd: function(emitter) {\n\t\tthis._emitters.push(emitter);\n\t},\n\t// run its built in timer / stepping\n\tstart: function() {\n\t\tthis._lastTime = Date.now();\n\t\tthis._timer = setTimeout(this.step, this._timerStep, this);\n\t\t\n\t\tfor (var i=0,il=this._emitters.length;i<il;i++) {\n\t\t\tthis._emitters[i]._isRunning = true;\n\t\t}\n\t\t\n\t\tthis._isRunning = true;\n\t},\n\t\n\tstop: function() {\n\t\tthis._isRunning = false;\n\t\tfor (var i=0,il=this._emitters.length;i<il;i++) {\n\t\t\tthis._emitters[i]._isRunning = false;\n\t\t}\n\t\tclearTimeout(this._timer);\n\t},\n\t\n\tisRunning: function() {\n\t\treturn this._isRunning;\n\t},\n\t\n\t// Step gets called upon by the engine\n\t// but attempts to call update() on a regular basics\n\tstep: function(me) {\n\t\t\n\t\tvar time = Date.now();\n\t\tvar elapsed = time - me._lastTime;\n\t   \t\n\t\tif (!this._velocityVerlet) {\n\t\t\t// if elapsed is way higher than time step, (usually after switching tabs, or excution cached in ff)\n\t\t\t// we will drop cycles. perhaps set to a limit of 10 or something?\n\t\t\tvar maxBlock = me._TIMESTEP * 20;\n\t\t\t\n\t\t\tif (elapsed >= maxBlock) {\n\t\t\t\t//console.log('warning: sparks.js is fast fowarding engine, skipping steps', elapsed / emitter._TIMESTEP);\n\t\t\t\t//emitter.update( (elapsed - maxBlock) / 1000);\n\t\t\t\telapsed = maxBlock;\n\t\t\t}\n\t\t\n\t\t\twhile(elapsed >= me._TIMESTEP) {\n\t\t\t\tme.update(me._TIMESTEP / 1000);\n\t\t\t\telapsed -= me._TIMESTEP;\n\t\t\t}\n\t\t\tme._lastTime = time - elapsed;\n\t\t\t\n\t\t} else {\n\t\t\tme.update(elapsed/1000);\n\t\t\tme._lastTime = time;\n\t\t}\n\t\t\n\t\t\n\t\tsetTimeout(me.step, me._timerStep, me);\n\t\t\n\t},\n\t\n\tupdate: function(time) {\n\t\tfor (var i=0,il=this._emitters.length;i<il;i++) {\n\t\t\tthis._emitters[i].update(time);\n\t\t}\n\t}\n\t\n};\n\nSPARKS.Emitter = function (counter) {\n    \n    this._counter = counter ? counter : new SPARKS.SteadyCounter(10); // provides number of particles to produce\n    \n    this._particles = [];\n    \n    \n    this._initializers = []; // use for creation of particles\n    this._actions = [];     // uses action to update particles\n    this._activities = [];  //  not supported yet\n        \n    this._handlers = [];\n    \n    this.callbacks = {};\n};\n\n\nSPARKS.Emitter.prototype = {\n\t\n\t_TIMESTEP: 15,\n\t_timer: null,\n\t_lastTime: null,\n\t_timerStep: 10,\n\t_velocityVerlet: false,\n\t_isRunning: false,\n\t\n\t// run its built in timer / stepping\n\tstart: function() {\n\t\tthis._lastTime = Date.now();\n\t\tthis._timer = setTimeout(this.step, this._timerStep, this);\n\t\tthis._isRunning = true;\n\t},\n\t\n\tstop: function() {\n\t\tthis._isRunning = false;\n\t\tclearTimeout(this._timer);\n\t},\n\t\n\tisRunning: function() {\n\t\treturn this._isRunning;\n\t},\n\t\n\t// Step gets called upon by the engine\n\t// but attempts to call update() on a regular basics\n\t// This method is also described in http://gameclosure.com/2011/04/11/deterministic-delta-tee-in-js-games/\n\tstep: function(emitter) {\n\t\t\n\t\tvar time = Date.now();\n\t\tvar elapsed = time - emitter._lastTime;\n\t   \t\n\t\tif (!this._velocityVerlet) {\n\t\t\t// if elapsed is way higher than time step, (usually after switching tabs, or excution cached in ff)\n\t\t\t// we will drop cycles. perhaps set to a limit of 10 or something?\n\t\t\tvar maxBlock = emitter._TIMESTEP * 20;\n\t\t\t\n\t\t\tif (elapsed >= maxBlock) {\n\t\t\t\t//console.log('warning: sparks.js is fast fowarding engine, skipping steps', elapsed / emitter._TIMESTEP);\n\t\t\t\t//emitter.update( (elapsed - maxBlock) / 1000);\n\t\t\t\telapsed = maxBlock;\n\t\t\t}\n\t\t\n\t\t\twhile(elapsed >= emitter._TIMESTEP) {\n\t\t\t\temitter.update(emitter._TIMESTEP / 1000);\n\t\t\t\telapsed -= emitter._TIMESTEP;\n\t\t\t}\n\t\t\temitter._lastTime = time - elapsed;\n\t\t\t\n\t\t} else {\n\t\t\temitter.update(elapsed/1000);\n\t\t\temitter._lastTime = time;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tif (emitter._isRunning)\n\t\tsetTimeout(emitter.step, emitter._timerStep, emitter);\n\t\t\n\t},\n\n\n\t// Update particle engine in seconds, not milliseconds\n    update: function(time) {\n\t\t\n        var len = this._counter.updateEmitter( this, time );\n        \n        // Create particles\n        for( i = 0; i < len; i++ ) {\n            this.createParticle();\n        }\n        \n        // Update activities\n        len = this._activities.length;\n        for ( i = 0; i < len; i++ )\n        {\n            this._activities[i].update( this, time );\n        }\n        \n        \n        len = this._actions.length;\n        var action;\n        var len2 = this._particles.length;\n        \n        for( j = 0; j < len; j++ )\n        {\n            action = this._actions[j];\n            for ( i = 0; i < len2; ++i )\n            {\n                particle = this._particles[i];\n                action.update( this, particle, time );\n            }\n        }\n        \n        \n        // remove dead particles\n        for ( i = len2; i--; )\n        {\n            particle = this._particles[i];\n            if ( particle.isDead )\n            {\n                //particle = \n\t\t\t\tthis._particles.splice( i, 1 );\n                this.dispatchEvent(\"dead\", particle);\n\t\t\t\tSPARKS.VectorPool.release(particle.position); //\n\t\t\t\tSPARKS.VectorPool.release(particle.velocity);\n                \n            } else {\n                this.dispatchEvent(\"updated\", particle);\n            }\n        }\n        \n\t\tthis.dispatchEvent(\"loopUpdated\");\n\t\t\n    },\n    \n    createParticle: function() {\n        var particle = new SPARKS.Particle();\n        // In future, use a Particle Factory\n        var len = this._initializers.length, i;\n\n        for ( i = 0; i < len; i++ ) {\n            this._initializers[i].initialize( this, particle );\n        }\n        \n        this._particles.push( particle );\n        \n        this.dispatchEvent(\"created\", particle); // ParticleCreated\n        \n        return particle;\n    },\n    \n    addInitializer: function (initializer) {\n        this._initializers.push(initializer);\n    },\n    \n    addAction: function (action) {\n        this._actions.push(action);\n    },\n\n    removeInitializer: function (initializer) {\n\t\tvar index = this._initializers.indexOf(initializer);\n\t\tif (index > -1) {\n\t\t\tthis._initializers.splice( index, 1 );\n\t\t}\n    },\n\n    removeAction: function (action) {\n\t\tvar index = this._actions.indexOf(action);\n\t\tif (index > -1) {\n\t\t\tthis._actions.splice( index, 1 );\n\t\t}\n\t\t//console.log('removeAction', index, this._actions);\n    },\n    \n    addCallback: function(name, callback) {\n        this.callbacks[name] = callback;\n    },\n    \n    removeCallback: function(name) {\n        delete this.callbacks[name];\n    },\n    \n    dispatchEvent: function(name, args) {\n        var callback = this.callbacks[name];\n        if (callback) {\n            callback(args);\n        }\n    \n    }\n    \n\n};\n\n\n/*\n * Constant Names for\n * Events called by emitter.dispatchEvent()\n * \n */\nSPARKS.EVENT_PARTICLE_CREATED = \"created\"\nSPARKS.EVENT_PARTICLE_UPDATED = \"updated\"\nSPARKS.EVENT_PARTICLE_DEAD = \"dead\";\nSPARKS.EVENT_LOOP_UPDATED = \"loopUpdated\";\n\n\n\n/*\n * Steady Counter attempts to produces a particle rate steadily\n *\n */\n\n// Number of particles per seconds\nSPARKS.SteadyCounter = function(rate) {\n    this.rate = rate;\n    \n\t// we use a shortfall counter to make up for slow emitters \n\tthis.leftover = 0;\n\t\n};\n\nSPARKS.SteadyCounter.prototype.updateEmitter = function(emitter, time) {\n\n\tvar targetRelease = time * this.rate + this.leftover;\n\tvar actualRelease = Math.floor(targetRelease);\n\t\n\tthis.leftover = targetRelease - actualRelease;\n\t\n\treturn actualRelease;\n};\n\n\n/*\n * Shot Counter produces specified particles \n * on a single impluse or burst\n */\n\nSPARKS.ShotCounter = function(particles) {\n\tthis.particles = particles;\n\tthis.used = false;\n};\n\nSPARKS.ShotCounter.prototype.updateEmitter = function(emitter, time) {\n\n\tif (this.used) {\n\t\treturn 0;\n\t} else {\n\t\tthis.used = true;\n\t}\n\t\n\treturn this.particles;\n};\n\n\n/********************************\n* Particle Class\n*\n*   Represents a single particle\n*********************************/\nSPARKS.Particle = function() {\n\n    /**\n     * The lifetime of the particle, in seconds.\n     */\n    this.lifetime = 0;\n    \n    /**\n     * The age of the particle, in seconds.\n     */\n    this.age = 0;\n    \n    /**\n     * The energy of the particle.\n     */\n    this.energy = 1;\n    \n    /**\n     * Whether the particle is dead and should be removed from the stage.\n     */\n    this.isDead = false;\n    \n    this.target = null; // tag\n    \n    /**\n     * For 3D\n     */\n     \n     this.position = SPARKS.VectorPool.get().set(0,0,0); //new THREE.Vector3( 0, 0, 0 );\n     this.velocity = SPARKS.VectorPool.get().set(0,0,0); //new THREE.Vector3( 0, 0, 0 );\n\tthis._oldvelocity = SPARKS.VectorPool.get().set(0,0,0);\n     // rotation vec3\n     // angVelocity vec3\n     // faceAxis vec3\n    \n};\n\n\n/********************************\n* Action Classes\n*\n*   An abstract class which have\n*   update function\n*********************************/\nSPARKS.Action = function() {\n    this._priority = 0;\n};\n\n\nSPARKS.Age = function(easing) {\n    this._easing = (easing == null) ? TWEEN.Easing.Linear.EaseNone : easing;\n};\n\nSPARKS.Age.prototype.update = function (emitter, particle, time) {\n    particle.age += time;\n    if( particle.age >= particle.lifetime )\n    {\n        particle.energy = 0;\n        particle.isDead = true;\n    }\n    else\n    {\n        var t = this._easing(particle.age / particle.lifetime);\n        particle.energy = -1 * t + 1;\n    }\n};\n\n/*\n// Mark particle as dead when particle's < 0\n\nSPARKS.Death = function(easing) {\n    this._easing = (easing == null) ? TWEEN.Linear.EaseNone : easing;\n};\n\nSPARKS.Death.prototype.update = function (emitter, particle, time) {\n    if (particle.life <= 0) {\n        particle.isDead = true;\n    }\n};\n*/\n\t\t\t\n\nSPARKS.Move = function() {\n    \n};\n\nSPARKS.Move.prototype.update = function(emitter, particle, time) {\n    // attempt verlet velocity updating.\n    var p = particle.position;\n\tvar v = particle.velocity;\n    var old = particle._oldvelocity;\n\t\n\tif (this._velocityVerlet) {\t\n\t\tp.x += (v.x + old.x) * 0.5 * time;\n\t\tp.y += (v.y + old.y) * 0.5 * time;\n\t\tp.z += (v.z + old.z) * 0.5 * time;\n\t} else {\n\t\tp.x += v.x * time;\n\t\tp.y += v.y * time;\n\t\tp.z += v.z * time;\n\t}\n\n    //  OldVel = Vel;\n    // Vel = Vel + Accel * dt;\n    // Pos = Pos + (vel + Vel + Accel * dt) * 0.5 * dt;\n\t\n\n\n};\n\n/* Marks particles found in specified zone dead */\nSPARKS.DeathZone = function(zone) {\n    this.zone = zone;\n};\n\nSPARKS.DeathZone.prototype.update = function(emitter, particle, time) {\n    \n    if (this.zone.contains(particle.position)) {\n\t\tparticle.isDead = true;\n\t}\n\n};\n\n/*\n * SPARKS.ActionZone applies an action when particle is found in zone\n */\nSPARKS.ActionZone = function(action, zone) {\n\tthis.action = action;\n    this.zone = zone;\n};\n\nSPARKS.ActionZone.prototype.update = function(emitter, particle, time) {\n\n    if (this.zone.contains(particle.position)) {\n\t\tthis.action.update( emitter, particle, time );\n\t}\n\n};\n\n/*\n * Accelerate action affects velocity in specified 3d direction \n */\nSPARKS.Accelerate = function(x,y,z) {\n\t\n\tif (x instanceof THREE.Vector3) {\n\t\tthis.acceleration = x;\n\t\treturn;\n\t}\n\n    this.acceleration = new THREE.Vector3(x,y,z);\n    \n};\n\nSPARKS.Accelerate.prototype.update = function(emitter, particle, time) {\n    var acc = this.acceleration;\n    \n    var v = particle.velocity;\n    \n\tparticle._oldvelocity.set(v.x, v.y, v.z);\n\t\n    v.x += acc.x * time;\n    v.y += acc.y * time;\n    v.z += acc.z * time; \n\n};\n\n/*\n * Accelerate Factor accelerate based on a factor of particle's velocity.\n */\nSPARKS.AccelerateFactor = function(factor) {\n    this.factor = factor;\n};\n\nSPARKS.AccelerateFactor.prototype.update = function(emitter, particle, time) {\n    var factor = this.factor;\n    \n    var v = particle.velocity;\n\tvar len = v.length();\n\tvar adjFactor;\n    if (len>0) {\n\n\t\tadjFactor = factor * time / len;\n\t\tadjFactor += 1;\n\t\t\n\t\tv.multiplyScalar(adjFactor);\n\n\t}\n\n};\n\n/*\nAccelerateNormal\n * AccelerateVelocity affects velocity based on its velocity direction\n */\nSPARKS.AccelerateVelocity = function(factor) {\n\n\tthis.factor = factor;\n\n};\n\nSPARKS.AccelerateVelocity.prototype.update = function(emitter, particle, time) {\n    var factor = this.factor;\n\n    var v = particle.velocity;\n\n\n    v.z += - v.x * factor;\n    v.y += v.z * factor;\n    v.x +=  v.y * factor;\n\n};\n\n\n/* Set the max ammount of x,y,z drift movements in a second */\nSPARKS.RandomDrift = function(x,y,z) {\n\tif (x instanceof THREE.Vector3) {\n\t\tthis.drift = x;\n\t\treturn;\n\t}\n\n    this.drift = new THREE.Vector3(x,y,z);\n}\n\n\nSPARKS.RandomDrift.prototype.update = function(emitter, particle, time) {\n    var drift = this.drift;\n    \n    var v = particle.velocity;\n    \n    v.x += ( Math.random() - 0.5 ) * drift.x * time;\n    v.y += ( Math.random() - 0.5 ) * drift.y * time;\n    v.z += ( Math.random() - 0.5 ) * drift.z * time;\n\n};\n\n/********************************\n* Zone Classes\n*\n*   An abstract classes which have\n*   getLocation() function\n*********************************/\nSPARKS.Zone = function() {\n};\n\n// TODO, contains() for Zone\n\nSPARKS.PointZone = function(pos) {\n    this.pos = pos;\n};\n\nSPARKS.PointZone.prototype.getLocation = function() {\n    return this.pos;\n};\n\nSPARKS.PointZone = function(pos) {\n    this.pos = pos;\n};\n\nSPARKS.PointZone.prototype.getLocation = function() {\n    return this.pos;\n};\n\nSPARKS.LineZone = function(start, end) {\n    this.start = start;\n\tthis.end = end;\n\tthis._length = end.clone().sub( start );\n};\n\nSPARKS.LineZone.prototype.getLocation = function() {\n    var len = this._length.clone();\n\n\tlen.multiplyScalar( Math.random() );\n\treturn len.add( this.start );\n\t\n};\n\n// Basically a RectangleZone\nSPARKS.ParallelogramZone = function(corner, side1, side2) {\n    this.corner = corner;\n\tthis.side1 = side1;\n\tthis.side2 = side2;\n};\n\nSPARKS.ParallelogramZone.prototype.getLocation = function() {\n    \n\tvar d1 = this.side1.clone().multiplyScalar( Math.random() );\n\tvar d2 = this.side2.clone().multiplyScalar( Math.random() );\n\td1.add(d2);\n\treturn d1.add( this.corner );\n\t\n};\n\nSPARKS.CubeZone = function(position, x, y, z) {\n    this.position = position;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.z = z;\n};\n\nSPARKS.CubeZone.prototype.getLocation = function() {\n    //TODO use pool?\n\n\tvar location = this.position.clone();\n\tlocation.x += Math.random() * this.x;\n\tlocation.y += Math.random() * this.y;\n\tlocation.z += Math.random() * this.z;\n\t\n\treturn location;\n\t\n};\n\n\nSPARKS.CubeZone.prototype.contains = function(position) {\n\n\tvar startX = this.position.x;\n\tvar startY = this.position.y;\n\tvar startZ = this.position.z;\n\tvar x = this.x; // width\n\tvar y = this.y; // depth\n\tvar z = this.z; // height\n\t\n\tif (x<0) {\n\t\tstartX += x;\n\t\tx = Math.abs(x);\n\t}\n\t\n\tif (y<0) {\n\t\tstartY += y;\n\t\ty = Math.abs(y);\n\t}\n\t\n\tif (z<0) {\n\t\tstartZ += z;\n\t\tz = Math.abs(z);\n\t}\n\t\n\tvar diffX = position.x - startX;\n\tvar diffY = position.y - startY;\n\tvar diffZ = position.z - startZ;\n\t\n\tif ( (diffX > 0) && (diffX < x) && \n\t\t\t(diffY > 0) && (diffY < y) && \n\t\t\t(diffZ > 0) && (diffZ < z) ) {\n\t\treturn true;\n\t}\n\t\n\treturn false;\n\t\n};\n\n\n\n/**\n * The constructor creates a DiscZone 3D zone.\n * \n * @param centre The point at the center of the disc.\n * @param normal A vector normal to the disc.\n * @param outerRadius The outer radius of the disc.\n * @param innerRadius The inner radius of the disc. This defines the hole \n * in the center of the disc. If set to zero, there is no hole. \n */\n\n/*\n// BUGGY!!\nSPARKS.DiscZone = function(center, radiusNormal, outerRadius, innerRadius) {\n    this.center = center;\n\tthis.radiusNormal = radiusNormal;\n\tthis.outerRadius = (outerRadius==undefined) ? 0 : outerRadius;\n\tthis.innerRadius = (innerRadius==undefined) ? 0 : innerRadius;\n\t\n};\n\nSPARKS.DiscZone.prototype.getLocation = function() {\n    var rand = Math.random();\n\tvar _innerRadius = this.innerRadius;\n\tvar _outerRadius = this.outerRadius;\n\tvar center = this.center;\n\tvar _normal = this.radiusNormal;\n\t\n\t_distToOrigin = _normal.dot( center );\n\t\n\tvar radius = _innerRadius + (1 - rand * rand ) * ( _outerRadius - _innerRadius );\n\tvar angle = Math.random() * SPARKS.Utils.TWOPI;\n\t\n\tvar _distToOrigin = _normal.dot( center );\n\tvar axes = SPARKS.Utils.getPerpendiculars( _normal.clone() );\n\tvar _planeAxis1 = axes[0];\n\tvar _planeAxis2 = axes[1];\n\t\n\tvar p = _planeAxis1.clone();\n\tp.multiplyScalar( radius * Math.cos( angle ) );\n\tvar p2 = _planeAxis2.clone();\n\tp2.multiplyScalar( radius * Math.sin( angle ) );\n\tp.add( p2 );\n\treturn _center.add( p );\n\t\n};\n*/\n\nSPARKS.SphereCapZone = function(x, y, z, minr, maxr, angle) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.minr = minr;\n    this.maxr = maxr;\n    this.angle = angle;\n};\n\nSPARKS.SphereCapZone.prototype.getLocation = function() {\n    var theta = Math.PI *2  * SPARKS.Utils.random();\n    var r = SPARKS.Utils.random();\n    \n    //new THREE.Vector3\n    var v =  SPARKS.VectorPool.get().set(r * Math.cos(theta), -1 / Math.tan(this.angle * SPARKS.Utils.DEGREE_TO_RADIAN), r * Math.sin(theta));\n    \n    //v.length = StardustMath.interpolate(0, _minRadius, 1, _maxRadius, Math.random());\n            \n    var i = this.minr - ((this.minr-this.maxr) *  Math.random() );\n    v.multiplyScalar(i);\n\n\tv.__markedForReleased = true;\n    \n    return v;\n};\n\n\n/********************************\n* Initializer Classes\n*\n*   Classes which initializes\n*   particles. Implements initialize( emitter:Emitter, particle:Particle )\n*********************************/\n\n// Specifies random life between max and min\nSPARKS.Lifetime = function(min, max) {\n    this._min = min;\n    \n    this._max = max ? max : min;\n    \n};\n\nSPARKS.Lifetime.prototype.initialize = function( emitter/*Emitter*/, particle/*Particle*/ ) {\n    particle.lifetime = this._min + SPARKS.Utils.random() * ( this._max - this._min );\n};\n\n\nSPARKS.Position = function(zone) {\n    this.zone = zone;\n};\n\nSPARKS.Position.prototype.initialize = function( emitter/*Emitter*/, particle/*Particle*/ ) {\n    var pos = this.zone.getLocation();\n    particle.position.set(pos.x, pos.y, pos.z);\n};\n\nSPARKS.Velocity = function(zone) {\n    this.zone = zone;\n};\n\nSPARKS.Velocity.prototype.initialize = function( emitter/*Emitter*/, particle/*Particle*/ ) {\n    var pos = this.zone.getLocation();\n    particle.velocity.set(pos.x, pos.y, pos.z);\n\tif (pos.__markedForReleased) {\n\t\t//console.log(\"release\");\n\t\tSPARKS.VectorPool.release(pos);\n\t\tpos.__markedForReleased = false;\n\t}\n};\n\nSPARKS.Target = function(target, callback) {\n    this.target = target;\n    this.callback = callback;\n};\n\nSPARKS.Target.prototype.initialize = function( emitter, particle ) {\n\n    if (this.callback) {\n        particle.target = this.callback();\n    } else {\n        particle.target = this.target;\n    }\n\n};\n\n/********************************\n* VectorPool \n*\n*  Reuse much of Vectors if possible\n*********************************/\n\nSPARKS.VectorPool = {\n\t__pools: [],\n\n\t// Get a new Vector\n\tget: function() {\n\t\tif (this.__pools.length>0) {\n\t\t\treturn this.__pools.pop();\n\t\t}\n\t\t\n\t\treturn this._addToPool();\n\t\t\n\t},\n\t\n\t// Release a vector back into the pool\n\trelease: function(v) {\n\t\tthis.__pools.push(v);\n\t},\n\t\n\t// Create a bunch of vectors and add to the pool\n\t_addToPool: function() {\n\t\t//console.log(\"creating some pools\");\n\t\t\n\t\tfor (var i=0, size = 100; i < size; i++) {\n\t\t\tthis.__pools.push(new THREE.Vector3());\n\t\t}\n\t\t\n\t\treturn new THREE.Vector3();\n\t\t\n\t}\n\t\n\t\n\t\n};\n\n\n/********************************\n* Util Classes\n*\n*   Classes which initializes\n*   particles. Implements initialize( emitter:Emitter, particle:Particle )\n*********************************/\nSPARKS.Utils = {\n    random: function() {\n        return Math.random();\n    },\n    DEGREE_TO_RADIAN: Math.PI / 180,\n\tTWOPI: Math.PI * 2,\n\n\tgetPerpendiculars: function(normal) {\n\t\tvar p1 = this.getPerpendicular( normal );\n\t\tvar p2 = normal.cross( p1 );\n\t\tp2.normalize();\n\t\treturn [ p1, p2 ];\n\t},\n\t\n\tgetPerpendicular: function( v )\n\t{\n\t\tif( v.x == 0 )\n\t\t{\n\t\t\treturn new THREE.Vector3D( 1, 0, 0 );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar temp = new THREE.Vector3( v.y, -v.x, 0 );\n\t\t\treturn temp.normalize();\n\t\t}\n\t}\n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./libs/Sparks.js\n// module id = 92\n// module chunks = 2"],"sourceRoot":""}